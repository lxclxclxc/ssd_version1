cscope 15 $HOME/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed -q 0000002255 0000460519
	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/avlTree.c

1 
	~"avlTªe.h
"

13 
	$avlTªeHigh
(
TREE_NODE
 *
pNode
) {

14 
lh
 = 0, 
rh
 = 0;

15 i‡(!
pNode
)

18 
lh
 = 
	`avlTªeHigh
(
pNode
->
À·_chûd
);

19 
rh
 = 
	`avlTªeHigh
(
pNode
->
right_chûd
);

21  (1 + ((
lh
 > 
rh
) ?Üh :Ñh));

22 
	}
}

39 
	$avlTªeCheck
(
tAVLTªe
 *
pTªe
, 
TREE_NODE
 *
pNode
) {

40 
lh
 = 0, 
rh
 = 0;

41 
TREE_NODE
 *
åì_roŸ
 = 
AVL_NULL
;

43 i‡(!
pTªe
 || !
pNode
)

46 
lh
 = 
	`avlTªeHigh
(
pNode
->
À·_chûd
);

47 
rh
 = 
	`avlTªeHigh
(
pNode
->
right_chûd
);

48 i‡(
pNode
->
bf
 !
lh
 - 
rh
)

52 i‡(
pNode
->
À·_chûd
 && ((*
pTªe
->
keyCom∑ª
)(pNode,ÖNode->left_child)) >= 0)

56 i‡(
pNode
->
right_chûd
 && ((*
pTªe
->
keyCom∑ª
)(pNode,ÖNode->right_child)) <= 0)

60 
åì_roŸ
 = 
pNode
->tree_root;

61 i‡(!
åì_roŸ
 && (
pTªe
->
pTªeHódî
 !
pNode
))

64 i‡(
åì_roŸ
) {

69 i‡((
åì_roŸ
->
À·_chûd
 !
pNode
 &&Åªe_roŸ->
right_chûd
 !=ÖNode) ||

70 (
åì_roŸ
->
À·_chûd
 =
pNode
 &&Åªe_roŸ->
right_chûd
 ==ÖNode))

78 i‡((
pNode
->
À·_chûd
 &&ÖNode->À·_chûd->
åì_roŸ
 !=ÖNode) ||

79 (
pNode
->
right_chûd
 &&ÖNode->right_chûd->
åì_roŸ
 !=ÖNode))

82 i‡(
pNode
->
À·_chûd
 && !
	`avlTªeCheck
(
pTªe
,ÖNode->left_child))

85 i‡(
pNode
->
right_chûd
 && !
	`avlTªeCheck
(
pTªe
,ÖNode->right_child))

89 
	}
}

113 
	$R_RŸ©e
(
TREE_NODE
 **
µNode
) {

114 
TREE_NODE
 *
l_chûd
 = 
AVL_NULL
;

115 
TREE_NODE
 *
pNode
 = (TREE_NODE *Ë(*
µNode
);

117 
l_chûd
 = 
pNode
->
À·_chûd
;

118 
pNode
->
À·_chûd
 = 
l_chûd
->
right_chûd
;

119 i‡(
l_chûd
->
right_chûd
)

120 
l_chûd
->
right_chûd
->
åì_roŸ
 = 
pNode
;

121 
l_chûd
->
right_chûd
 = 
pNode
;

122 
l_chûd
->
åì_roŸ
 = 
pNode
->tree_root;

123 
pNode
->
åì_roŸ
 = 
l_chûd
;

124 (*
µNode
Ë
l_chûd
;

125 
	}
}

146 
	$L_RŸ©e
(
TREE_NODE
 **
µNode
) {

147 
TREE_NODE
 *
r_chûd
 = 
AVL_NULL
;

148 
TREE_NODE
 *
pNode
 = (TREE_NODE *Ë(*
µNode
);

150 
r_chûd
 = 
pNode
->
right_chûd
;

151 
pNode
->
right_chûd
 = 
r_chûd
->
À·_chûd
;

152 i‡(
r_chûd
->
À·_chûd
)

153 
r_chûd
->
À·_chûd
->
åì_roŸ
 = 
pNode
;

154 
r_chûd
->
À·_chûd
 = 
pNode
;

155 
r_chûd
->
åì_roŸ
 = 
pNode
->tree_root;

156 
pNode
->
åì_roŸ
 = 
r_chûd
;

157 (*
µNode
Ë
r_chûd
;

158 
	}
}

169 
	$Le·BÆ™˚
(
TREE_NODE
 **
µNode
) {

170 
TREE_NODE
 *
À·_chûd
 = 
AVL_NULL
;

171 
TREE_NODE
 *
right_chûd
 = 
AVL_NULL
;

172 
TREE_NODE
 *
åì_roŸ
 = 
AVL_NULL
;

173 
TREE_NODE
 *
pNode
 = (TREE_NODE *Ë(*
µNode
);

175 
åì_roŸ
 = 
pNode
->tree_root;

176 
À·_chûd
 = 
pNode
->left_child;

177 
À·_chûd
->
bf
) {

178 
LH_FACTOR
:

179 
pNode
->
bf
 = 
À·_chûd
->b‡
EH_FACTOR
;

180 
	`R_RŸ©e
(
µNode
);

182 
RH_FACTOR
:

184 
right_chûd
 = 
À·_chûd
->right_child;

185 
right_chûd
->
bf
) {

186 
LH_FACTOR
:

187 
pNode
->
bf
 = 
RH_FACTOR
;

188 
À·_chûd
->
bf
 = 
EH_FACTOR
;

190 
EH_FACTOR
:

191 
pNode
->
bf
 = 
À·_chûd
->b‡
EH_FACTOR
;

193 
RH_FACTOR
:

194 
pNode
->
bf
 = 
EH_FACTOR
;

195 
À·_chûd
->
bf
 = 
LH_FACTOR
;

198 
right_chûd
->
bf
 = 
EH_FACTOR
;

199 
	`L_RŸ©e
(&
pNode
->
À·_chûd
);

200 
	`R_RŸ©e
(
µNode
);

202 
EH_FACTOR
:

203 
pNode
->
bf
 = 
LH_FACTOR
;

204 
À·_chûd
->
bf
 = 
RH_FACTOR
;

205 
	`R_RŸ©e
(
µNode
);

208 (*
µNode
)->
åì_roŸ
 =Åree_root;

209 i‡(
åì_roŸ
 &&Åªe_roŸ->
À·_chûd
 =
pNode
)

210 
åì_roŸ
->
À·_chûd
 = *
µNode
;

211 i‡(
åì_roŸ
 &&Åªe_roŸ->
right_chûd
 =
pNode
)

212 
åì_roŸ
->
right_chûd
 = *
µNode
;

213 
	}
}

224 
	$RightBÆ™˚
(
TREE_NODE
 **
µNode
) {

225 
TREE_NODE
 *
À·_chûd
 = 
AVL_NULL
;

226 
TREE_NODE
 *
right_chûd
 = 
AVL_NULL
;

227 
TREE_NODE
 *
åì_roŸ
 = 
AVL_NULL
;

228 
TREE_NODE
 *
pNode
 = (TREE_NODE *Ë(*
µNode
);

230 
åì_roŸ
 = 
pNode
->tree_root;

231 
right_chûd
 = 
pNode
->right_child;

232 
right_chûd
->
bf
) {

233 
RH_FACTOR
:

234 
pNode
->
bf
 = 
right_chûd
->b‡
EH_FACTOR
;

235 
	`L_RŸ©e
(
µNode
);

237 
LH_FACTOR
:

238 
À·_chûd
 = 
right_chûd
->left_child;

239 
À·_chûd
->
bf
) {

240 
RH_FACTOR
:

241 
pNode
->
bf
 = 
LH_FACTOR
;

242 
right_chûd
->
bf
 = 
EH_FACTOR
;

244 
EH_FACTOR
:

245 
pNode
->
bf
 = 
right_chûd
->b‡
EH_FACTOR
;

247 
LH_FACTOR
:

248 
pNode
->
bf
 = 
EH_FACTOR
;

249 
right_chûd
->
bf
 = 
RH_FACTOR
;

252 
À·_chûd
->
bf
 = 
EH_FACTOR
;

253 
	`R_RŸ©e
(&
pNode
->
right_chûd
);

254 
	`L_RŸ©e
(
µNode
);

256 
EH_FACTOR
:

257 
pNode
->
bf
 = 
RH_FACTOR
;

258 
right_chûd
->
bf
 = 
LH_FACTOR
;

259 
	`L_RŸ©e
(
µNode
);

262 (*
µNode
)->
åì_roŸ
 =Åree_root;

263 i‡(
åì_roŸ
 &&Åªe_roŸ->
À·_chûd
 =
pNode
)

264 
åì_roŸ
->
À·_chûd
 = *
µNode
;

265 i‡(
åì_roŸ
 &&Åªe_roŸ->
right_chûd
 =
pNode
)

266 
åì_roŸ
->
right_chûd
 = *
µNode
;

267 
	}
}

290 
	gavlDñBÆ™˚


292 
tAVLTªe
 *
	gpTªe
,

293 
TREE_NODE
 *
	gpNode
,

294 
	gL_R_MINUS


296 
TREE_NODE
 *
	gåì_roŸ
 = 
AVL_NULL
;

298 
	gåì_roŸ
 = 
pNode
->
åì_roŸ
;

299 i‡(
	gL_R_MINUS
 =
LEFT_MINUS
) {

300 
pNode
->
bf
) {

301 
EH_FACTOR
:

302 
pNode
->
bf
 = 
RH_FACTOR
;

304 
	gRH_FACTOR
:

305 
RightBÆ™˚
(&
pNode
);

306 i‡(!
	gåì_roŸ
)

307 
	gpTªe
->
	gpTªeHódî
 = 
pNode
;

308 i‡(
	gpNode
->
	gåì_roŸ
 &&ÖNode->
	gbf
 =
EH_FACTOR
) {

309 i‡(
pNode
->
åì_roŸ
->
À·_chûd
 ==ÖNode)

310 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
LEFT_MINUS
);

312 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
RIGHT_MINUS
);

315 
	gLH_FACTOR
:

316 
pNode
->
bf
 = 
EH_FACTOR
;

317 i‡(
	gpNode
->
	gåì_roŸ
 &&ÖNode->
	gbf
 =
EH_FACTOR
) {

318 i‡(
pNode
->
åì_roŸ
->
À·_chûd
 ==ÖNode)

319 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
LEFT_MINUS
);

321 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
RIGHT_MINUS
);

327 i‡(
	gL_R_MINUS
 =
RIGHT_MINUS
) {

328 
pNode
->
bf
) {

329 
EH_FACTOR
:

330 
pNode
->
bf
 = 
LH_FACTOR
;

332 
	gLH_FACTOR
:

333 
Le·BÆ™˚
(&
pNode
);

334 i‡(!
	gåì_roŸ
)

335 
	gpTªe
->
	gpTªeHódî
 = 
pNode
;

336 i‡(
	gpNode
->
	gåì_roŸ
 &&ÖNode->
	gbf
 =
EH_FACTOR
) {

337 i‡(
pNode
->
åì_roŸ
->
À·_chûd
 ==ÖNode)

338 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
LEFT_MINUS
);

340 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
RIGHT_MINUS
);

343 
	gRH_FACTOR
:

344 
pNode
->
bf
 = 
EH_FACTOR
;

345 i‡(
	gpNode
->
	gåì_roŸ
 &&ÖNode->
	gbf
 =
EH_FACTOR
) {

346 i‡(
pNode
->
åì_roŸ
->
À·_chûd
 ==ÖNode)

347 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
LEFT_MINUS
);

349 
avlDñBÆ™˚
(
pTªe
, 
pNode
->
åì_roŸ
, 
RIGHT_MINUS
);

370 
	gAVL_TREE_LOCK


372 
tAVLTªe
 *
	gpTªe
,

373 
	gtimeout


375 i‡(!
	gpTªe


376 #i‡
OS
 == 3 || OS == 4

377 || !
	gpTªe
->
	g£m


382 #i‡
OS
 == 3 || OS == 4

383 
£mTake
(
pTªe
->
£m
,
timeout
);

397 
	gAVL_TREE_UNLOCK


399 
tAVLTªe
 *
	gpTªe


401 i‡(!
	gpTªe


402 #i‡
OS
 == 3 || OS == 4

403 || !
	gpTªe
->
	g£m


408 #i‡
OS
 == 3 || OS == 4

409 
£mGive
(
pTªe
->
£m
);

423 
	gAVL_TREENODE_FREE


425 
tAVLTªe
 *
	gpTªe
,

426 
TREE_NODE
 *
	gpNode


428 i‡(!
	gpTªe
 || !
	gpNode
)

431 (*
	gpTªe
->
	g‰ì
)(
	gpNode
);

435 #ifde‡
ORDER_LIST_WANTED


453 
	g‹dîLi°In£π


455 
tAVLTªe
 *
	gpTªe
,

456 
TREE_NODE
 *
	gpNode
,

457 
TREE_NODE
 *
	gpIn£πNode
,

458 
	g¥ev_‹_√xt


460 
TREE_NODE
 *
	gp
 = 
AVL_NULL
;

462 i‡(!
	gpNode
)

465 i‡(
	g¥ev_‹_√xt
 =
INSERT_PREV
) {

466 
p
 = 
pNode
->
¥ev
;

467 i‡(
	gp
Ëp->
	g√xt
 = 
pIn£πNode
;

468 
	gpTªe
->
	gpLi°Hódî
 = 
pIn£πNode
;

470 
	gpIn£πNode
->
	g¥ev
 = 
p
;

471 
	gpIn£πNode
->
	g√xt
 = 
pNode
;

472 
	gpNode
->
	g¥ev
 = 
pIn£πNode
;

475 i‡(
	g¥ev_‹_√xt
 =
INSERT_NEXT
) {

476 
p
 = 
pNode
->
√xt
;

477 i‡(
	gp
Ëp->
	g¥ev
 = 
pIn£πNode
;

478 
	gpTªe
->
	gpLi°Taû
 = 
pIn£πNode
;

480 
	gpIn£πNode
->
	g¥ev
 = 
pNode
;

481 
	gpIn£πNode
->
	g√xt
 = 
p
;

482 
	gpNode
->
	g√xt
 = 
pIn£πNode
;

499 
	g‹dîLi°Remove


501 
tAVLTªe
 *
	gpTªe
,

502 
TREE_NODE
 *
	gpRemoveNode


504 
TREE_NODE
 *
	gpPªv
 = 
AVL_NULL
;

505 
TREE_NODE
 *
	gpNext
 = 
AVL_NULL
;

507 i‡(!
	gpRemoveNode
)

510 
	gpPªv
 = 
pRemoveNode
->
¥ev
;

511 
	gpNext
 = 
pRemoveNode
->
√xt
;

512 i‡(!
	gpPªv
 && !
	gpNext
) {

513 
	gpTªe
->
	gpLi°Hódî
 = 
pTªe
->
pLi°Taû
 = 
AVL_NULL
;

516 i‡(
	gpPªv
 && 
	gpNext
) {

517 
	gpPªv
->
	g√xt
 = 
pNext
;

518 
	gpNext
->
	g¥ev
 = 
pPªv
;

522 i‡(
	gpPªv
) {

523 
	gpPªv
->
	g√xt
 = 
AVL_NULL
;

524 
	gpTªe
->
	gpLi°Taû
 = 
pPªv
;

528 i‡(
	gpNext
) {

529 
	gpNext
->
	g¥ev
 = 
AVL_NULL
;

530 
	gpTªe
->
	gpLi°Hódî
 = 
pNext
;

546 
TREE_NODE
 *
	gavlTªeFú°


548 
tAVLTªe
 *
	gpTªe


550 i‡(!
	gpTªe
)

551  
	gAVL_NULL
;

553 i‡(!
	gpTªe
->
	gcou¡
 || !pTªe->
	gpTªeHódî
)

554  
	gAVL_NULL
;

556  (
	gTREE_NODE
 *Ë
	gpTªe
->
	gpLi°Hódî
;

568 
TREE_NODE
 *
	gavlTªeLa°


570 
tAVLTªe
 *
	gpTªe


572 i‡(!
	gpTªe
)

573  
	gAVL_NULL
;

575 i‡(!
	gpTªe
->
	gcou¡
 || !pTªe->
	gpTªeHódî
)

576  
	gAVL_NULL
;

578  (
	gTREE_NODE
 *Ë
	gpTªe
->
	gpLi°Taû
;

589 
TREE_NODE
 *
	gavlTªeNext


591 
TREE_NODE
 *
	gpNode


593 i‡(!
	gpNode
)

594  
	gAVL_NULL
;

596  (
	gTREE_NODE
 *Ë
	gpNode
->
	g√xt
;

607 
TREE_NODE
 *
	gavlTªePªv


609 
TREE_NODE
 *
	gpNode


611 i‡(!
	gpNode
)

612  
	gAVL_NULL
;

614  (
	gTREE_NODE
 *Ë
	gpNode
->
	g¥ev
;

634 
	gavlTªeIn£π


636 
tAVLTªe
 *
	gpTªe
,

637 
TREE_NODE
 **
	gµNode
,

638 
TREE_NODE
 *
	gpIn£πNode
,

639 *
	ggrowthFœg


641 
	gcompFœg
 = 0;

642 
TREE_NODE
 *
	gpNode
 = (TREE_NODE *Ë(*
µNode
);

644 i‡(
	gpTªe
->
	gcou¡
 == 0) {

645 
pTªe
->
pTªeHódî
 = 
pIn£πNode
;

646 
	gpIn£πNode
->
	gbf
 = 
EH_FACTOR
;

647 
	gpIn£πNode
->
	gÀ·_chûd
 = 
pIn£πNode
->
right_chûd
 = 
AVL_NULL
;

648 
	gpIn£πNode
->
	gåì_roŸ
 = 
AVL_NULL
;

649 #ifde‡
ORDER_LIST_WANTED


650 
	gpTªe
->
	gpLi°Hódî
 = 
pTªe
->
pLi°Taû
 = 
pIn£πNode
;

651 
	gpIn£πNode
->
	g¥ev
 = 
pIn£πNode
->
√xt
 = 
AVL_NULL
;

656 
	gcompFœg
 = ((*
pTªe
->
keyCom∑ª
)(
pNode
, 
	gpIn£πNode
));

657 i‡(!
	gcompFœg
) {

658 *
	ggrowthFœg
 = 0;

662 i‡(
	gcompFœg
 < 0) {

663 i‡(!
	gpNode
->
	gÀ·_chûd
) {

664 
	gpNode
->
	gÀ·_chûd
 = 
pIn£πNode
;

665 
	gpIn£πNode
->
	gbf
 = 
EH_FACTOR
;

666 
	gpIn£πNode
->
	gÀ·_chûd
 = 
pIn£πNode
->
right_chûd
 = 
AVL_NULL
;

667 
	gpIn£πNode
->
	gåì_roŸ
 = (
TREE_NODE
 *Ë
pNode
;

668 #ifde‡
ORDER_LIST_WANTED


669 
‹dîLi°In£π
(
pTªe
, 
pNode
, 
pIn£πNode
, 
INSERT_PREV
);

671 
	gpNode
->
	gbf
) {

672 
	gEH_FACTOR
:

673 
pNode
->
bf
 = 
LH_FACTOR
;

674 *
	ggrowthFœg
 = 1;

676 
	gRH_FACTOR
:

677 
pNode
->
bf
 = 
EH_FACTOR
;

678 *
	ggrowthFœg
 = 0;

682 i‡(!
avlTªeIn£π
(
pTªe
, &
pNode
->
À·_chûd
, 
pIn£πNode
, 
growthFœg
))

685 i‡(*
	ggrowthFœg
) {

686 
	gpNode
->
	gbf
) {

687 
	gLH_FACTOR
:

688 
Le·BÆ™˚
(
µNode
);

689 *
	ggrowthFœg
 = 0;

691 
	gEH_FACTOR
:

692 
pNode
->
bf
 = 
LH_FACTOR
;

693 *
	ggrowthFœg
 = 1;

695 
	gRH_FACTOR
:

696 
pNode
->
bf
 = 
EH_FACTOR
;

697 *
	ggrowthFœg
 = 0;

704 i‡(
	gcompFœg
 > 0) {

705 i‡(!
	gpNode
->
	gright_chûd
) {

706 
	gpNode
->
	gright_chûd
 = 
pIn£πNode
;

707 
	gpIn£πNode
->
	gbf
 = 
EH_FACTOR
;

708 
	gpIn£πNode
->
	gÀ·_chûd
 = 
pIn£πNode
->
right_chûd
 = 
AVL_NULL
;

709 
	gpIn£πNode
->
	gåì_roŸ
 = (
TREE_NODE
 *Ë
pNode
;

710 #ifde‡
ORDER_LIST_WANTED


711 
‹dîLi°In£π
(
pTªe
, 
pNode
, 
pIn£πNode
, 
INSERT_NEXT
);

713 
	gpNode
->
	gbf
) {

714 
	gEH_FACTOR
:

715 
pNode
->
bf
 = 
RH_FACTOR
;

716 *
	ggrowthFœg
 = 1;

718 
	gLH_FACTOR
:

719 
pNode
->
bf
 = 
EH_FACTOR
;

720 *
	ggrowthFœg
 = 0;

724 i‡(!
avlTªeIn£π
(
pTªe
, &
pNode
->
right_chûd
, 
pIn£πNode
, 
growthFœg
))

727 i‡(*
	ggrowthFœg
) {

728 
	gpNode
->
	gbf
) {

729 
	gLH_FACTOR
:

730 
pNode
->
bf
 = 
EH_FACTOR
;

731 *
	ggrowthFœg
 = 0;

733 
	gEH_FACTOR
:

734 
pNode
->
bf
 = 
RH_FACTOR
;

735 *
	ggrowthFœg
 = 1;

737 
	gRH_FACTOR
:

738 
RightBÆ™˚
(
µNode
);

739 *
	ggrowthFœg
 = 0;

775 
	gavlTªeRemove


777 
tAVLTªe
 *
	gpTªe
,

778 
TREE_NODE
 *
	gpRemoveNode


780 
	gcompFœg
 = 0;

781 
TREE_NODE
 *
	gåì_roŸ
 = 
AVL_NULL
;

782 
TREE_NODE
 *
	gp
 = 
AVL_NULL
;

783 
TREE_NODE
 *
	groŸ_p
 = 
AVL_NULL
;

784 
TREE_NODE
 
	gsw≠Node
;

786 
	gåì_roŸ
 = 
pRemoveNode
->
åì_roŸ
;

787 i‡(!
	gpRemoveNode
->
	gÀ·_chûd
 && !pRemoveNode->
	gright_chûd
) {

788 i‡(!
	gåì_roŸ
) {

789 
	gpTªe
->
	gpTªeHódî
 = 
AVL_NULL
;

790 #ifde‡
ORDER_LIST_WANTED


791 
	gpTªe
->
	gpLi°Hódî
 = 
pTªe
->
pLi°Taû
 = 
AVL_NULL
;

794 } i‡(
	gåì_roŸ
->
	gÀ·_chûd
 =
pRemoveNode
) {

795 #ifde‡
ORDER_LIST_WANTED


796 
‹dîLi°Remove
(
pTªe
, 
pRemoveNode
);

798 
	gåì_roŸ
->
	gÀ·_chûd
 = 
AVL_NULL
;

799 
avlDñBÆ™˚
(
pTªe
, 
åì_roŸ
, 
LEFT_MINUS
);

801 #ifde‡
ORDER_LIST_WANTED


802 
‹dîLi°Remove
(
pTªe
, 
pRemoveNode
);

804 
	gåì_roŸ
->
	gright_chûd
 = 
AVL_NULL
;

805 
avlDñBÆ™˚
(
pTªe
, 
åì_roŸ
, 
RIGHT_MINUS
);

809 i‡(
	gpRemoveNode
->
	gÀ·_chûd
 &&ÖRemoveNode->
	gright_chûd
) {

810 
TREE_NODE
 *
	g¥ev
 = 
AVL_NULL
;

811 
TREE_NODE
 *
	g√xt
 = 
AVL_NULL
;

812 
TREE_NODE
 *
	gr_chûd
 = 
AVL_NULL
;

813 
	groŸ_p
 = 
pRemoveNode
;

814 
	gp
 = 
pRemoveNode
->
right_chûd
;

815 
	gp
->
	gÀ·_chûd
) {

816 
	groŸ_p
 = 
p
;

817 
	gp
 = 
p
->
À·_chûd
;

819 i‡(
	gp
 =
pRemoveNode
->
right_chûd
) {

820 
p
->
åì_roŸ
 =Ö;

821 
	gpRemoveNode
->
	gright_chûd
 = 
pRemoveNode
;

823 
	gsw≠Node
 = *
p
;

824 
	g¥ev
 = 
p
->
¥ev
;

825 
	g√xt
 = 
p
->
√xt
;

826 *
	gp
 = *
pRemoveNode
;

827 
	gp
->
	g¥ev
 = 
¥ev
;

828 
	gp
->
	g√xt
 = 
√xt
;

829 
	g¥ev
 = 
pRemoveNode
->
¥ev
;

830 
	g√xt
 = 
pRemoveNode
->
√xt
;

831 *
	gpRemoveNode
 = 
sw≠Node
;

832 
	gpRemoveNode
->
	g¥ev
 = 
¥ev
;

833 
	gpRemoveNode
->
	g√xt
 = 
√xt
;

834 i‡(!
	gåì_roŸ
)

835 
	gpTªe
->
	gpTªeHódî
 = 
p
;

836 i‡(
	gåì_roŸ
->
	gÀ·_chûd
 =
pRemoveNode
)

837 
åì_roŸ
->
À·_chûd
 = 
p
;

839 
	gåì_roŸ
->
	gright_chûd
 = 
p
;

841 i‡(
	gp
->
	gÀ·_chûd
)

842 
	gp
->
	gÀ·_chûd
->
	gåì_roŸ
 = 
p
;

843 i‡(
	gp
->
	gright_chûd
)

844 
	gp
->
	gright_chûd
->
	gåì_roŸ
 = 
p
;

846 i‡(
	gpRemoveNode
->
	gÀ·_chûd
)

847 
	gpRemoveNode
->
	gÀ·_chûd
->
	gåì_roŸ
 = 
pRemoveNode
;

848 i‡(
	gpRemoveNode
->
	gright_chûd
)

849 
	gpRemoveNode
->
	gright_chûd
->
	gåì_roŸ
 = 
pRemoveNode
;

851 i‡(
	groŸ_p
 !
pRemoveNode
) {

852 i‡(
roŸ_p
->
À·_chûd
 =
p
)

853 
roŸ_p
->
À·_chûd
 = 
pRemoveNode
;

855 
	groŸ_p
->
	gright_chûd
 = 
pRemoveNode
;

858  
avlTªeRemove
(
pTªe
, 
pRemoveNode
);

861 i‡(
	gpRemoveNode
->
	gÀ·_chûd
) {

862 #ifde‡
ORDER_LIST_WANTED


863 
‹dîLi°Remove
(
pTªe
, 
pRemoveNode
);

865 i‡(!
	gåì_roŸ
) {

866 
	gpTªe
->
	gpTªeHódî
 = 
pRemoveNode
->
À·_chûd
;

867 
	gpRemoveNode
->
	gÀ·_chûd
->
	gåì_roŸ
 = 
AVL_NULL
;

871 i‡(
	gåì_roŸ
->
	gÀ·_chûd
 =
pRemoveNode
) {

872 
åì_roŸ
->
À·_chûd
 = 
pRemoveNode
->left_child;

873 
	gpRemoveNode
->
	gÀ·_chûd
->
	gåì_roŸ
 = 
åì_roŸ
;

874 
avlDñBÆ™˚
(
pTªe
, 
åì_roŸ
, 
LEFT_MINUS
);

876 
	gåì_roŸ
->
	gright_chûd
 = 
pRemoveNode
->
À·_chûd
;

877 
	gpRemoveNode
->
	gÀ·_chûd
->
	gåì_roŸ
 = 
åì_roŸ
;

878 
avlDñBÆ™˚
(
pTªe
, 
åì_roŸ
, 
RIGHT_MINUS
);

884 i‡(
	gpRemoveNode
->
	gright_chûd
) {

885 #ifde‡
ORDER_LIST_WANTED


886 
‹dîLi°Remove
(
pTªe
, 
pRemoveNode
);

888 i‡(!
	gåì_roŸ
) {

889 
	gpTªe
->
	gpTªeHódî
 = 
pRemoveNode
->
right_chûd
;

890 
	gpRemoveNode
->
	gright_chûd
->
	gåì_roŸ
 = 
AVL_NULL
;

894 i‡(
	gåì_roŸ
->
	gÀ·_chûd
 =
pRemoveNode
) {

895 
åì_roŸ
->
À·_chûd
 = 
pRemoveNode
->
right_chûd
;

896 
	gpRemoveNode
->
	gright_chûd
->
	gåì_roŸ
 = 
åì_roŸ
;

897 
avlDñBÆ™˚
(
pTªe
, 
åì_roŸ
, 
LEFT_MINUS
);

899 
	gåì_roŸ
->
	gright_chûd
 = 
pRemoveNode
->
right_chûd
;

900 
	gpRemoveNode
->
	gright_chûd
->
	gåì_roŸ
 = 
åì_roŸ
;

901 
avlDñBÆ™˚
(
pTªe
, 
åì_roŸ
, 
RIGHT_MINUS
);

924 
TREE_NODE
 *
	gavlTªeLookup


926 
tAVLTªe
 *
	gpTªe
,

927 
TREE_NODE
 *
	gpNode
,

928 
TREE_NODE
 *
	gpSórchKey


930 
	gcompFœg
 = 0;

931 i‡(!
	gpTªe
 || !
	gpNode
)

932  
	gAVL_NULL
;

934 
	gcompFœg
 = (*
pTªe
->
keyCom∑ª
)(
pNode
, 
	gpSórchKey
);

935 i‡(!
	gcompFœg
)

936  (
	gTREE_NODE
 *Ë
	gpNode
;

938 i‡(
	gcompFœg
 > 0Ë
	gpNode
 = 
pNode
->
right_chûd
;

939 
	gpNode
 = 
pNode
->
À·_chûd
;

941  (
	gTREE_NODE
 *Ë
avlTªeLookup
(
pTªe
, 
pNode
, 
pSórchKey
);

956 
tAVLTªe
 *
	$avlTªeCª©e
(*
keyCom∑ªFunc
, *
‰ìFunc
) {

957 
tAVLTªe
 *
pTªe
 = (tAVLTree *) 0;

959 i‡(!
keyCom∑ªFunc
 || !
‰ìFunc
)

960  (
tAVLTªe
 *) 0;

962 
pTªe
 = (
tAVLTªe
 *Ë
	`mÆloc
((tAVLTree));

964 i‡(
pTªe
 !(
tAVLTªe
 *) 0) {

965 
	`mem£t
((*Ë
pTªe
, 0, (
tAVLTªe
));

966 
pTªe
->
keyCom∑ª
 = (*Ë
keyCom∑ªFunc
;

967 
pTªe
->
‰ì
 = (*Ë
‰ìFunc
;

968 #ifde‡
ORDER_LIST_WANTED


969 
pTªe
->
pLi°Hódî
 =ÖTªe->
pLi°Taû
 = 
AVL_NULL
;

972 #i‡
OS
 == 3 || OS == 4

973 
pTªe
->
£m
 = 
	`£mBCª©e
(0 , 1);

974 if(!
pTªe
->
£m
)

976 
	`‰ì
((*)
pTªe
);

977  (
tAVLTªe
 *)0;

982  (
tAVLTªe
 *Ë
pTªe
;

983 
	}
}

998 
	$avlTªeDñ
(
tAVLTªe
 *
pTªe
, 
TREE_NODE
 *
pDñNode
) {

999 
ªt
 = 0;

1001 i‡(!
pTªe
 || !
pDñNode
 || !pTªe->
cou¡
)

1004 
ªt
 = 
	`avlTªeRemove
(
pTªe
, 
pDñNode
);

1005 i‡(
ªt
)

1006 
pTªe
->
cou¡
--;

1009 
	}
}

1024 
	gavlTªeDe°roy


1026 
tAVLTªe
 *
	gpTªe


1028 
TREE_NODE
 *
	gpNode
 = 
AVL_NULL
;

1029 i‡(!
	gpTªe
)

1032 
	gpNode
 = 
pTªe
->
pTªeHódî
) {

1033 
avlTªeDñ
(
pTªe
, 
pNode
);

1034 
AVL_TREENODE_FREE
(
pTªe
, 
pNode
);

1037 i‡(!
	gpTªe
->
	gcou¡
 || !pTªe->
	gpTªeHódî
) {

1038 #i‡
OS
 == 3 || OS == 4

1039 
£mDñëe
(
pTªe
->
£m
);

1041 
‰ì
((*Ë
pTªe
);

1061 
	gavlTªeFlush


1063 
tAVLTªe
 *
	gpTªe


1065 
TREE_NODE
 *
	gpNode
 = 
AVL_NULL
;

1067 i‡(!
	gpTªe
)

1070 i‡(!
	gpTªe
->
	gcou¡
 || !pTªe->
	gpTªeHódî
)

1073 
	gpNode
 = 
pTªe
->
pTªeHódî
) {

1074 
avlTªeDñ
(
pTªe
, 
pNode
);

1075 
AVL_TREENODE_FREE
(
pTªe
, 
pNode
);

1095 
	gavlTªeAdd


1097 
tAVLTªe
 *
	gpTªe
,

1098 
TREE_NODE
 *
	gpIn£πNode


1100 
	ggrowthFœg
 = 0, 
	gªt
 = 0;

1102 i‡(!
	gpTªe
 || !
	gpIn£πNode
)

1105 
	gªt
 = 
avlTªeIn£π
(
pTªe
, &pTªe->
pTªeHódî
, 
pIn£πNode
, &
growthFœg
);

1106 i‡(
	gªt
)

1107 
	gpTªe
->
	gcou¡
++;

1108  
	gªt
;

1126 
TREE_NODE
 *
	gavlTªeFöd


1128 
tAVLTªe
 *
	gpTªe
,

1129 
TREE_NODE
 *
	gpKeyNode


1131 i‡(!
	gpTªe
 || !pTªe->
	gcou¡
 || !pTªe->
	gpTªeHódî
)

1132  
	gAVL_NULL
;

1134  (
	gTREE_NODE
 *Ë
avlTªeLookup
(
pTªe
,ÖTªe->
pTªeHódî
, 
pKeyNode
);

1148 
	gavlTªeCou¡


1150 
tAVLTªe
 *
	gpTªe


1152 i‡(!
	gpTªe
)

1155  
	gpTªe
->
	gcou¡
;

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/avlTree.h

1 #i‚de‡
AVLTREE_H


2 
	#AVLTREE_H
 10000

	)

4 
	~<°rög.h
>

5 
	~<mÆloc.h
>

6 
	~<°dlib.h
>

8 
	#AVL_NULL
 (
TREE_NODE
 *)0

	)

10 
	#EH_FACTOR
 0

	)

11 
	#LH_FACTOR
 1

	)

12 
	#RH_FACTOR
 -1

	)

13 
	#LEFT_MINUS
 0

	)

14 
	#RIGHT_MINUS
 1

	)

17 
	#ORDER_LIST_WANTED


	)

19 
	#INSERT_PREV
 0

	)

20 
	#INSERT_NEXT
 1

	)

22 
	s_AVL_TREE_NODE
 {

23 #ifde‡
ORDER_LIST_WANTED


24 
_AVL_TREE_NODE
 *
	m¥ev
;

25 
_AVL_TREE_NODE
 *
	m√xt
;

27 
_AVL_TREE_NODE
 *
	måì_roŸ
;

28 
_AVL_TREE_NODE
 *
	mÀ·_chûd
;

29 
_AVL_TREE_NODE
 *
	mright_chûd
;

30 
	mbf
;

31 } 
	tTREE_NODE
;

33 
	sbuf„r_öfo
 {

34 
	mªad_hô
;

35 
	mªad_miss_hô
;

36 
	mwrôe_hô
;

37 
	mwrôe_miss_hô
;

39 
buf„r_group
 *
	mbuf„r_hód
;

40 
buf„r_group
 *
	mbuf„r_èû
;

41 
TREE_NODE
 *
	mpTªeHódî
;

43 
	mmax_buf„r_£˘‹
;

44 
	mbuf„r_£˘‹_cou¡
;

46 #ifde‡
ORDER_LIST_WANTED


47 
TREE_NODE
 *
	mpLi°Hódî
;

48 
TREE_NODE
 *
	mpLi°Taû
;

50 
	mcou¡
;

51 (*
	mkeyCom∑ª
)(
	mTREE_NODE
 *, TREE_NODE *);

53 (*
	m‰ì
)(
	mTREE_NODE
 *);

54 } 
	ttAVLTªe
;

57 
avlTªeHigh
(
TREE_NODE
 *);

59 
avlTªeCheck
(
tAVLTªe
 *, 
TREE_NODE
 *);

61 
R_RŸ©e
(
TREE_NODE
 **);

63 
L_RŸ©e
(
TREE_NODE
 **);

65 
Le·BÆ™˚
(
TREE_NODE
 **);

67 
RightBÆ™˚
(
TREE_NODE
 **);

69 
avlDñBÆ™˚
(
tAVLTªe
 *, 
TREE_NODE
 *, );

71 
AVL_TREE_LOCK
(
tAVLTªe
 *, );

73 
AVL_TREE_UNLOCK
(
tAVLTªe
 *);

75 
AVL_TREENODE_FREE
(
tAVLTªe
 *, 
TREE_NODE
 *);

77 #ifde‡
ORDER_LIST_WANTED


79 
‹dîLi°In£π
(
tAVLTªe
 *, 
TREE_NODE
 *, TREE_NODE *, );

81 
‹dîLi°Remove
(
tAVLTªe
 *, 
TREE_NODE
 *);

83 
TREE_NODE
 *
avlTªeFú°
(
tAVLTªe
 *);

85 
TREE_NODE
 *
avlTªeLa°
(
tAVLTªe
 *);

87 
TREE_NODE
 *
avlTªeNext
(TREE_NODE *
pNode
);

89 
TREE_NODE
 *
avlTªePªv
(TREE_NODE *
pNode
);

93 
avlTªeIn£π
(
tAVLTªe
 *, 
TREE_NODE
 **, TREE_NODE *, *);

95 
avlTªeRemove
(
tAVLTªe
 *, 
TREE_NODE
 *);

97 
TREE_NODE
 *
avlTªeLookup
(
tAVLTªe
 *, TREE_NODE *, TREE_NODE *);

99 
tAVLTªe
 *
avlTªeCª©e
(*, *);

101 
avlTªeDe°roy
(
tAVLTªe
 *);

103 
avlTªeFlush
(
tAVLTªe
 *);

105 
avlTªeAdd
(
tAVLTªe
 *, 
TREE_NODE
 *);

107 
avlTªeDñ
(
tAVLTªe
 *, 
TREE_NODE
 *);

109 
TREE_NODE
 *
avlTªeFöd
(
tAVLTªe
 *, TREE_NODE *);

111 
avlTªeCou¡
(
tAVLTªe
 *);

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/flash.c

19 
	~"Êash.h
"

20 
	~"ssd.h
"

25 
Sètus
 
	$Æloˇã_loˇti⁄
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub_ªq
) {

26 
sub_ªque°
 *
upd©e
 = 
NULL
;

27 
ch™√l_num
 = 0, 
chù_num
 = 0, 
dõ_num
 = 0, 
∂™e_num
 = 0;

28 
loˇl
 *
loˇti⁄
 = 
NULL
;

30 
ch™√l_num
 = 
ssd
->
∑ømëî
->
ch™√l_numbî
;

31 
chù_num
 = 
ssd
->
∑ømëî
->
chù_ch™√l
[0];

32 
dõ_num
 = 
ssd
->
∑ømëî
->
dõ_chù
;

33 
∂™e_num
 = 
ssd
->
∑ømëî
->
∂™e_dõ
;

34 #ifde‡
DEBUG_CURR_TIME


35 
	`¥ötf
("cuºít_timêi†%Œd i¿Æloˇã_loˇti⁄ fun˘i⁄,ánd ssdsimÖ¨amëî hîêi† ch™√ um %d, chùnum %d, dõnum %d,Öœ√Çum%d\n", 
ssd
->
cuºít_time
, 
ch™√l_num
, 
chù_num
, 
dõ_num
, 
∂™e_num
);

39 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 0)

45 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
°©e
 != 0) {

46 i‡((
sub_ªq
->
°©e
 & 
ssd
->
døm
->
m≠
->
m≠_íåy
[sub_ªq->
Õn
].state) !=

47 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
°©e
) {

48 #ifde‡
DEBUG


49 
	`¥ötf
("©Üó° , wrôêªque° should bêÊushed i¡ÿÊashcuºít_timêi†%Œd i¿Æloˇã_loˇti⁄ fun˘i⁄\n", 
ssd
->
cuºít_time
);

52 
ssd
->
ªad_cou¡
++;

53 
ssd
->
upd©e_ªad_cou¡
++;

55 
upd©e
 = (
sub_ªque°
 *Ë
	`mÆloc
((sub_request));

56 
	`Æloc_as£π
(
upd©e
, "update");

57 
	`mem£t
(
upd©e
, 0, (
sub_ªque°
));

59 i‡(
upd©e
 =
NULL
) {

60  
ERROR
;

62 
upd©e
->
loˇti⁄
 = 
NULL
;

63 
upd©e
->
√xt_node
 = 
NULL
;

64 
upd©e
->
√xt_subs
 = 
NULL
;

65 
upd©e
->upd©ê
NULL
;

66 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, ssd->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
≤
);

67 
upd©e
->
loˇti⁄
 =Üocation;

68 
upd©e
->
begö_time
 = 
ssd
->
cuºít_time
;

69 
upd©e
->
cuºít_°©e
 = 
SR_WAIT
;

70 
upd©e
->
cuºít_time
 = 
MAX_INT64
;

71 #ifde‡
DEBUG_CURR_TIME


72 
	`¥ötf
("cuºít_timêi†%Œd i¿áŒoˇã_loˇti⁄ fun˘i⁄ m≠_íåy[xx].°©e!=0ánd dy«mi¯Æloˇti⁄\n", 
ssd
->
cuºít_time
);

75 
upd©e
->
√xt_°©e
 = 
SR_R_C_A_TRANSFER
;

76 
upd©e
->
√xt_°©e_¥edi˘_time
 = 
MAX_INT64
;

77 
upd©e
->
Õn
 = 
sub_ªq
->lpn;

78 
upd©e
->
°©e
 = ((
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].state ^ sub_req->state) & 0x7fffffff);

79 
upd©e
->
size
 = 
	`size
(upd©e->
°©e
);

80 
upd©e
->
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
≤
;

81 
upd©e
->
›î©i⁄
 = 
READ
;

84 i‡((
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
subs_r_hód
 !
NULL
 )&& (ssd->ch™√l_hód[loˇti⁄->ch™√l].
subs_r_èû
 !=

85 
NULL
) )

87 
	`¥ötf
("hereÜength isÇot 0 \n");

88 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
subs_r_èû
->
√xt_node
 = 
upd©e
;

89 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
subs_r_èû
 = 
upd©e
;

91 if(
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
chù_ªad_queue_Àngth
 != 0){

92 
	`¥ötf
("lxclxclxc,wrong \n");

94 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
subs_r_èû
 = 
upd©e
;

95 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
subs_r_hód
 = 
upd©e
;

104 
ssd
->
∑ømëî
->
dy«mic_Æloˇti⁄
) {

106 
sub_ªq
->
loˇti⁄
->
ch™√l
 = -1;

107 
sub_ªq
->
loˇti⁄
->
chù
 = -1;

108 
sub_ªq
->
loˇti⁄
->
dõ
 = -1;

109 
sub_ªq
->
loˇti⁄
->
∂™e
 = -1;

110 
sub_ªq
->
loˇti⁄
->
block
 = -1;

111 
sub_ªq
->
loˇti⁄
->
∑ge
 = -1;

113 i‡(
ssd
->
subs_w_èû
 !
NULL
) {

114 
ssd
->
subs_w_èû
->
√xt_node
 = 
sub_ªq
;

115 
ssd
->
subs_w_èû
 = 
sub_ªq
;

117 
ssd
->
subs_w_èû
 = 
sub_ªq
;

118 
ssd
->
subs_w_hód
 = 
sub_ªq
;

121 i‡(
upd©e
 !
NULL
) {

122 
sub_ªq
->
upd©e
 = update;

129 
sub_ªq
->
loˇti⁄
->
ch™√l
 = sub_ªq->
Õn
 % 
ssd
->
∑ømëî
->
ch™√l_numbî
;

130 
sub_ªq
->
loˇti⁄
->
chù
 = -1;

131 
sub_ªq
->
loˇti⁄
->
dõ
 = -1;

132 
sub_ªq
->
loˇti⁄
->
∂™e
 = -1;

133 
sub_ªq
->
loˇti⁄
->
block
 = -1;

134 
sub_ªq
->
loˇti⁄
->
∑ge
 = -1;

136 i‡(
upd©e
 !
NULL
) {

137 
sub_ªq
->
upd©e
 = update;

154 #ifde‡
DEBUGSUSPEND


155 
	`¥ötf
("hîêi†°©ic_Æloˇti⁄ i¿ÆloˇãÜoˇti⁄....,™d så©egy i†%d, \n", 
ssd
->
∑ømëî
->
°©ic_Æloˇti⁄
);

158 
ssd
->
∑ømëî
->
°©ic_Æloˇti⁄
) {

161 
sub_ªq
->
loˇti⁄
->
ch™√l
 = (sub_ªq->
Õn
 / (
∂™e_num
 * 
dõ_num
 * 
chù_num
)Ë% 
ch™√l_num
;

162 
sub_ªq
->
loˇti⁄
->
chù
 = sub_ªq->
Õn
 % 
chù_num
;

163 
sub_ªq
->
loˇti⁄
->
dõ
 = (sub_ªq->
Õn
 / 
chù_num
Ë% 
dõ_num
;

164 
sub_ªq
->
loˇti⁄
->
∂™e
 = (sub_ªq->
Õn
 / (
dõ_num
 * 
chù_num
)Ë% 
∂™e_num
;

168 
sub_ªq
->
loˇti⁄
->
ch™√l
 = sub_ªq->
Õn
 % 
ch™√l_num
;

169 
sub_ªq
->
loˇti⁄
->
chù
 = (sub_ªq->
Õn
 / 
ch™√l_num
Ë% 
chù_num
;

170 
sub_ªq
->
loˇti⁄
->
dõ
 = (sub_ªq->
Õn
 / (
chù_num
 * 
ch™√l_num
)Ë% 
dõ_num
;

171 
sub_ªq
->
loˇti⁄
->
∂™e
 = (sub_ªq->
Õn
 / (
dõ_num
 * 
chù_num
 * 
ch™√l_num
)Ë% 
∂™e_num
;

176 
sub_ªq
->
loˇti⁄
->
ch™√l
 = sub_ªq->
Õn
 % 
ch™√l_num
;

177 
sub_ªq
->
loˇti⁄
->
chù
 = (sub_ªq->
Õn
 / (
∂™e_num
 * 
ch™√l_num
)Ë% 
chù_num
;

178 
sub_ªq
->
loˇti⁄
->
dõ
 = (sub_ªq->
Õn
 / (
∂™e_num
 * 
chù_num
 * 
ch™√l_num
)Ë% 
dõ_num
;

179 
sub_ªq
->
loˇti⁄
->
∂™e
 = (sub_ªq->
Õn
 / 
ch™√l_num
Ë% 
∂™e_num
;

183 
sub_ªq
->
loˇti⁄
->
ch™√l
 = sub_ªq->
Õn
 % 
ch™√l_num
;

184 
sub_ªq
->
loˇti⁄
->
chù
 = (sub_ªq->
Õn
 / (
dõ_num
 * 
ch™√l_num
)Ë% 
chù_num
;

185 
sub_ªq
->
loˇti⁄
->
dõ
 = (sub_ªq->
Õn
 / 
ch™√l_num
Ë% 
dõ_num
;

186 
sub_ªq
->
loˇti⁄
->
∂™e
 = (sub_ªq->
Õn
 / (
dõ_num
 * 
chù_num
 * 
ch™√l_num
)Ë% 
∂™e_num
;

190 
sub_ªq
->
loˇti⁄
->
ch™√l
 = sub_ªq->
Õn
 % 
ch™√l_num
;

191 
sub_ªq
->
loˇti⁄
->
chù
 = (sub_ªq->
Õn
 / (
∂™e_num
 * 
dõ_num
 * 
ch™√l_num
)Ë% 
chù_num
;

192 
sub_ªq
->
loˇti⁄
->
dõ
 = (sub_ªq->
Õn
 / (
∂™e_num
 * 
ch™√l_num
)Ë% 
dõ_num
;

193 
sub_ªq
->
loˇti⁄
->
∂™e
 = (sub_ªq->
Õn
 / 
ch™√l_num
Ë% 
∂™e_num
;

198 
sub_ªq
->
loˇti⁄
->
ch™√l
 = sub_ªq->
Õn
 % 
ch™√l_num
;

199 
sub_ªq
->
loˇti⁄
->
chù
 = (sub_ªq->
Õn
 / (
∂™e_num
 * 
dõ_num
 * 
ch™√l_num
)Ë% 
chù_num
;

200 
sub_ªq
->
loˇti⁄
->
dõ
 = (sub_ªq->
Õn
 / 
ch™√l_num
Ë% 
dõ_num
;

201 
sub_ªq
->
loˇti⁄
->
∂™e
 = (sub_ªq->
Õn
 / (
dõ_num
 * 
ch™√l_num
)Ë% 
∂™e_num
;

206  
ERROR
;

210 #ifde‡
DEBUGSUSPEND


211 
	`¥ötf
("a·î sèti¯Æloˇti⁄.....now, wrôêªque° cª©ed i¿ch™√»%d, chù %d, dõ %d,Öœ√ %d\n",
sub_ªq
->
loˇti⁄
->
ch™√l
,sub_ªq->loˇti⁄->
chù
,sub_ªq->loˇti⁄->
dõ
, sub_ªq->loˇti⁄->
∂™e
);

215 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
°©e
 !=

217 i‡((
sub_ªq
->
°©e
 & 
ssd
->
døm
->
m≠
->
m≠_íåy
[sub_ªq->
Õn
].state) !=

218 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
°©e
) {

219 #ifde‡
DEBUGSUSPEND


220 
	`¥ötf
("should create update for writeÇow.\n");

223 
ssd
->
ªad_cou¡
++;

224 
ssd
->
upd©e_ªad_cou¡
++;

225 
upd©e
 = (
sub_ªque°
 *Ë
	`mÆloc
((sub_request));

226 
	`Æloc_as£π
(
upd©e
, "update");

227 
	`mem£t
(
upd©e
, 0, (
sub_ªque°
));

229 i‡(
upd©e
 == 0x0) {

230 #ifde‡
DEBUGSUSPEND


231 
	`¥ötf
("lxclxc, wrong in creating updateÑead for write .\n");

233  
ERROR
;

235 
upd©e
->
loˇti⁄
 = 
NULL
;

236 
upd©e
->
√xt_node
 = 
NULL
;

237 
upd©e
->
√xt_subs
 = 
NULL
;

238 
upd©e
->upd©ê
NULL
;

239 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, ssd->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
≤
);

240 if(
loˇti⁄
 == 0x0){

242 
	`¥ötf
("lxc, wrôe'†upd©êÕ¿%d, sizê%d,Ñeque° %Œd, o≥øti⁄ %d ha†wr⁄gÇow\n", 
sub_ªq
->
Õn
,sub_ªq->
size
, sub_ªq,sub_ªq->
›î©i⁄
);

243 
	`¥ötf
("lxclxc, wrong in creating updateÑead for write .\n");

245 
upd©e
->
loˇti⁄
 =Üocation;

246 
upd©e
->
begö_time
 = 
ssd
->
cuºít_time
;

247 #ifde‡
DEBUG_CURR_TIME


248 
	`¥ötf
("cuºít_timêi†%Œd i¿áŒoˇã_loˇti⁄ fun˘i⁄ m≠_íåy[xx].°©e!=0ánd sèti¯Æloˇti⁄\n", 
ssd
->
cuºít_time
);

252 
upd©e
->
cuºít_°©e
 = 
SR_WAIT
;

253 
upd©e
->
cuºít_time
 = 
MAX_INT64
;

254 
upd©e
->
√xt_°©e
 = 
SR_R_C_A_TRANSFER
;

255 
upd©e
->
√xt_°©e_¥edi˘_time
 = 
MAX_INT64
;

256 
upd©e
->
Õn
 = 
sub_ªq
->lpn;

257 
upd©e
->
°©e
 = ((
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].state ^ sub_req->state) & 0x7fffffff);

258 
upd©e
->
size
 = 
	`size
(upd©e->
°©e
);

259 
upd©e
->
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub_ªq
->
Õn
].
≤
;

260 
upd©e
->
›î©i⁄
 = 
READ
;

261 #ifde‡
DEBUGSUSPEND


262 
	`¥ötf
("hîêbuà•ecü»f‹ wrôe!!áddÑód, fú° sîvi˚Ñód,now.ÑódÜoˇti⁄ i†ch™√l%d, chù %d, dõ %d,∂™ê%d,Ö≤ %d\n",
upd©e
->
loˇti⁄
->
ch™√l
, upd©e->loˇti⁄->
chù
,upd©e->loˇti⁄->
dõ
,upd©e->loˇti⁄->
∂™e
 ,upd©e->
µn
 );

266 if–(
ssd
->
ch™√l_hód
[
upd©e
->
loˇti⁄
->
ch™√l
].
subs_r_hód
 !
NULL
)&&(ssd->ch™√l_hód[upd©e->loˇti⁄->ch™√l].
subs_r_èû
 != NULL) ){

267 #ifde‡
DEBUGSUSPEND


268 
	`¥ötf
("hîêmón†sus_r_èû i†nŸ NULL , hîêi†ch™√»[%d], chù [%d],ha†thêèûáddªs†%Œd,upd©êaddªs†i†%Œd\n",
upd©e
->
loˇti⁄
->
ch™√l
, upd©e->loˇti⁄->
chù
,
ssd
->
ch™√l_hód
[upd©e->loˇti⁄->ch™√l].
subs_r_èû
, update );

271 
ssd
->
ch™√l_hód
[
upd©e
->
loˇti⁄
->
ch™√l
].
subs_r_èû
->
√xt_node
 = update;

272 
ssd
->
ch™√l_hód
[
upd©e
->
loˇti⁄
->
ch™√l
].
subs_r_èû
 = update;

273 } i‡((
ssd
->
ch™√l_hód
[
upd©e
->
loˇti⁄
->
ch™√l
].
subs_r_hód
 =
NULL
Ë&& (ssd->ch™√l_hód[upd©e->loˇti⁄->ch™√l].
subs_r_èû
 == NULL)){

274 if(
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
chù_ªad_queue_Àngth
 != 0){

275 
	`¥ötf
("lxclxclxc, wrong\n");

278 
ssd
->
ch™√l_hód
[
upd©e
->
loˇti⁄
->
ch™√l
].
subs_r_èû
 = update;

279 
ssd
->
ch™√l_hód
[
upd©e
->
loˇti⁄
->
ch™√l
].
subs_r_hód
 = update;

281 
	`¥ötf
("lxclxclxc2,áddedÑead wrong\n");

283 #ifde‡
DEBUGSUSPEND


284 
	`¥ötf
("addedÑód hîêi†ch™√»[%d], chù [%d],ha†thêèûáddªs†%Œd,upd©êaddªs†i†%Œd\n",
upd©e
->
loˇti⁄
->
ch™√l
, upd©e->loˇti⁄->
chù
,
ssd
->
ch™√l_hód
[upd©e->loˇti⁄->ch™√l].
subs_r_èû
, update );

288 i‡(
upd©e
 !
NULL
) {

290 
sub_ªq
->
upd©e
 = update;

291 
sub_ªq
->
°©e
 = (sub_ªq->°©ê| 
upd©e
->state);

292 
sub_ªq
->
size
 = 
	`size
(sub_ªq->
°©e
);

295 
ssd
->
ch™√l_hód
[
upd©e
->
loˇti⁄
->
ch™√l
].
chù_hód
[upd©e->loˇti⁄->
chù
].
chù_ªad_queue_Àngth
 ++;

296 
	`¥ötf
("added upd©ê%Œd,Üoˇti⁄ i†%Œd\n",
upd©e
, upd©e->
loˇti⁄
);

297 if(
upd©e
->
loˇti⁄
 =
NULL
){

298 
	`¥ötf
("lxclxclxc_updatelocation wrong\n");

301 if(
upd©e
->
Õn
 > 16777216){

302 
	`¥ötf
("lxclxclxc_lpnwrong inÇow\n");

305 
	`¥ötf
("now ch™√»%d, chù %dÜígth i†%d, hódáddªs†%Œd,Åaûáddªs†%Œd , sub %Œd\n", 
loˇti⁄
->
ch™√l
,Üoˇti⁄->
chù
, 
ssd
->
ch™√l_hód
[loˇti⁄->ch™√l].
chù_hód
[loˇti⁄->chù].
chù_ªad_queue_Àngth
, ssd->ch™√l_hód[loˇti⁄->ch™√l].
subs_r_hód
,ssd->ch™√l_hód[loˇti⁄->ch™√l].
subs_r_èû
, 
upd©e
);

307 if(
upd©e
->
loˇti⁄
 =
NULL
){

309 
	`¥ötf
("√w cª©Ñód upd©êÜoˇti⁄ i†ch™√»%d, chù %d, dõ %d,Öœ√ %d\n",
loˇti⁄
->
ch™√l
,loˇti⁄->
chù
,loˇti⁄->
dõ
,loˇti⁄->
∂™e
);

319 if(
sub_ªq
->
loˇti⁄
 =
NULL
){

321 
	`¥ötf
("√w cª© wrôêloˇti⁄ i†ch™√»%d, chù %d, dõ %d,Öœ√ %d\n",
sub_ªq
->
loˇti⁄
->
ch™√l
,sub_ªq->loˇti⁄->
chù
,sub_ªq->loˇti⁄->
dõ
,sub_ªq->loˇti⁄->
∂™e
);

325 
ssd
->
ch™√l_hód
[
sub_ªq
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub_ªq->loˇti⁄->
chù
].
chù_wrôe_queue_Àngth
 ++;

326 #ifde‡
DEBUGSUSPEND


327 
	`¥ötf
("ch™√l[%d], chù[%d], wrôêÀngthádd o√ i†[%d]\n",
sub_ªq
->
loˇti⁄
->
ch™√l
, sub_ªq->loˇti⁄->
chù
, 
ssd
->
ch™√l_hód
[sub_ªq->loˇti⁄->ch™√l].
chù_hód
[sub_ªq->loˇti⁄->chù].
chù_wrôe_queue_Àngth
);

330 i‡((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 !0Ë|| (ssd->∑ømëî->
dy«mic_Æloˇti⁄
 != 0)) {

331 if–(
ssd
->
ch™√l_hód
[
sub_ªq
->
loˇti⁄
->
ch™√l
].
subs_w_èû
 !
NULL
Ë&& (ssd->ch™√l_hód[sub_ªq->loˇti⁄->ch™√l].
subs_w_hód
 != NULL) ) {

332 
ssd
->
ch™√l_hód
[
sub_ªq
->
loˇti⁄
->
ch™√l
].
subs_w_èû
->
√xt_node
 = sub_req;

333 
ssd
->
ch™√l_hód
[
sub_ªq
->
loˇti⁄
->
ch™√l
].
subs_w_èû
 = sub_req;

334 } if–(
ssd
->
ch™√l_hód
[
sub_ªq
->
loˇti⁄
->
ch™√l
].
subs_w_èû
 =
NULL
Ë&& (ssd->ch™√l_hód[sub_ªq->loˇti⁄->ch™√l].
subs_w_hód
 == NULL)){

335 
ssd
->
ch™√l_hód
[
sub_ªq
->
loˇti⁄
->
ch™√l
].
subs_w_èû
 = sub_req;

336 
ssd
->
ch™√l_hód
[
sub_ªq
->
loˇti⁄
->
ch™√l
].
subs_w_hód
 = sub_req;

338 
	`¥ötf
("writewrong\n");

348  
SUCCESS
;

349 
	}
}

355 
ssd_öfo
 *

356 
	$ö£π2buf„r
(
ssd_öfo
 *
ssd
, 
Õn
, 
°©e
, 
sub_ªque°
 *
sub
, 
ªque°
 *
ªq
) {

357 
wrôe_back_cou¡
, 
Êag
 = 0;

358 
i
, 
l¢
, 
hô_Êag
, 
add_Êag
, 
£˘‹_cou¡
, 
a˘ive_ªgi⁄_Êag
 = 0, 
‰ì_£˘‹
 = 0;

359 
buf„r_group
 *
buf„r_node
 = 
NULL
, *
±
, *
√w_node
 = NULL, 
key
;

360 
sub_ªque°
 *
sub_ªq
 = 
NULL
, *
upd©e
 = NULL;

363 
sub_ªq_°©e
 = 0, 
sub_ªq_size
 = 0, 
sub_ªq_Õn
 = 0;

365 #ifde‡
DEBUG_CURR_TIME


366 
	`¥ötf
("íã∏ö£π2buf„r,Åhi†i†ªÆÜ≤ (⁄êby o√Ë‰omÑó»ssd->ªque°_èû,Åh© món†Æsÿthê√wÑeque°. cuºíàtime:%Œd,Ü≤:%d, sèã:%d, .sÿbuf„r->èûÑeq'†l¢ i†%d, sizêi†%d, o≥øti⁄ i†%d\n",
ssd
->
cuºít_time
,
Õn
,
°©e
, 
ªq
->
l¢
,Ñeq->
size
,Ñeq->
›î©i⁄
);

369 
£˘‹_cou¡
 = 
	`size
(
°©e
);

370 
key
.
group
 = 
Õn
;

371 
buf„r_node
 = (
buf„r_group
 *Ë
	`avlTªeFöd
(
ssd
->
døm
->
buf„r
,

372 (
TREE_NODE
 *Ë&
key
);

381 #ifde‡
DEBUG


382 
	`¥ötf
("buf„r_nodêi†%d\n",
buf„r_node
);

384 i‡(
buf„r_node
 =
NULL
) {

385 #ifde‡
DEBUG


386 
	`¥ötf
("buffer_node hasÇot been hitted\n");

389 
‰ì_£˘‹
 = 
ssd
->
døm
->
buf„r
->
max_buf„r_£˘‹
 - ssd->døm->buf„r->
buf„r_£˘‹_cou¡
;

390 i‡(
‰ì_£˘‹
 >
£˘‹_cou¡
) {

391 
Êag
 = 1;

393 i‡(
Êag
 == 0) {

394 #ifde‡
DEBUG


395 
	`¥ötf
("buf„∏nŸ hô, fªe_£˘‹Ñemaöed i†%d,√ed wrôêötÿ£˘‹_cou¡ i†%d\n",
‰ì_£˘‹
, 
£˘‹_cou¡
);

398 
wrôe_back_cou¡
 = 
£˘‹_cou¡
 - 
‰ì_£˘‹
;

399 
ssd
->
døm
->
buf„r
->
wrôe_miss_hô
 = ssd->døm->buf„r->wrôe_miss_hô + 
wrôe_back_cou¡
;

400 
wrôe_back_cou¡
 > 0) {

401 
sub_ªq
 = 
NULL
;

402 
sub_ªq_°©e
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
°‹ed
;

403 #ifde‡
DEBUG


404 
	`¥ötf
("next is write back buffer sizeámount.\n");

406 
sub_ªq_size
 = 
	`size
(
ssd
->
døm
->
buf„r
->
buf„r_èû
->
°‹ed
);

407 
sub_ªq_Õn
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
group
;

408 
sub_ªq
 = 
	`¸ót_sub_ªque°
(
ssd
, 
sub_ªq_Õn
, 
sub_ªq_size
, 
sub_ªq_°©e
, 
ªq
, 
WRITE
);

417 i‡(
ªq
 !
NULL
) {

419 #ifde‡
DEBUG


420 
	`¥ötf
("opps,Çever happen \n");

422 
sub_ªq
->
√xt_subs
 = 
sub
->next_subs;

423 
sub
->
√xt_subs
 = 
sub_ªq
;

432 
ssd
->
døm
->
buf„r
->
buf„r_£˘‹_cou¡
 = ssd->døm->buf„r->buf„r_£˘‹_cou¡ - 
sub_ªq_size
;

434 
±
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
;

435 
	`avlTªeDñ
(
ssd
->
døm
->
buf„r
, (
TREE_NODE
 *Ë
±
);

436 i‡(
ssd
->
døm
->
buf„r
->
buf„r_hód
->
LRU_lök_√xt
 =
NULL
) {

437 
ssd
->
døm
->
buf„r
->
buf„r_hód
 = 
NULL
;

438 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = 
NULL
;

440 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = ssd->døm->buf„r->buf„r_èû->
LRU_lök_¥e
;

441 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
LRU_lök_√xt
 = 
NULL
;

443 
±
->
LRU_lök_√xt
 = 
NULL
;

444 
±
->
LRU_lök_¥e
 = 
NULL
;

445 
	`AVL_TREENODE_FREE
(
ssd
->
døm
->
buf„r
, (
TREE_NODE
 *Ë
±
);

446 
±
 = 
NULL
;

448 
wrôe_back_cou¡
 =

450 
wrôe_back_cou¡
 - 
sub_ªq_size
;

451 #ifde‡
DEBUG


452 
	`¥ötf
("⁄˚ wrôêö£π i¡ÿbuf„∏buàwrôeback fú°,áŒÇìd wrôêötÿ£˘‹êi†%d, buàthi†timêwrôeback i¡ÿ£˘‹ i†%d \n", 
wrôe_back_cou¡
, 
sub_ªq_size
);

460 #ifde‡
DEBUG


461 
	`¥ötf
("here makeá buffer-nodeánd insert into bufferÅree. shouldÖrintf here\n");

463 
√w_node
 = 
NULL
;

464 
√w_node
 = (
buf„r_group
 *Ë
	`mÆloc
((buffer_group));

465 
	`Æloc_as£π
(
√w_node
, "buffer_group_node");

466 
	`mem£t
(
√w_node
, 0, (
buf„r_group
));

468 
√w_node
->
group
 = 
Õn
;

469 
√w_node
->
°‹ed
 = 
°©e
;

470 
√w_node
->
dúty_˛ón
 = 
°©e
;

471 
√w_node
->
LRU_lök_¥e
 = 
NULL
;

472 
√w_node
->
LRU_lök_√xt
 = 
ssd
->
døm
->
buf„r
->
buf„r_hód
;

473 i‡(
ssd
->
døm
->
buf„r
->
buf„r_hód
 !
NULL
) {

474 
ssd
->
døm
->
buf„r
->
buf„r_hód
->
LRU_lök_¥e
 = 
√w_node
;

476 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = 
√w_node
;

478 
ssd
->
døm
->
buf„r
->
buf„r_hód
 = 
√w_node
;

479 
√w_node
->
LRU_lök_¥e
 = 
NULL
;

480 
	`avlTªeAdd
(
ssd
->
døm
->
buf„r
, (
TREE_NODE
 *Ë
√w_node
);

481 
ssd
->
døm
->
buf„r
->
buf„r_£˘‹_cou¡
 +
£˘‹_cou¡
;

489 #ifde‡
DEBUG


490 
	`¥ötf
("buffer_node hit\n");

493 
i
 = 0; i < 
ssd
->
∑ømëî
->
sub∑ge_∑ge
; i++) {

498 i‡((
°©e
 >> 
i
) % 2 != 0) {

499 
l¢
 = 
Õn
 * 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 + 
i
;

500 
hô_Êag
 = 0;

501 
hô_Êag
 = (
buf„r_node
->
°‹ed
Ë& (0x00000001 << 
i
);

503 i‡(
hô_Êag
 !=

506 
a˘ive_ªgi⁄_Êag
 = 1;

508 i‡(
ªq
 !
NULL
) {

509 i‡(
ssd
->
døm
->
buf„r
->
buf„r_hód
 !
buf„r_node
) {

510 i‡(
ssd
->
døm
->
buf„r
->
buf„r_èû
 =
buf„r_node
) {

511 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = 
buf„r_node
->
LRU_lök_¥e
;

512 
buf„r_node
->
LRU_lök_¥e
->
LRU_lök_√xt
 = 
NULL
;

513 } i‡(
buf„r_node
 !
ssd
->
døm
->
buf„r
->
buf„r_hód
) {

514 
buf„r_node
->
LRU_lök_¥e
->
LRU_lök_√xt
 = buffer_node->LRU_link_next;

515 
buf„r_node
->
LRU_lök_√xt
->
LRU_lök_¥e
 = buffer_node->LRU_link_pre;

517 
buf„r_node
->
LRU_lök_√xt
 = 
ssd
->
døm
->
buf„r
->
buf„r_hód
;

518 
ssd
->
døm
->
buf„r
->
buf„r_hód
->
LRU_lök_¥e
 = 
buf„r_node
;

519 
buf„r_node
->
LRU_lök_¥e
 = 
NULL
;

520 
ssd
->
døm
->
buf„r
->
buf„r_hód
 = 
buf„r_node
;

522 
ssd
->
døm
->
buf„r
->
wrôe_hô
++;

523 
ªq
->
com∂ëe_l¢_cou¡
++;

536 
ssd
->
døm
->
buf„r
->
wrôe_miss_hô
++;

538 i‡(
ssd
->
døm
->
buf„r
->
buf„r_£˘‹_cou¡
 >ssd->døm->buf„r->
max_buf„r_£˘‹
) {

539 i‡(
buf„r_node
 ==

540 
ssd
->
døm
->
buf„r
->
buf„r_èû
)

542 
±
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
LRU_lök_¥e
;

543 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
LRU_lök_¥e
 = 
±
->LRU_link_pre;

544 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
LRU_lök_¥e
->
LRU_lök_√xt
 = ssd->dram->buffer->buffer_tail;

545 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
LRU_lök_√xt
 = 
±
;

546 
±
->
LRU_lök_√xt
 = 
NULL
;

547 
±
->
LRU_lök_¥e
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
;

548 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = 
±
;

551 
sub_ªq
 = 
NULL
;

552 
sub_ªq_°©e
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
°‹ed
;

553 
sub_ªq_size
 = 
	`size
(
ssd
->
døm
->
buf„r
->
buf„r_èû
->
°‹ed
);

554 
sub_ªq_Õn
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
group
;

555 
sub_ªq
 = 
	`¸ót_sub_ªque°
(
ssd
, 
sub_ªq_Õn
, 
sub_ªq_size
, 
sub_ªq_°©e
, 
ªq
, 
WRITE
);

557 i‡(
ªq
 !
NULL
) {

559 } i‡(
ªq
 =
NULL
) {

560 
sub_ªq
->
√xt_subs
 = 
sub
->next_subs;

561 
sub
->
√xt_subs
 = 
sub_ªq
;

564 
ssd
->
døm
->
buf„r
->
buf„r_£˘‹_cou¡
 = ssd->døm->buf„r->buf„r_£˘‹_cou¡ - 
sub_ªq
->
size
;

565 
±
 = 
ssd
->
døm
->
buf„r
->
buf„r_èû
;

566 
	`avlTªeDñ
(
ssd
->
døm
->
buf„r
, (
TREE_NODE
 *Ë
±
);

572 i‡(
ssd
->
døm
->
buf„r
->
buf„r_hód
->
LRU_lök_√xt
 =
NULL
) {

573 
ssd
->
døm
->
buf„r
->
buf„r_hód
 = 
NULL
;

574 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = 
NULL
;

576 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = ssd->døm->buf„r->buf„r_èû->
LRU_lök_¥e
;

577 
ssd
->
døm
->
buf„r
->
buf„r_èû
->
LRU_lök_√xt
 = 
NULL
;

579 
±
->
LRU_lök_√xt
 = 
NULL
;

580 
±
->
LRU_lök_¥e
 = 
NULL
;

581 
	`AVL_TREENODE_FREE
(
ssd
->
døm
->
buf„r
, (
TREE_NODE
 *Ë
±
);

582 
±
 = 
NULL
;

586 
add_Êag
 = 0x00000001 << (
l¢
 % 
ssd
->
∑ømëî
->
sub∑ge_∑ge
);

588 i‡(
ssd
->
døm
->
buf„r
->
buf„r_hód
 !=

589 
buf„r_node
)

591 i‡(
ssd
->
døm
->
buf„r
->
buf„r_èû
 =
buf„r_node
) {

592 
buf„r_node
->
LRU_lök_¥e
->
LRU_lök_√xt
 = 
NULL
;

593 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = 
buf„r_node
->
LRU_lök_¥e
;

595 
buf„r_node
->
LRU_lök_¥e
->
LRU_lök_√xt
 = buffer_node->LRU_link_next;

596 
buf„r_node
->
LRU_lök_√xt
->
LRU_lök_¥e
 = buffer_node->LRU_link_pre;

598 
buf„r_node
->
LRU_lök_√xt
 = 
ssd
->
døm
->
buf„r
->
buf„r_hód
;

599 
ssd
->
døm
->
buf„r
->
buf„r_hód
->
LRU_lök_¥e
 = 
buf„r_node
;

600 
buf„r_node
->
LRU_lök_¥e
 = 
NULL
;

601 
ssd
->
døm
->
buf„r
->
buf„r_hód
 = 
buf„r_node
;

603 
buf„r_node
->
°‹ed
 = buf„r_node->°‹ed | 
add_Êag
;

604 
buf„r_node
->
dúty_˛ón
 = buf„r_node->dúty_˛ó¿| 
add_Êag
;

605 
ssd
->
døm
->
buf„r
->
buf„r_£˘‹_cou¡
++;

612  
ssd
;

613 
	}
}

618 
Sètus


619 
	$föd_a˘ive_block
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
) {

620 
a˘ive_block
;

621 
‰ì_∑ge_num
 = 0;

622 
cou¡
 = 0;

624 
a˘ive_block
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].active_block;

625 
‰ì_∑ge_num
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].free_page_num;

627 (
‰ì_∑ge_num
 =0Ë&& (
cou¡
 < 
ssd
->
∑ømëî
->
block_∂™e
)) {

628 
a˘ive_block
 = (a˘ive_block + 1Ë% 
ssd
->
∑ømëî
->
block_∂™e
;

629 
‰ì_∑ge_num
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].free_page_num;

630 
cou¡
++;

632 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
a˘ive_block
 =áctive_block;

633 i‡(
cou¡
 < 
ssd
->
∑ømëî
->
block_∂™e
) {

634  
SUCCESS
;

636  
FAILURE
;

638 
	}
}

644 
Sètus
 
	$wrôe_∑ge
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

645 
a˘ive_block
, *
µn
) {

646 
œ°_wrôe_∑ge
 = 0;

647 
œ°_wrôe_∑ge
 = ++(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].last_write_page);

648 i‡(
œ°_wrôe_∑ge
 >(Ë(
ssd
->
∑ømëî
->
∑ge_block
)) {

649 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
œ°_wrôe_∑ge
 = 0;

650 
	`¥ötf
("error!ÅheÜast writeÖageÜargerÅhan 64!!\n");

651  
ERROR
;

654 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
‰ì_∑ge_num
--;

655 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
‰ì_∑ge
--;

656 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
∑ge_hód
[
œ°_wrôe_∑ge
].
wrôãn_cou¡
++;

657 
ssd
->
wrôe_Êash_cou¡
++;

658 *
µn
 = 
	`föd_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
a˘ive_block
, 
œ°_wrôe_∑ge
);

660  
SUCCESS
;

661 
	}
}

666 
sub_ªque°
 *

667 
	$¸ót_sub_ªque°
(
ssd_öfo
 *
ssd
, 
Õn
, 
size
, 
°©e
, 
ªque°
 *
ªq
,

668 
›î©i⁄
) {

669 
sub_ªque°
 *
sub
 = 
NULL
, *
sub_r
 = NULL;

670 
ch™√l_öfo
 *
p_ch
 = 
NULL
;

671 
loˇl
 *
loc
 = 
NULL
;

672 
Êag
 = 0;

674 
sub
 = (
sub_ªque°
 *Ë
	`mÆloc
((sub_request));

675 
	`Æloc_as£π
(
sub
, "sub_request");

676 
	`mem£t
(
sub
, 0, (
sub_ªque°
));

678 i‡(
sub
 =
NULL
) {

679  
NULL
;

681 
sub
->
loˇti⁄
 = 
NULL
;

682 
sub
->
√xt_node
 = 
NULL
;

683 
sub
->
√xt_subs
 = 
NULL
;

684 
sub
->
upd©e
 = 
NULL
;

686 i‡(
ªq
 !
NULL
) {

687 
sub
->
√xt_subs
 = 
ªq
->
subs
;

688 
ªq
->
subs
 = 
sub
;

690 #ifde‡
DEBUG


691 
	`¥ötf
("íã∏¸ót_sub_ªque°.!!!!!!!⁄˚ o√ buf„r->èûÉÀmít.sÿthêªqánd sizêi†righàªq„ÄÇnŸÅhêssd->ªque°_èû'†ªque°!!!!!! o≥øti⁄ i†%d,Ñeq i†%x“ÿ0 i†nÿNULL),Õ¿i†%d, sizêi†%d, sèã i†%d\n",
›î©i⁄
, 
ªq
, 
Õn
, 
size
, 
°©e
);

697 i‡(
›î©i⁄
 =
READ
) {

698 
loc
 = 
	`föd_loˇti⁄
(
ssd
, ssd->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
);

701 if(
loc
 == 0x0){

703 
	`¥ötf
("lx˛x˛xc,Õ¿%d, sizê%d,Ñeque° %Œd, o≥øti⁄ %d ha†wr⁄gÇow\n", 
Õn
, 
size
, 
ªq
, 
›î©i⁄
);

705 if(
Õn
 > 16777216){

706 
	`¥ötf
("lxclxclxc_lpnwrong inÇow\n");

708 
sub
->
loˇti⁄
 = 
loc
;

709 
sub
->
begö_time
 = 
ssd
->
cuºít_time
;

710 
sub
->
cuºít_°©e
 = 
SR_WAIT
;

711 
sub
->
cuºít_time
 = 
MAX_INT64
;

712 
sub
->
√xt_°©e
 = 
SR_R_C_A_TRANSFER
;

713 
sub
->
√xt_°©e_¥edi˘_time
 = 
MAX_INT64
;

714 
sub
->
Õn
 =Üpn;

715 
sub
->
size
 = size;

718 
p_ch
 = &
ssd
->
ch™√l_hód
[
loc
->
ch™√l
];

719 
sub
->
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
;

720 
sub
->
›î©i⁄
 = 
READ
;

721 
sub
->
°©e
 = (
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].state & 0x7fffffff);

722 
sub_r
 = 
p_ch
->
subs_r_hód
;

723 
Êag
 = 0;

724 
sub_r
 !
NULL
) {

725 i‡(
sub_r
->
µn
 =
sub
->ppn) {

726 
Êag
 = 1;

729 
sub_r
 = sub_r->
√xt_node
;

731 #ifde‡
DEBUG


732 
	`¥ötf
("Êag i†%d *** 1 món†thîêi†ßmêsubªque° i¿queuê0 i†›posôe\n",
Êag
);

734 i‡(
Êag
 == 0) {

735 #ifde‡
DEBUG


736 
	`¥ötf
("sub†queuêö£πÑód,Êag=0Åhí in£π sub†ötÿpch %d\n",
loc
->
ch™√l
);

741 #ifde‡
DEBUGSUSPEND


742 
	`¥ötf
("⁄ly hîêadd chù'†ªadÜígth,√w cª©ÑódÜoˇti⁄ i†ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d\n",
loc
->
ch™√l
,Üoc->
chù
,Üoc->
dõ
,Üoc->
∂™e
, 
sub
->
µn
);

745 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
chù_ªad_queue_Àngth
 ++;

749 
ãmp_Àngth
 = 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
chù_ªad_queue_Àngth
;

752 #ifde‡
DEBUGSUSPEND


753 
	`¥ötf
("chù_ªad_queue_Àngthádd o√Çow i†%d,[ch™√»%d, chù %d] sîvi˚d_timêi†%Œd\n", 
ãmp_Àngth
,
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->
£rvi˚d_time
);

759 if––
p_ch
->
subs_r_hód
 !
NULL
Ë&& (p_ch->
subs_r_èû
 != NULL)){

760 
	`¥ötf
("length isÇot 1\n");

761 
p_ch
->
subs_r_èû
->
√xt_node
 = 
sub
;

762 
p_ch
->
subs_r_èû
 = 
sub
;

763 } if((
p_ch
->
subs_r_hód
 =
NULL
) && (p_ch->subs_r_head == NULL)){

765 
p_ch
->
subs_r_hód
 = 
sub
;

766 
p_ch
->
subs_r_èû
 = 
sub
;

768 
	`¥ötf
("lxclxclxc,Ñeadádded wrongÇow\n");

776 if(
sub
->
loˇti⁄
 =
NULL
){

777 
	`¥ötf
("lxclxclxc_readlocation wrong\n");

782 #ifde‡
DEBUG


783 
	`¥ötf
("sub†queuê°©u†ch™gê°©ê‰om SR_R_DATA_RANSFERÅÿ√xt_°©êcom∂ëê™d subÇexàtime=+1000,Êag=1Öch i† %d\n",
p_ch
);

786 
	`¥ötf
("read dont haveÅo be inserted 1000Çow\n");

787 
sub
->
cuºít_°©e
 = 
SR_R_DATA_TRANSFER
;

788 
sub
->
cuºít_time
 = 
ssd
->current_time;

789 #ifde‡
DEBUG_CURR_TIME


790 
	`¥ötf
("sub_cuºít_timêi†%Œd , ssd_cuºít_timêi†%Œd i¿¸ót_sub_ªque° fun˘i⁄\n", 
sub
->
cuºít_time
,
ssd
->current_time);

793 
sub
->
√xt_°©e
 = 
SR_COMPLETE
;

794 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 1000;

795 
sub
->
com∂ëe_time
 = 
ssd
->
cuºít_time
 + 1000;

801 i‡(
›î©i⁄
 =
WRITE
) {

802 
sub
->
µn
 = 0;

803 
sub
->
›î©i⁄
 = 
WRITE
;

804 
sub
->
loˇti⁄
 = (
loˇl
 *Ë
	`mÆloc
((local));

805 
	`Æloc_as£π
(
sub
->
loˇti⁄
, "sub->location");

806 
	`mem£t
(
sub
->
loˇti⁄
, 0, (
loˇl
));

808 
sub
->
cuºít_°©e
 = 
SR_WAIT
;

809 
sub
->
cuºít_time
 = 
ssd
->current_time;

810 
sub
->
Õn
 =Üpn;

811 
sub
->
size
 = size;

812 
sub
->
°©e
 = state;

813 
sub
->
begö_time
 = 
ssd
->
cuºít_time
;

815 i‡(
	`Æloˇã_loˇti⁄
(
ssd
, 
sub
Ë=
ERROR
) {

816 
	`¥ötf
("lxc, must mark here, create writeÑequest fail!!\n");

817 
	`‰ì
(
sub
->
loˇti⁄
);

818 
sub
->
loˇti⁄
 = 
NULL
;

819 
	`‰ì
(
sub
);

820 
sub
 = 
NULL
;

821  
NULL
;

825 
	`¥ötf
("opps!,Çever happen\n");

826 
	`‰ì
(
sub
->
loˇti⁄
);

827 
sub
->
loˇti⁄
 = 
NULL
;

828 
	`‰ì
(
sub
);

829 
sub
 = 
NULL
;

830 
	`¥ötf
("\nERROR ! Unexpected command.\n");

831  
NULL
;

834  
sub
;

835 
	}
}

841 
sub_ªque°
 *

842 
	$föd_ªad_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
) {

843 
∂™e
 = 0;

844 
addªss_µn
 = 0;

845 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

847 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

848 
addªss_µn
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
add_ªg_µn
;

849 #ifde‡
DEBUG


853 i‡(
addªss_µn
 != -1) {

854 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
;

855 i‡(
sub
->
µn
 =
addªss_µn
) {

857  
sub
;

860 i‡(
sub
->
√xt_node
 =
NULL
) {

861 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
 = 
NULL
;

862 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_èû
 = 
NULL
;

864 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
 = 
sub
->
√xt_node
;

866 (
sub
->
µn
 !
addªss_µn
Ë&& (sub->
√xt_node
 !
NULL
)) {

867 i‡(
sub
->
√xt_node
->
µn
 =
addªss_µn
) {

868 
p
 = 
sub
->
√xt_node
;

870  
p
;

873 i‡(
p
->
√xt_node
 =
NULL
) {

874 
sub
->
√xt_node
 = 
NULL
;

875 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_èû
 = 
sub
;

877 
sub
->
√xt_node
 = 
p
->next_node;

879 
sub
 = 
p
;

882 
sub
 = sub->
√xt_node
;

884 i‡(
sub
->
µn
 =
addªss_µn
) {

885 
sub
->
√xt_node
 = 
NULL
;

886 
	`¥ötf
("födÑód sub , subÖ≤ i†%d\n",
sub
->
µn
);

887  
sub
;

889 
	`¥ötf
("Error! Can't findÅhe subÑequest.");

893  
NULL
;

894 
	}
}

901 
sub_ªque°
 *
	$föd_wrôe_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
) {

902 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

903 i‡((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =0Ë&& (ssd->∑ømëî->
dy«mic_Æloˇti⁄
 == 0))

905 
sub
 = 
ssd
->
subs_w_hód
;

906 
sub
 !
NULL
) {

907 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

908 i‡(
sub
->
upd©e
 !
NULL
)

910 i‡((
sub
->
upd©e
->
cuºít_°©e
 =
SR_COMPLETE
Ë|| ((sub->upd©e->
√xt_°©e
 == SR_COMPLETE) &&

911 (
sub
->
upd©e
->
√xt_°©e_¥edi˘_time
 <=

912 
ssd
->
cuºít_time
)))

920 
p
 = 
sub
;

921 
sub
 = sub->
√xt_node
;

924 i‡(
sub
 ==

925 
NULL
)

927  
NULL
;

930 i‡(
sub
 !
ssd
->
subs_w_hód
) {

931 i‡(
sub
 !
ssd
->
subs_w_èû
) {

932 
p
->
√xt_node
 = 
sub
->next_node;

934 
ssd
->
subs_w_èû
 = 
p
;

935 
ssd
->
subs_w_èû
->
√xt_node
 = 
NULL
;

938 i‡(
sub
->
√xt_node
 !
NULL
) {

939 
ssd
->
subs_w_hód
 = 
sub
->
√xt_node
;

941 
ssd
->
subs_w_hód
 = 
NULL
;

942 
ssd
->
subs_w_èû
 = 
NULL
;

945 
sub
->
√xt_node
 = 
NULL
;

946 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
 !
NULL
) {

947 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
->
√xt_node
 = 
sub
;

948 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
 = 
sub
;

950 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
 = 
sub
;

951 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 = 
sub
;

959 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

960 
sub
 !
NULL
) {

961 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

962 i‡(
sub
->
upd©e
 !
NULL
) {

963 i‡((
sub
->
upd©e
->
cuºít_°©e
 =
SR_COMPLETE
Ë|| ((sub->upd©e->
√xt_°©e
 == SR_COMPLETE) &&

964 (
sub
->
upd©e
->
√xt_°©e_¥edi˘_time
 <=

965 
ssd
->
cuºít_time
)))

973 
p
 = 
sub
;

974 
sub
 = sub->
√xt_node
;

977 i‡(
sub
 =
NULL
) {

978  
NULL
;

982  
sub
;

983 
	}
}

986 
	$£rvi˚s_2_wrôe_busy_ö_chù
(
ssd_öfo
 *
ssd
)

989 
i
 = 0;

990 
j
 = 0;

991 
Has_ªad_ªque°
 = 0;

992 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

993 
sub_ªque°
 *
sub_f‹_ªad
 = 
NULL
;

994 
sub_ªque°
 *
ã°_sub
 = 
NULL
;

996 #ifde‡
DEBUGSUSPEND


997 
	`¥ötf
("services_2_write_busy_in_chip function go into.\n");

1001 
i
 = 0; i <

1002 
ssd
->
∑ømëî
->
ch™√l_numbî
; 
i
++)

1016 
j
 = 0; j < 
ssd
->
ch™√l_hód
[
i
].
chù
; j++){

1017 #ifde‡
DEBUG


1018 
	`¥ötf
("evîyÅimê¥o˚s†fun˘i⁄Ç‹mÆ m⁄i°îÇewe°Çum_w_cy˛êvÆuêhîêthê%d ch™√», %d chù,Çum_w_wrôêi†%d.\n",
i
 ,
j
, 
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
num_w_cy˛e
 );

1020 if(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
wrôe_¥ìm±ive_sign
 == 1) {

1021 #ifde‡
DEBUGSUSPEND


1022 
	`¥ötf
("hîêi†wrôêÖªem±ivê! jum∞out,ándÇowÅhê%d ch™√», %d chù,Çum_w_wrôêi†%d.\n",
i
 ,
j
, 
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
num_w_cy˛e
 );

1029 i‡(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
cuºít_°©e
 !
CHIP_WRITE_DATA_CMD_BUSY
){

1031 i‡(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
cuºít_°©e
 !
CHIP_WRITE_BUSY
) {

1032 #ifde‡
DEBUGSUSPEND


1033 
	`¥ötf
("here chip isÇot write status ! jump out.\n");

1045 if(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
√xt_°©e_¥edi˘_time
 <ssd->
cuºít_time
){

1048 if(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
cuºít_°©e
 =
CHIP_WRITE_DATA_CMD_BUSY
){

1050 
sub
 = 
ssd
->
ch™√l_hód
[
i
].
subs_w_hód
;

1051 
sub
 !
NULL
){

1052 if–(
sub
->
cuºít_°©e
 =
SR_W_C_A_DATA_TRANSFER
Ë&& (sub->
loˇti⁄
->
chù
 =
j
) ){

1055 
sub
 = sub->
√xt_node
;

1057 if(
sub
 =
NULL
){

1058 
	`¥ötf
("error happen,Üxclxclxc\n");

1063 
ã°_sub
 = 
ssd
->
ch™√l_hód
[
i
].
subs_w_hód
;

1064 
ã°_sub
 !
NULL
){

1065 if–
ã°_sub
->
loˇti⁄
->
chù
 =
j
 ){

1068 
ã°_sub
 =Åe°_sub->
√xt_node
;

1070 if(
sub
 !
ã°_sub
){

1071 
	`¥ötf
("lx˛x˛xc1.£riou¶y wr⁄g, fú°_wrôe_sub cuºít_°©êi†%d,Çext_°©êi†%d\n", 
ã°_sub
->
cuºít_°©e
,Åe°_sub->
√xt_°©e
);

1073 
	`¥ötf
("lxclxclxc2.right\n");

1076 #ifde‡
DEBUGSUSPEND


1077 
	`¥ötf
("now i†judgög föish síd_wrôe_cmdÖro˚ss,™dÅhêsub'†ch™√»%d, chù %d , block %d,Öagê%d(block,∑gêha†nŸ inôüÀd hîe)\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1080 i‡–(
sub
->
cuºít_°©e
 =
SR_W_C_A_DATA_TRANSFER
Ë&& (sub->
√xt_°©e
 =
SR_W_DATA_TRANSFER
) ) {

1082 #ifde‡
DEBUGSUSPEND


1083 
	`¥ötf
("now wû»go_⁄e_°ï f‹ föishög síd_wrôe_cmdÖro˚ss,™dÅhêsub'†ch™√»%d, chù %d , block %d,Öagê%d(block,∑gêha†nŸ inôüÀd hîe)\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1086 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_W_DATA_TRANSFER_ONE_PROG_OF_ITERATIONS
, 
NORMAL
);

1088 #ifde‡
DEBUGSUSPEND


1089 
	`¥ötf
("bef‹Çum_w_cy˛êadd 1 i†%d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1091 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
 += 1;

1093 #ifde‡
DEBUGSUSPEND


1094 
	`¥ötf
("a·îÇum_w_cy˛êadd 1 i†%d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1100 #ifde‡
DEBUGSUSPEND


1101 
	`¥ötf
("beginÅo judge for suspendÅhe write,now.\n");

1105 
Has_ªad_ªque°
 = 0;

1106 
sub_f‹_ªad
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

1107 
sub_f‹_ªad
 !
NULL
)

1110 if(
sub_f‹_ªad
->
loˇti⁄
->
chù
 =
j
)

1114 
sub_f‹_ªad
 = sub_f‹_ªad->
√xt_node
 ;

1116 if(
sub_f‹_ªad
 !
NULL
){

1117 
Has_ªad_ªque°
 = 1;

1118 #ifde‡
DEBUGSUSPEND


1119 
	`¥ötf
("suspend!!!!!Çowáfter send_cmd do suspend forÑead\n");

1122 
	`¥ötf
("wrôêsu•ídÖosôi⁄ i†ö ju° föish síd_ªad_cmd .Çum_w_cyl˚ i† %d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1125 #ifde‡
DEBUGSUSPEND


1126 
	`¥ötf
("don'tÇeedÅo suspend.\n");

1133 if(
Has_ªad_ªque°
 == 1) {

1134 
ssd
->
wrôe_su•íd_times
 ++;

1136 
	`¥ötf
("wrôêsu•ídÅime†i†%d\n", 
ssd
->
wrôe_su•íd_times
);

1137 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
wrôe_¥ìm±ive_sign
 = 1;

1140 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1141 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 = 
UNKNOWN
;

1142 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

1143 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + (7+2Ë* ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

1144 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
°‹edsub
 = sub;

1146 
	`¥ötf
("statistic_suspendsion_write, 0\n");

1149 
	`¥ötf
("°‹esub o≥øti⁄. chù: %d,Ü≤: %d,Ö≤: %d o≥øti⁄: %d,size: %d, ////sub_ªque° sètus:: cuºít_°©e: %d, cuºít_time: %Œu,Çext_°©e: %d,Çext_°©e_¥edi˘_time: %Œu, sèã(⁄ly f‹ wrôe): %d\n", 
sub
->
loˇti⁄
->
chù
, sub->
Õn
, sub->
µn
,sub->
›î©i⁄
, sub->
size
, sub->
cuºít_°©e
, sub->
cuºít_time
,sub->
√xt_°©e
, sub->
√xt_°©e_¥edi˘_time
, sub->
°©e
) ;

1152 
	`¥ötf
("wrôêsu•ídÖosôi⁄ i†ôî©i⁄.Çum_w_cyl˚ i† %d, st‹ed sub i†%Œd, sub i†%Œd\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
, ssd->ch™√l_hód[sub->loˇti⁄->ch™√l].chù_hód[sub->loˇti⁄->chù].
°‹edsub
, sub);

1168 if–(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
num_w_cy˛e
 <= 10) && (ssd->channel_head[i].chip_head[j].num_w_cycle >= 1) ){

1173 
sub
 = 
ssd
->
ch™√l_hód
[
i
].
subs_w_hód
;

1174 
sub
 !
NULL
){

1175 if–((
sub
->
cuºít_°©e
 =
SR_W_DATA_TRANSFER
Ë&& (sub->
loˇti⁄
->
chù
 =
j
)) ) {

1178 
sub
 = sub->
√xt_node
;

1180 if(
sub
 =
NULL
){

1181 
	`¥ötf
("error happen,Üxclxclxc\n");

1186 i‡((
sub
->
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
Ë&& (ssd->
ch™√l_hód
[sub->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
 == 10) ) {

1188 #ifde‡
DEBUGSUSPEND


1189 
	`¥ötf
("now wû»åyÅÿdÿœ° vîifyÇow sub'†ch™√»%d, chù %d , block %d,Öagê%d(block,∑gêha†nŸ inôüÀd hîe)\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1191 #ifde‡
DEBUGSUSPEND


1192 
	`¥ötf
("sub cuºít_ßèã i†(%d)=SR_COMPLETE o∏sub->√xt_°©êi†(%d)=SR_COMPLETE,\n",
sub
->
cuºít_°©e
, sub->
√xt_°©e
);

1196 if(
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 =
CHIP_WRITE_BUSY
){

1197 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_IDLE
;

1202 #ifde‡
DEBUGSUSPEND


1203 
	`¥ötf
("begin get_ppn operationÇow,\n");

1206 
sub
->
com∂ëe_time
 = sub->
√xt_°©e_¥edi˘_time
;

1207 
sub
->
√xt_°©e
 = 
SR_COMPLETE
;

1210 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub);

1212 #ifde‡
DEBUGSUSPEND


1213 
	`¥ötf
("begin delete shownábove sub_writeÇow\n");

1216 
	`dñëe_w_sub_ªque°
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub);

1217 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
 = 0;

1238 if–(
sub
->
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
Ë&& (ssd->
ch™√l_hód
[sub->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
 < 10) && (ssd->channel_head[sub->location->channel].chip_head[sub->location->chip].num_w_cycle > 0) ) {

1239 #ifde‡
DEBUGSUSPEND


1240 
	`¥ötf
("now wû» dÿn‹mÆ iãøti⁄Çow sub'†ch™√»%d, chù %d , block %d,Öagê%d(block,∑gêha†nŸ inôüÀd hîe)\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1243 #ifde‡
DEBUGSUSPEND


1244 
	`¥ötf
("now gÿötÿwrôê3.2.2!! %d ch™√l, %d chù,Çum_w_cy˛ê%d\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
,
ssd
->
ch™√l_hód
[sub->loˇti⁄->ch™√l].
chù_hód
[sub->loˇti⁄->chù].
num_w_cy˛e
 );

1247 if–((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
) % 2) == 1 ){

1249 
	`go_⁄e_°ï
–
ssd
, 
sub
, 
NULL
,
SR_W_DATA_TRANSFER_ONE_VERIFY_OF_ITERATIONS
, 
NORMAL
);

1251 #ifde‡
DEBUGSUSPEND


1252 
	`¥ötf
("bef‹Çum_w_cy˛êadd 1 i†%d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1254 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
 += 1;

1256 #ifde‡
DEBUGSUSPEND


1257 
	`¥ötf
("a·îÇum_w_cy˛êadd 1 i†%d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1261 #ifde‡
DEBUGSUSPEND


1262 
	`¥ötf
("bef‹Çum_w_cy˛êadd 1 i†%d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1264 
	`go_⁄e_°ï
–
ssd
, 
sub
, 
NULL
, 
SR_W_DATA_TRANSFER_ONE_PROG_OF_ITERATIONS
, 
NORMAL
);

1265 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
 += 1;

1267 #ifde‡
DEBUGSUSPEND


1268 
	`¥ötf
("a·îÇum_w_cy˛êadd 1 i†%d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1271 if–(
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
) == 10){

1272 #ifde‡
DEBUGSUSPEND


1273 
	`¥ötf
("num_w_cycle == 10\n");

1281 if–((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
Ë=6Ë&& (((sub->loˇti⁄->
∂™e
) % 2) == 1) ){

1285 #ifde‡
DEBUGSUSPEND


1286 
	`¥ötf
("now wû»åyÅÿdÿœ° vîifyÇow sub'†ch™√»%d, chù %d , block %d,Öagê%d(block,∑gêha†nŸ inôüÀd hîe)\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1287 
	`¥ötf
("now wû»åyÅÿdÿœ° vîifyÇow sub'†ch™√»%d, chù %d , block %d,Öagê%d(block,∑gêha†nŸ inôüÀd hîe)\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1289 #ifde‡
DEBUGSUSPEND


1290 
	`¥ötf
("sub cuºít_ßèã i†(%d)=SR_COMPLETE o∏sub->√xt_°©êi†(%d)=SR_COMPLETE,\n",
sub
->
cuºít_°©e
, sub->
√xt_°©e
);

1294 if(
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 =
CHIP_WRITE_BUSY
){

1295 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_IDLE
;

1300 #ifde‡
DEBUGSUSPEND


1301 
	`¥ötf
("begin get_ppn operationÇow,\n");

1304 
sub
->
com∂ëe_time
 = sub->
√xt_°©e_¥edi˘_time
;

1305 
sub
->
√xt_°©e
 = 
SR_COMPLETE
;

1308 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub);

1310 #ifde‡
DEBUGSUSPEND


1311 
	`¥ötf
("begin delete shownábove sub_writeÇow\n");

1314 
	`dñëe_w_sub_ªque°
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub);

1315 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
 = 0;

1328 #ifde‡
DEBUGSUSPEND


1329 
	`¥ötf
("beginÅo judge for suspendÅhe write,now.\n");

1332 
Has_ªad_ªque°
 = 0;

1333 
sub_f‹_ªad
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

1334 
sub_f‹_ªad
 !
NULL
)

1337 if(
sub_f‹_ªad
->
loˇti⁄
->
chù
 =
j
)

1341 
sub_f‹_ªad
 = sub_f‹_ªad->
√xt_node
 ;

1343 if(
sub_f‹_ªad
 !
NULL
){

1344 
Has_ªad_ªque°
 = 1;

1345 #ifde‡
DEBUGSUSPEND


1346 
	`¥ötf
("su•íd!!!!!Çow durögÖrogøm dÿsu•íd f‹Ñód,Çum_w_cy˛e%d\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
);

1350 #ifde‡
DEBUGSUSPEND


1351 
	`¥ötf
("don'tÇeedÅo suspendÇow \n");

1357 if(
Has_ªad_ªque°
 == 1) {

1359 
ssd
->
wrôe_su•íd_times
 ++;

1360 
	`¥ötf
("wrôêsu•ídÅime†i†%d\n", 
ssd
->
wrôe_su•íd_times
);

1361 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
wrôe_¥ìm±ive_sign
 = 1;

1364 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1365 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 = 
UNKNOWN
;

1366 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

1367 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + (7+2Ë* ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

1369 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
°‹edsub
 = sub;

1370 
	`¥ötf
("°©i°ic_su•ísi⁄_wrôe, %d, %Œd\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
, ssd->
cuºít_time
);

1372 
	`¥ötf
("wrôêsu•ídÖosôi⁄ i†ôî©i⁄.Çum_w_cyl˚ i† %d, st‹ed sub i†%Œd\n",
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
num_w_cy˛e
, ssd->ch™√l_hód[sub->loˇti⁄->ch™√l].chù_hód[sub->loˇti⁄->chù].
°‹edsub
);

1387 #ifde‡
DEBUG


1388 
	`¥ötf
("ssd->ch™√l_hód[%d].chù_hód[%d].√xt_°©e_¥edi˘_time[%Œd] i†nŸ <ssd->cuºít_time[%Œd],sÿgivêup\n", 
i
, 
j
, 
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
√xt_°©e_¥edi˘_time
,ssd->
cuºít_time
);

1397  
SUCCESS
;

1399 
	}
}

1405 
	$åy_to_ª°‹e_gc_fun˘i⁄
(
ssd_öfo
 *
ssd
, 
gc_›î©i⁄
 *
gc_node
, 
ch™√l
, 
chù
)

1407 
j
 = -1;

1409 
j
 = 
	`judgög_ªad_ö_gc_chù
(
ssd
, 
ch™√l
);

1410 if(
j
 == 1){

1411 
gc_node
->
sign_f‹_¥ìm±ive
 = 0;

1412 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
gc_node
->
chù_°©us
;

1413 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + 
gc_node
->
chù_√xt_¥edi˘_time_diff
;

1415 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
gc_node
->
chù_√xt_°©us
;

1416 
	`¥ötf
("now g¯ˇ¿bêª°‹ed hîe,ch™√»i†%d \n", 
ch™√l
);

1417 
	`¥ötf_gc_node_öf‹m©i⁄
(
gc_node
);

1418 #ifde‡
DEBUGSUSPEND


1419 
	`¥ötf
("now gc can beÑestored here\n");

1423 #ifde‡
DEBUG


1424 
	`¥ötf
("now gc can'tÑestore here, forÅhereáreÑeads here.\n");

1427 
	}
}

1433 
	$gc_åy_to_su•íd_fun˘i⁄
(
ssd_öfo
 *
ssd
, 
gc_›î©i⁄
 *
gc_node
, 
ch™√l
, 
chù
, 
cuºít_°©e
, 
√xt_°©e
, 
time
)

1435 
j
 = -1;

1437 
j
 = 
	`judgög_ªad_ö_gc_chù
(
ssd
, 
ch™√l
);

1440 if(
j
 == 0){

1441 
gc_node
->
chù_°©us
 = 
cuºít_°©e
;

1442 
gc_node
->
chù_√xt_°©us
 = 
√xt_°©e
;

1443 
gc_node
->
sign_f‹_¥ìm±ive
 = 1;

1444 
gc_node
->
chù_√xt_¥edi˘_time_diff
 = 
time
;

1446 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
UNKNOWN
;

1449 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1450 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1451 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 +(7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
) ;

1455 
ssd
->
gc_su•íd_times
 ++;

1456 
	`¥ötf
("°©i°ic_su•ísi⁄_gc, vi˘im_block_numbî,ªad, wrôe, wrôe_ö√r,Éø£, ch™√l, chù, dõ,Öœ√, cuºít_timê%d,%d,%d,%d,%d, %d,%d,%d,%d,%Œd\n", 
gc_node
->
vi˘im_block_numbî
, gc_node->
ªad
, gc_node->
wrôe
, gc_node->
gc_wrôe_ö√r
, gc_node->
îa£
, 
ch™√l
, gc_node->
chù
, gc_node->
dõ
, gc_node->
∂™e
, 
ssd
->
cuºít_time
);

1457 
	`¥ötf
("g¯su•ídÅime†i†%d\n", 
ssd
->
gc_su•íd_times
);

1458 
	`¥ötf
("now inÖreemptive state here\n");

1459 
	`¥ötf_gc_node_öf‹m©i⁄
(
gc_node
);

1460 #ifde‡
DEBUG


1461 
	`¥ötf
("now inÖreemptive state here\n");

1465 #ifde‡
DEBUG


1466 
	`¥ötf
("dont haveÅo suspend here\n");

1469 
	}
}

1478 
	$£rvi˚s_2_gc_busy_ö_chù
(
ssd_öfo
 *
ssd
)

1480 
i
 = 0;

1481 
j
 = 0;

1482 
gc_›î©i⁄
 *
gc_node
 = 
NULL
;

1483 
cuºít_°©e
 = 0, 
√xt_°©e
 = 0;

1484 
√xt_°©e_¥edi˘_time
 = 0;

1486 
loˇl
 *
loˇti⁄
 = 
NULL
;

1487 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
å™s„r_size
;

1488 #ifde‡
DEBUG


1489 
	`¥ötf
("go into gc busyÖrocess here\n");

1493 if(
ssd
->
debug_sign
 == 1){

1504 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

1506 
gc_node
 = 
ssd
->
ch™√l_hód
[
i
].
gc_comm™d
;

1509 if(
gc_node
 =
NULL
){

1510 #ifde‡
DEBUGONLYGC


1511 
	`¥ötf
("hîêch™√»%d ha†nÿg¯! jum∞out.\n", 
i
);

1515 
ch™√l
 = 
i
;

1516 
chù
 = 
gc_node
->chip;

1517 
dõ
 = 
gc_node
->die;

1518 
∂™e
 = 
gc_node
->plane;

1519 
block
 = 
gc_node
->block;

1521 i‡(
gc_node
->
sign_f‹_¥ìm±ive
 == 1){

1522 #ifde‡
DEBUGONLYGC


1523 
	`¥ötf
("here is gcÖreemptive ! jump out.\n");

1529 #ifde‡
DEBUGONLYGC


1531 
	`¥ötf
("hîêi†ch™√»%d begö gc_busy_dó»now.\n", 
i
);

1532 
	`¥ötf_gc_node_öf‹m©i⁄
 (
gc_node
);

1536 i‡(
gc_node
 !
NULL
) {

1537 #ifde‡
DEBUG


1538 
	`¥ötf
("gc must be unNULL sinceÅhis isÅhe channel gc.\n");

1541 
cuºít_°©e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].current_state;

1542 
√xt_°©e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].next_state;

1543 
√xt_°©e_¥edi˘_time
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].next_state_predict_time;

1547 if–(
cuºít_°©e
 !
CHIP_GC_RW_BUSY
Ë&& (cuºít_°©ê!
CHIP_ERASE_BUSY
) ) {

1549 #ifde‡
DEBUG


1550 
	`¥ötf
("here channel's chip isÇot gc status ! jump out.\n");

1563 i‡((
gc_node
->
ªad_wrôe_íd
 =-1Ë&& (
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
)){

1564 #ifde‡
DEBUG


1565 
	`¥ötf
("inÑead_transfer_writeÖart\n");

1568 #ifde‡
DEBUG


1569 
	`¥ötf_ssd_gc_node
(
ssd
);

1576 if–(
gc_node
->
ªad
 =1Ë&& (gc_node->
wrôe
 =0Ë&& (gc_node->
gc_ªad_ö√r
 == 0)) {

1577 #ifde‡
DEBUG


1578 
	`¥ötf
("g¯ªadÖha£,Ñód iãøti⁄†i†%d,™d i¬î sequí˚ i†%d \n", 
gc_node
->
ªad
, gc_node->
gc_ªad_ö√r
);

1584 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_GC_RW_BUSY
;

1585 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1586 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1588 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
;

1591 
gc_node
->
gc_ªad_ö√r
 = 1;

1595 if–
	`gc_åy_to_su•íd_fun˘i⁄
(
ssd
, 
gc_node
, 
ch™√l
, 
chù
, 
CHIP_GC_RW_BUSY
, 
CHIP_IDLE
, ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
) == 1 ){

1609 if–(
gc_node
->
ªad
 =1Ë&& (gc_node->
wrôe
 =0Ë&& (gc_node->
gc_ªad_ö√r
 == 1)) {

1610 #ifde‡
DEBUG


1611 
	`¥ötf
("g¯ªadÖha£,Ñód iãøti⁄†i†%d,™d i¬î sequí˚ i†%d \n", 
gc_node
->
ªad
, gc_node->
gc_ªad_ö√r
);

1616 
gc_node
->
gc_ªad_ö√r
 = -1;

1617 
gc_node
->
ªad
 = 0;

1618 
gc_node
->
wrôe
 = 1;

1626 if–(
gc_node
->
ªad
 =0Ë&& (gc_node->
wrôe
 =1Ë&& (gc_node->
gc_wrôe_ö√r
 >= 0) && (gc_node->gc_write_inner <= 9)) {

1627 #ifde‡
DEBUG


1628 
	`¥ötf
("ch™√»%d, g¯wrôêpha£, wrôêôî©i⁄†i†%d,™d i¬î sequí˚ i†%d \n",
ch™√l
, 
gc_node
->
wrôe
, gc_node->
gc_wrôe_ö√r
);

1635 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_GC_RW_BUSY
;

1636 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1637 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_GC_RW_BUSY
;

1639 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + 20000;

1641 
gc_node
->
gc_wrôe_ö√r
 ++;

1646 i‡–
	`gc_åy_to_su•íd_fun˘i⁄
(
ssd
, 
gc_node
, 
ch™√l
, 
chù
, 
CHIP_GC_RW_BUSY
, CHIP_GC_RW_BUSY, 20000) == 1){

1662 if–(
gc_node
->
ªad
 =0Ë&& (gc_node->
wrôe
 =1Ë&& (gc_node->
gc_wrôe_ö√r
 == 10)) {

1663 #ifde‡
DEBUG


1664 
	`¥ötf
("g¯wrôêpha£, wrôêôî©i⁄†i†%d,™d i¬î sequí˚ i†%d \n", 
gc_node
->
wrôe
, gc_node->
gc_wrôe_ö√r
);

1670 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1672 if(
gc_node
->
œ°_∑ge_ö_vi˘im_dól
 == 0)

1674 
gc_node
->
ªad_wrôe_íd
 = 0;

1676 
loˇti⁄
 = (
loˇl
 *Ë
	`mÆloc
((local));

1677 
	`Æloc_as£π
(
loˇti⁄
, "location");

1678 
	`mem£t
(
loˇti⁄
, 0, (
loˇl
));

1680 
loˇti⁄
->
ch™√l
 = channel;

1681 
loˇti⁄
->
chù
 = chip;

1682 
loˇti⁄
->
dõ
 = die;

1683 
loˇti⁄
->
∂™e
 =Ölane;

1684 
loˇti⁄
->
block
 = block;

1685 
loˇti⁄
->
∑ge
 = 
gc_node
->
c›y_∑ge_numbî
;

1686 
	`move_∑ge
(
ssd
, 
loˇti⁄
,

1687 &
å™s„r_size
);

1692 
gc_node
->
gc_wrôe_ö√r
 = -1;

1693 
gc_node
->
ªad
 = 1;

1694 
gc_node
->
wrôe
 = 0;

1700 
loˇti⁄
 = (
loˇl
 *Ë
	`mÆloc
((local));

1701 
	`Æloc_as£π
(
loˇti⁄
, "location");

1702 
	`mem£t
(
loˇti⁄
, 0, (
loˇl
));

1704 
loˇti⁄
->
ch™√l
 = channel;

1705 
loˇti⁄
->
chù
 = chip;

1706 
loˇti⁄
->
dõ
 = die;

1707 
loˇti⁄
->
∂™e
 =Ölane;

1708 
loˇti⁄
->
block
 = block;

1709 
loˇti⁄
->
∑ge
 = 
gc_node
->
c›y_∑ge_numbî
;

1710 
	`move_∑ge
(
ssd
, 
loˇti⁄
,

1711 &
å™s„r_size
);

1714 
	`‰ì
(
loˇti⁄
);

1715 
loˇti⁄
 = 
NULL
;

1723 #ifde‡
DEBUG


1724 
	`¥ötf_ssd_gc_node
(
ssd
);

1734 i‡((
gc_node
->
ªad_wrôe_íd
 =0Ë&& (
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
)){

1736 #ifde‡
DEBUG


1737 
	`¥ötf
("inÉraseÖart\n");

1739 #ifde‡
DEBUG


1740 
	`¥ötf_ssd_gc_node
(
ssd
);

1745 i‡(
gc_node
->
îa£
 == 0) {

1746 #ifde‡
DEBUG


1747 
	`¥ötf
("g¯îa£Öha£,Éø£ iãøti⁄†i†%d\n", 
gc_node
->
îa£
);

1751 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_ERASE_BUSY
;

1752 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1753 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_ERASE_BUSY
;

1755 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
/2;

1757 
gc_node
->
îa£
 = 1;

1760 if–
	`gc_åy_to_su•íd_fun˘i⁄
(
ssd
, 
gc_node
, 
ch™√l
, 
chù
, 
CHIP_ERASE_BUSY
, CHIP_ERASE_BUSY, ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
/2 ) == 1){

1774 i‡(
gc_node
->
îa£
 == 1) {

1775 #ifde‡
DEBUG


1776 
	`¥ötf
("g¯îa£Öha£,Éø£ iãøti⁄†i†%d\n", 
gc_node
->
îa£
);

1781 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_ERASE_BUSY
;

1782 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1783 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1785 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
/2;

1786 
gc_node
->
îa£
 = 2;

1789 if–
	`gc_åy_to_su•íd_fun˘i⁄
(
ssd
, 
gc_node
, 
ch™√l
, 
chù
, 
CHIP_ERASE_BUSY
, 
CHIP_IDLE
, ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
/2 ) == 1){

1804 i‡(
gc_node
->
îa£
 == 2) {

1805 #ifde‡
DEBUG


1806 
	`¥ötf
("g¯îa£Öha£,Éø£ iãøti⁄†i†%d\n", 
gc_node
->
îa£
);

1820 
	`îa£_›î©i⁄
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
);

1822 
	`¥ötf
("now g¯föished i¿ch™√»%d\n", 
i
);

1823 
	`dñëe_gc_node
(
ssd
, 
ch™√l
, 
gc_node
);

1840 
	}
}

1852 
	$£rvi˚s_2_r_cmd_å™s_™d_com∂ëe
(
ssd_öfo
 *
ssd
) {

1853 
i
 = 0;

1854 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

1856 
ãmp_chù_numbî
 = 0 ;

1857 
ãmpch™√l_ªad_Àngth
 = 0;

1859 
gc_›î©i⁄
 *
gc_node
 = 
NULL
;

1860 
chù
 ;

1861 #ifde‡
DEBUGSUSPEND


1862 
	`¥ötf
("go into services_2_r_cmd_trans_and_complete\n");

1866 
i
 = 0; i <

1867 
ssd
->
∑ømëî
->
ch™√l_numbî
; 
i
++)

1869 
sub
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

1871 
sub
 !
NULL
) {

1874 if(
sub
->
loˇti⁄
 =
NULL
){

1875 
	`¥ötf
("lxc,now i†wr⁄gÑód hîe.ch™√»i†%d, \n", 
i
);

1879 if(
i
 !
sub
->
loˇti⁄
->
ch™√l
){

1880 
	`¥ötf
("here what kind of wrong???\n");

1882 
chù
 = 
sub
->
loˇti⁄
->chip;

1883 #ifde‡
DEBUGSUSPEND


1886 
	`¥ötf
(":£rvi˚s_2_r_cmd_å™s_™d_com∂ëêsub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d,sub->cuºít_timê%Œd, sub->√xt_timê%Œd,ssd-> cuºít_timê%Œd, sub->cuºít_°©ê%d, sub->√xt_°©ê%d\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
, sub->
cuºít_time
, sub->
√xt_°©e_¥edi˘_time
, 
ssd
->cuºít_time,sub->
cuºít_°©e
, sub->
√xt_°©e
 );

1889 i‡(
sub
->
cuºít_°©e
 ==

1890 
SR_R_C_A_TRANSFER
)

1892 #ifde‡
DEBUGSUSPEND


1893 
	`¥ötf
("sub cuºít_°©êi†SR_R_C_A_TRANSFER,sub i†%d\n",
sub
);

1896 i‡(
sub
->
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
) {

1897 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_R_READ
, 
NORMAL
);

1901 
sub
 = sub->
√xt_node
;

1907 
i
 = 0; i <

1908 
ssd
->
∑ømëî
->
ch™√l_numbî
; 
i
++)

1910 
sub
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

1911 
p
 = 
sub
;

1912 
sub
 !
NULL
) {

1915 if(
sub
->
loˇti⁄
 =
NULL
){

1916 
	`¥ötf
("lxc,now i†wr⁄gÑód hîe.ch™√»i†%d, \n", 
i
);

1920 if(
i
 !
sub
->
loˇti⁄
->
ch™√l
){

1921 
	`¥ötf
("here what kind of wrong???\n");

1923 
chù
 = 
sub
->
loˇti⁄
->chip;

1925 i‡((
sub
->
cuºít_°©e
 =
SR_COMPLETE
) ||

1926 ((
sub
->
√xt_°©e
 =
SR_COMPLETE
Ë&& (sub->
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
))) {

1927 #ifde‡
DEBUGSUSPEND


1928 
	`¥ötf
("now gÿötÿªad com∂ëêfun˘i⁄.sub->cuºít_ßèã i†(%d)=SR_COMPLETE o∏sub->√xt_°©êi†(%d)=COMPLETE,\n",
sub
->
cuºít_°©e
, sub->
√xt_°©e
);

1934 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
chù_ªad_queue_Àngth
 --;

1941 
	`¥ötf
("now ch™√»%d, chù i†%d, hódáddªs†%Œd,Åaûáddªs†%Œd, moved sub i†%Œd\n", 
i
, 
sub
->
loˇti⁄
->
chù
, 
ssd
->
ch™√l_hód
[i].
subs_r_hód
,ssd->ch™√l_hód[i].
subs_r_èû
, sub);

1942 
ãmp_chù_numbî
 = 0, 
ãmpch™√l_ªad_Àngth
 = 0;Åemp_chù_numbî < (
ssd
->
∑ømëî
->
chù_num
 / ssd->∑ømëî->
ch™√l_numbî
);Åemp_chip_number ++){

1943 
	`¥ötf
("ch™√»%d, chù %d,Ñód_Àngth i†%d\n", 
i
, 
ãmp_chù_numbî
, 
ssd
->
ch™√l_hód
[i].
chù_hód
[ãmp_chù_numbî].
chù_ªad_queue_Àngth
);

1944 
ãmpch™√l_ªad_Àngth
 +
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
ãmp_chù_numbî
].
chù_ªad_queue_Àngth
;

1947 i‡(
sub
 !=

1948 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
)

1950 
	`¥ötf
("not head\n");

1953 if(
sub
 =
ssd
->
ch™√l_hód
[
i
].
subs_r_èû
){

1955 
p
->
√xt_node
 = 
sub
->next_node;

1956 
ssd
->
ch™√l_hód
[
i
].
subs_r_èû
 = 
p
;

1960 
p
->
√xt_node
 = 
sub
->next_node;

1962 
sub
 = sub->
√xt_node
;

1964 if(
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
->
loˇti⁄
 == 0){

1966 
	`¥ötf
("lxclxclxc2_deletereadwrongin channelhead\n");

1972 if(
ãmpch™√l_ªad_Àngth
 != 0){

1973 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
 = ssd->ch™√l_hód[i].subs_r_hód->
√xt_node
;

1974 
sub
 = sub->
√xt_node
;

1975 
p
 = 
sub
;

1979 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
 = 
NULL
;

1980 
ssd
->
ch™√l_hód
[
i
].
subs_r_èû
 = 
NULL
;

1986 if(
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
->
loˇti⁄
 == 0){

1988 
	`¥ötf
("lxclxclxc1_deletereadwrongin channelhead\n");

1993 
	`¥ötf
("a·î movedÇow ch™√»%d,Üígth i†%d, hódáddªs†%Œd,0x %x,Åaûáddªs†%Œd, 0x%x \n", 
i
, 
ãmpch™√l_ªad_Àngth
, 
ssd
->
ch™√l_hód
[i].
subs_r_hód
,ssd->ch™√l_hód[i].subs_r_hód,ssd->ch™√l_hód[i].
subs_r_èû
,ssd->channel_head[i].subs_r_tail );

1994 if((
ãmpch™√l_ªad_Àngth
 !0Ë&& ( 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
 == 0)){

1995 
	`¥ötf
("stop here\n");

1999 
p
 = 
sub
;

2000 
sub
 = sub->
√xt_node
;

2004 if(
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
->
loˇti⁄
 == 0){

2006 
	`¥ötf
("lxclxclxc_deletereadwrongin channelhead\n");

2014 
i
 = 0; i <

2015 
ssd
->
∑ømëî
->
ch™√l_numbî
; 
i
++) {

2016 
gc_node
 = 
ssd
->
ch™√l_hód
[
i
].
gc_comm™d
;

2017 if(
gc_node
 !
NULL
){

2019 
chù
 = 
gc_node
->chip;

2022 if((
gc_node
 !
NULL
Ë&& (gc_node->
sign_f‹_¥ìm±ive
 == 1) ){

2023 
	`åy_to_ª°‹e_gc_fun˘i⁄
(
ssd
, 
gc_node
, 
i
, 
chù
);

2030 
	`åy_to_ª°‹e_wrôe_fun˘i⁄
(
ssd
);

2033  
SUCCESS
;

2034 
	}
}

2040 
Sètus
 
	$£rvi˚s_2_r_d©a_å™s
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

2041 *
ch™ge_cuºít_time_Êag
) {

2042 
chù
 = 0;

2043 
dõ
 = 0, 
∂™e
 = 0, 
addªss_µn
 = 0, 
dõ1
 = 0;

2044 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL, *
sub1
 = NULL;

2045 
sub_ªque°
 *
sub_tw›œ√_⁄e
 = 
NULL
, *
sub_tw›œ√_two
 = NULL;

2046 
sub_ªque°
 *
sub_öãæóve_⁄e
 = 
NULL
, *
sub_öãæóve_two
 = NULL;

2047 
chù
 = 0; chù < 
ssd
->
ch™√l_hód
[
ch™√l
].chip; chip++) {

2048 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 =
CHIP_WAIT
) ||

2049 ((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 =
CHIP_DATA_TRANSFER
) &&

2050 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 <ssd->
cuºít_time
))) {

2051 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

2052 
sub
 = 
	`föd_ªad_sub_ªque°
(
ssd
, 
ch™√l
, 
chù
, 
dõ
);

2053 i‡(
sub
 !
NULL
) {

2058 i‡(
sub
 =
NULL
) {

2062 #ifde‡
DEBUGSUSPEND


2063 
	`¥ötf
("SERVICES_2_r_d©a_å™s, sub from föd_ªad_sub_ªque°,sub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
);

2073 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE_READ
) == AD_TWOPLANE_READ) ||

2074 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE)) {

2075 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE_READ
) ==

2076 
AD_TWOPLANE_READ
)

2078 #ifde‡
DEBUG


2079 
	`¥ötf
("only hasád_twoplane_read\n");

2081 
sub_tw›œ√_⁄e
 = 
sub
;

2082 
sub_tw›œ√_two
 = 
NULL
;

2084 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
sub
->
loˇti⁄
->
∂™e
].
add_ªg_µn
 = -1;

2085 
sub_tw›œ√_two
 = 
	`föd_ªad_sub_ªque°
(
ssd
, 
ch™√l
, 
chù
,

2086 
dõ
);

2092 i‡(
sub_tw›œ√_two
 =
NULL
) {

2093 
	`go_⁄e_°ï
(
ssd
, 
sub_tw›œ√_⁄e
, 
NULL
, 
SR_R_DATA_TRANSFER
, 
NORMAL
);

2094 *
ch™ge_cuºít_time_Êag
 = 0;

2095 *
ch™√l_busy_Êag
 = 1;

2098 
	`go_⁄e_°ï
(
ssd
, 
sub_tw›œ√_⁄e
, 
sub_tw›œ√_two
, 
SR_R_DATA_TRANSFER
, 
TWO_PLANE
);

2099 *
ch™ge_cuºít_time_Êag
 = 0;

2100 *
ch™√l_busy_Êag
 = 1;

2103 } i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) ==

2104 
AD_INTERLEAVE
)

2106 #ifde‡
DEBUG


2107 
	`¥ötf
("opps,Çever here forád_interleave\n");

2109 
sub_öãæóve_⁄e
 = 
sub
;

2110 
sub_öãæóve_two
 = 
NULL
;

2111 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
sub
->
loˇti⁄
->
∂™e
].
add_ªg_µn
 = -1;

2113 
dõ1
 = 0; dõ1 < 
ssd
->
∑ømëî
->
dõ_chù
; die1++) {

2114 i‡(
dõ1
 !
dõ
) {

2115 
sub_öãæóve_two
 = 
	`föd_ªad_sub_ªque°
(
ssd
, 
ch™√l
, 
chù
,

2116 
dõ1
);

2117 i‡(
sub_öãæóve_two
 !
NULL
) {

2122 i‡(
sub_öãæóve_two
 =
NULL
) {

2123 
	`go_⁄e_°ï
(
ssd
, 
sub_öãæóve_⁄e
, 
NULL
, 
SR_R_DATA_TRANSFER
, 
NORMAL
);

2125 *
ch™ge_cuºít_time_Êag
 = 0;

2126 *
ch™√l_busy_Êag
 = 1;

2129 
	`go_⁄e_°ï
(
ssd
, 
sub_tw›œ√_⁄e
, 
sub_öãæóve_two
, 
SR_R_DATA_TRANSFER
, 
INTERLEAVE
);

2131 *
ch™ge_cuºít_time_Êag
 = 0;

2132 *
ch™√l_busy_Êag
 = 1;

2138 #ifde‡
DEBUGSUSPEND


2139 
	`¥ötf
("SERVICES_2_r_data_trans, in chipÉnter go_one_step(SR_R_DATA_TRANSFER)Çow\n");

2142 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_R_DATA_TRANSFER
, 
NORMAL
);

2143 *
ch™ge_cuºít_time_Êag
 = 0;

2144 *
ch™√l_busy_Êag
 = 1;

2150 i‡(*
ch™√l_busy_Êag
 == 1) {

2154  
SUCCESS
;

2155 
	}
}

2161 
	$£rvi˚s_2_r_waô
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

2162 *
ch™ge_cuºít_time_Êag
) {

2163 
∂™e
 = 0, 
addªss_µn
 = 0;

2164 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

2165 
sub_ªque°
 *
sub_tw›œ√_⁄e
 = 
NULL
, *
sub_tw›œ√_two
 = NULL;

2166 
sub_ªque°
 *
sub_öãæóve_⁄e
 = 
NULL
, *
sub_öãæóve_two
 = NULL;

2169 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
;

2171 #ifde‡
DEBUGSUSPEND


2172 
	`¥ötf
("enter services_2_r_wait\n");

2175 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE_READ
) ==

2176 
AD_TWOPLANE_READ
)

2178 #ifde‡
DEBUGSUSPEND


2179 
	`¥ötf
("enter services_2_r_wait AD_TWOPLANE_READ\n");

2183 
sub_tw›œ√_⁄e
 = 
NULL
;

2184 
sub_tw›œ√_two
 = 
NULL
;

2186 
	`föd_öãæóve_tw›œ√_sub_ªque°
(
ssd
, 
ch™√l
, 
sub_tw›œ√_⁄e
, 
sub_tw›œ√_two
, 
TWO_PLANE
);

2188 i‡(
sub_tw›œ√_two
 !
NULL
)

2190 #ifde‡
DEBUG


2191 
	`¥ötf
("opps,Çever happen,enter services_2_r_wait\n");

2194 
	`go_⁄e_°ï
(
ssd
, 
sub_tw›œ√_⁄e
, 
sub_tw›œ√_two
, 
SR_R_C_A_TRANSFER
, 
TWO_PLANE
);

2196 *
ch™ge_cuºít_time_Êag
 = 0;

2197 *
ch™√l_busy_Êag
 = 1;

2198 } i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) !=

2199 
AD_INTERLEAVE
)

2201 #ifde‡
DEBUG


2202 
	`¥ötf
("opps1,Çever happenálso here, services_2_r_wait\n");

2205 
sub
 !=

2206 
NULL
)

2208 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

2210 i‡((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 ==

2211 
CHIP_IDLE
) ||

2212 ((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e
 ==

2213 
CHIP_IDLE
) &&

2214 (
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 <=

2215 
ssd
->
cuºít_time
))) {

2216 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_R_C_A_TRANSFER
, 
NORMAL
);

2218 *
ch™ge_cuºít_time_Êag
 = 0;

2219 *
ch™√l_busy_Êag
 = 1;

2225 
sub
 = sub->
√xt_node
;

2229 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) ==

2230 
AD_INTERLEAVE
)

2232 #ifde‡
DEBUGSUSPEND


2233 
	`¥ötf
("enter services_2_r_wait INTERLEAVE\n");

2237 
sub_öãæóve_⁄e
 = 
NULL
;

2238 
sub_öãæóve_two
 = 
NULL
;

2239 
	`föd_öãæóve_tw›œ√_sub_ªque°
(
ssd
, 
ch™√l
, 
sub_öãæóve_⁄e
, 
sub_öãæóve_two
, 
INTERLEAVE
);

2241 i‡(
sub_öãæóve_two
 !
NULL
)

2243 #ifde‡
DEBUG


2244 
	`¥ötf
("opps2,Çever happen services_2_r_wait\n");

2248 
	`go_⁄e_°ï
(
ssd
, 
sub_öãæóve_⁄e
, 
sub_öãæóve_two
, 
SR_R_C_A_TRANSFER
, 
INTERLEAVE
);

2250 *
ch™ge_cuºít_time_Êag
 = 0;

2251 *
ch™√l_busy_Êag
 = 1;

2254 #ifde‡
DEBUG


2255 
	`¥ötf
("in services_2_r_wait, only here\n");

2258 
sub
 !=

2259 
NULL
)

2261 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

2262 i‡((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 ==

2263 
CHIP_IDLE
) ||

2264 ((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e
 ==

2265 
CHIP_IDLE
) &&

2266 (
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 <=

2267 
ssd
->
cuºít_time
))) {

2269 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_R_C_A_TRANSFER
, 
NORMAL
);

2271 *
ch™ge_cuºít_time_Êag
 = 0;

2272 *
ch™√l_busy_Êag
 = 1;

2280 
sub
 = sub->
√xt_node
;

2288 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) != AD_INTERLEAVE) &&

2289 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE_READ
) != AD_TWOPLANE_READ)) {

2290 
sub
 !=

2291 
NULL
)

2294 #ifde‡
DEBUGSUSPEND


2295 
	`¥ötf
("begöÉ¡î sîvi˚s_2_r_waô NOádv™˚ comm™ds,hîêi†sub inf‹m©i⁄, but, somêo‡themáªÇŸ u£ful, sub cuºít_°©ê%d, sub cuºít_timê%Œd, subÇext_°©ê%d,subÇexà¥edi˘Åimê%Œd, sub begö_timê%Œd, sub ch™√»%d, sub chù %d, sub dõ %d, subÖœ√ %d, sub block %d, subÖagê%d, sub->Õ¿%d\n",
sub
->
cuºít_°©e
, sub->
cuºít_time
, sub->
√xt_°©e
, sub->
√xt_°©e_¥edi˘_time
, sub->
begö_time
, sub->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
, sub->
Õn
);

2298 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

2300 i‡((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
cuºít_°©e
 ==

2301 
CHIP_IDLE
) ||

2302 ((
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e
 ==

2303 
CHIP_IDLE
) &&

2304 (
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 <=

2305 
ssd
->
cuºít_time
))) {

2307 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_R_C_A_TRANSFER
, 
NORMAL
);

2309 *
ch™ge_cuºít_time_Êag
 = 0;

2310 *
ch™√l_busy_Êag
 = 1;

2316 
sub
 = sub->
√xt_node
;

2320  
SUCCESS
;

2321 
	}
}

2326 
	$dñëe_w_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub
) {

2327 
sub_ªque°
 *
p
 = 
NULL
;

2332 
ssd
->
ch™√l_hód
[
sub
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub->loˇti⁄->
chù
].
chù_wrôe_queue_Àngth
 --;

2333 #ifde‡
DEBUGSUSPEND


2334 
	`¥ötf
("ch™√»[%d], chù [%d],dõ [%d], block[%d],Öage[%d], wrôêqueuêÀngth möu†⁄ê%d\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
, 
ssd
->
ch™√l_hód
[sub->loˇti⁄->ch™√l].
chù_hód
[sub->loˇti⁄->chù].
chù_wrôe_queue_Àngth
);

2337 i‡(
sub
 =
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
)

2339 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 !ssd->ch™√l_hód[ch™√l].
subs_w_èû
) {

2340 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 = 
sub
->
√xt_node
;

2342 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 = 
NULL
;

2343 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
 = 
NULL
;

2346 
p
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

2347 
p
->
√xt_node
 !
sub
) {

2348 
p
 =Ö->
√xt_node
;

2351 i‡(
sub
->
√xt_node
 !
NULL
) {

2352 
p
->
√xt_node
 = 
sub
->next_node;

2354 
p
->
√xt_node
 = 
NULL
;

2355 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
 = 
p
;

2359  
SUCCESS
;

2360 
	}
}

2365 
Sètus


2366 
	$c›y_back
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub_ªque°
 *
sub
) {

2367 
ﬁd_µn
 = -1, 
√w_µn
 = -1;

2368 
time
 = 0;

2369 i‡(
ssd
->
∑ømëî
->
gªed_CB_ad
 == 1)

2371 
ﬁd_µn
 = -1;

2372 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 !=

2375 i‡((
sub
->
°©e
 & 
ssd
->
døm
->
m≠
->
m≠_íåy
[sub->
Õn
].state) == ssd->dram->map->map_entry[sub->lpn].state) {

2376 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2377 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2378 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2380 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 19 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2381 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

2382 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2383 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2384 
ssd
->
c›y_back_cou¡
++;

2385 
ssd
->
ªad_cou¡
++;

2386 
ssd
->
upd©e_ªad_cou¡
++;

2387 
ﬁd_µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
;

2390 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2391 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2392 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2394 
sub
->
com∂ëe_time
 = sub->
√xt_°©e_¥edi˘_time
;

2395 
time
 = 
sub
->
com∂ëe_time
;

2397 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub);

2399 i‡(
ﬁd_µn
 !=

2402 
√w_µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
;

2403 
ﬁd_µn
 % 2 !
√w_µn
 % 2)

2405 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
,

2406 
sub
);

2407 
ssd
->
¥ogøm_cou¡
--;

2408 
ssd
->
wrôe_Êash_cou¡
--;

2409 
ssd
->
wa°e_∑ge_cou¡
++;

2410 
√w_µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
;

2415 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 != 0) {

2416 i‡((
sub
->
°©e
 & 
ssd
->
døm
->
m≠
->
m≠_íåy
[sub->
Õn
].state) == ssd->dram->map->map_entry[sub->lpn].state) {

2417 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2418 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2419 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2420 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
,

2421 
sub
);

2423 
ﬁd_µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
;

2424 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
,

2425 
sub
);

2426 
√w_µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
;

2427 i‡(
ﬁd_µn
 % 2 =
√w_µn
 % 2) {

2428 
ssd
->
c›y_back_cou¡
++;

2429 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 19 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2430 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

2431 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2432 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2434 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2435 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

2436 (
	`size
(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
)) *

2437 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
 +

2438 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2439 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2441 
ssd
->
ªad_cou¡
++;

2442 
ssd
->
upd©e_ªad_cou¡
++;

2445 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2446 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2447 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2448 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub);

2450 
sub
->
com∂ëe_time
 = sub->
√xt_°©e_¥edi˘_time
;

2451 
time
 = 
sub
->
com∂ëe_time
;

2457 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

2458 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

2459 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

2460 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
time
;

2462 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

2463 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

2464 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

2465 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

2466 
time
 + 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

2468  
SUCCESS
;

2469 
	}
}

2474 
Sètus


2475 
	$°©ic_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub_ªque°
 *
sub
) {

2476 
time
 = 0;

2477 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 !=

2480 i‡((
sub
->
°©e
 & 
ssd
->
døm
->
m≠
->
m≠_íåy
[sub->
Õn
].state) ==

2481 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
)

2483 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2484 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2485 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2487 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2488 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

2489 (
	`size
((
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 ^ sub->state))) *

2490 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
 +

2491 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2492 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2493 
ssd
->
ªad_cou¡
++;

2494 
ssd
->
upd©e_ªad_cou¡
++;

2497 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

2498 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

2499 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

2501 
sub
->
com∂ëe_time
 = sub->
√xt_°©e_¥edi˘_time
;

2502 
time
 = 
sub
->
com∂ëe_time
;

2504 
	`gë_µn
(
ssd
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub);

2509 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

2510 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

2511 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

2512 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
time
;

2514 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

2515 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

2516 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

2517 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

2518 
time
 + 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

2520  
SUCCESS
;

2521 
	}
}

2526 
	$√w_£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

2527 *
ch™ge_cuºít_time_Êag
) {

2528 
j
 = 0, 
chù
 = 0;

2529 
k
 = 0;

2530 
ﬁd_µn
 = 0, 
√w_µn
 = 0;

2531 
chù_tokí
 = 0, 
dõ_tokí
 = 0, 
∂™e_tokí
 = 0, 
addªss_µn
 = 0;

2532 
dõ
 = 0, 
∂™e
 = 0;

2533 
time
 = 0;

2534 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

2535 
sub_ªque°
 *
sub_tw›œ√_⁄e
 = 
NULL
, *
sub_tw›œ√_two
 = NULL;

2536 
sub_ªque°
 *
sub_öãæóve_⁄e
 = 
NULL
, *
sub_öãæóve_two
 = NULL;

2542 #ifde‡
DEBUG


2543 
	`¥ötf
("íã∏£rvi˚s_2_wrôe, ch™√»i†%d, ch™√l_busy_Êag i†%d, ch™ge_cuºít_time_Êag i†%d\n",
ch™√l
, *
ch™√l_busy_Êag
, *
ch™ge_cuºít_time_Êag
);

2545 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 !
NULL
) || (ssd->subs_w_head != NULL)) {

2546 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 0)

2548 
j
 = 0; j < 
ssd
->
ch™√l_hód
[
ch™√l
].
chù
; j++) {

2549 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) && (ssd->subs_w_head == NULL)) {

2554 
chù_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
;

2555 #ifde‡
DEBUG


2556 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d\n", 
ch™√l
, 
chù_tokí
);

2560 i‡(*
ch™√l_busy_Êag
 == 0) {

2561 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
cuºít_°©e
 =
CHIP_IDLE
) ||

2562 ((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
√xt_°©e
 =
CHIP_IDLE
) &&

2563 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
√xt_°©e_¥edi˘_time
 <=

2564 
ssd
->
cuºít_time
))) {

2565 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) && (ssd->subs_w_head == NULL)) {

2568 
dõ_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
;

2569 #ifde‡
DEBUG


2570 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d,dõÅokí i†%d\n", 
ch™√l
, 
chù_tokí
, 
dõ_tokí
);

2574 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) != AD_INTERLEAVE) &&

2575 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) !=

2576 
AD_TWOPLANE
))

2578 #ifde‡
DEBUG


2579 
	`¥ötf
("if you haveÇot setádvanced command,then only doÇormalÑeadánd write\n");

2582 
sub
 = 
	`föd_wrôe_sub_ªque°
(
ssd
, 
ch™√l
);

2583 i‡(
sub
 =
NULL
) {

2587 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

2588 
∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
dõ_hód
[
dõ_tokí
].
tokí
;

2590 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù_tokí
, 
dõ_tokí
, 
∂™e_tokí
, 
sub
);

2592 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
dõ_hód
[
dõ_tokí
].
tokí
 =

2593 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
dõ_hód
[
dõ_tokí
].
tokí
 +

2594 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

2596 *
ch™ge_cuºít_time_Êag
 = 0;

2598 i‡(
ssd
->
∑ømëî
->
ad_¥i‹ôy2
 == 0) {

2599 
ssd
->
ªÆ_time_subªq
--;

2601 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_W_TRANSFER
, 
NORMAL
);

2602 
	`dñëe_w_sub_ªque°
(
ssd
, 
ch™√l
, 
sub
);

2604 *
ch™√l_busy_Êag
 = 1;

2610 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 =

2611 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 + 1) %

2612 
ssd
->
∑ømëî
->
dõ_chù
;

2613 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 =

2614 (
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[channel];

2619 i‡(
	`dy«mic_adv™˚d_¥o˚ss
(
ssd
, 
ch™√l
, 
chù_tokí
Ë=
NULL
) {

2620 *
ch™√l_busy_Êag
 = 0;

2621 #ifde‡
DEBUG


2622 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d,Åhîêi†nŸ suô o≥øti⁄ i¿thi†ch™√l\n", 
ch™√l
, 
chù_tokí
);

2626 #ifde‡
DEBUG


2627 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d, hîêgëá dy«mic_adv™˚_¥o˚ss\n", 
ch™√l
, 
chù_tokí
);

2630 *
ch™√l_busy_Êag
 = 1;

2631 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 =

2632 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 + 1) %

2633 
ssd
->
∑ømëî
->
dõ_chù
;

2634 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 =

2635 (
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[channel];

2636 #ifde‡
DEBUG


2637 
	`¥ötf
("ch™√l---tokí upd©ê(⁄ly movêahódËch™√»%d'†chùÅokí i†%d\n", 
ch™√l
, 
ssd
->
ch™√l_hód
[ch™√l].
tokí
);

2644 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 =

2645 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

2646 #ifde‡
DEBUG


2647 
	`¥ötf
("dõ---tokí upd©ê(⁄ly movêhód),ÅhíÇewÅokí i†ch™√»%d'†chùÅokí i†%d, dõ_tokí i†%d\n", 
ch™√l
, 
chù_tokí
, 
ssd
->
ch™√l_hód
[ch™√l].
chù_hód
[chù_tokí].
tokí
);

2653 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 =

2654 (
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[channel];

2656 } i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 1)

2658 #ifde‡
DEBUGSUSPEND


2659 
	`¥ötf
("°©i¯Æloˇti⁄.....now,ánd vîy imp‹è¡, ch™√»hîêi†%d.\n", 
ch™√l
);

2661 
chù
 = 0; chù < 
ssd
->
ch™√l_hód
[
ch™√l
].chip; chip++) {

2663 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 =
CHIP_IDLE
) ||

2664 ((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 =
CHIP_IDLE
) &&

2665 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 <ssd->
cuºít_time
))) {

2666 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) {

2669 i‡(*
ch™√l_busy_Êag
 == 0) {

2671 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) != AD_INTERLEAVE) &&

2672 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) != AD_TWOPLANE))

2674 #ifde‡
DEBUGSUSPEND


2675 
	`¥ötf
("new_services_2_write static operation. Here marksÅhatÅhere isÇo use of interleaveándÅwoplaneÅechonologies. \n");

2679 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) {

2682 #ifde‡
DEBUGSUSPEND


2683 
	`¥ötf
("f‹Üo›,ch™√»i†%d, chù i†%d, dõ i†%d\n",
ch™√l
, 
chù
, 
dõ
);

2687 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

2688 
sub
 !
NULL
) {

2689 #ifde‡
DEBUGSUSPEND


2690 
	`¥ötf
("lxc!!, hîêi†°ønge!!,Évîy sub: sub->loˇti⁄->ch™√»%d, sub->loˇti⁄->chù %d, sub->loˇti⁄->dõ %d, sub->loˇti⁄->block %d, sub->loˇti⁄->∑gê%d ,sub->cuºít_°©ê%d\n", 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
, sub->
cuºít_°©e
 );

2693 i‡((
sub
->
cuºít_°©e
 =
SR_WAIT
Ë&& (sub->
loˇti⁄
->
ch™√l
 == channel) &&

2694 (
sub
->
loˇti⁄
->
chù
 == chip) )

2699 
sub
 = sub->
√xt_node
;

2701 i‡(
sub
 =
NULL
) {

2702 #ifde‡
DEBUGSUSPEND


2703 
	`¥ötf
("thi†chù %d, dõ %d ha†nÿavaûabÀ sub-ªque°s,movêtÿ√xàdõ \n", 
chù
,
dõ
);

2709 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

2710 
sub
->
cuºít_time
 = 
ssd
->current_time;

2715 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_COPYBACK
) == AD_COPYBACK) {

2716 
	`c›y_back
(
ssd
, 
ch™√l
, 
chù
, 
dõ
,

2717 
sub
);

2718 #ifde‡
DEBUGSUSPEND


2719 
	`¥ötf
("willÇever happenÇow,Üxclxclxc\n");

2723 *
ch™ge_cuºít_time_Êag
 = 0;

2726 #ifde‡
DEBUGSUSPEND


2727 
	`¥ötf
("wrôêbegö!!now begöÑu¿thêgo_⁄e_°ï, sr_w_c_a_d©a_å™s„r,Çow %d ch™√l, %d chù\n",
ch™√l
, 
chù
);

2729 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_W_C_A_DATA_TRANSFER
, 
NORMAL
);

2731 *
ch™ge_cuºít_time_Êag
 = 0;

2735 *
ch™√l_busy_Êag
 = 1;

2741 i‡(
	`dy«mic_adv™˚d_¥o˚ss
(
ssd
, 
ch™√l
, 
chù
Ë=
NULL
) {

2742 *
ch™√l_busy_Êag
 = 0;

2744 *
ch™√l_busy_Êag
 = 1;

2753 #ifde‡
DEBUGSUSPEND


2754 
	`¥ötf
("öÇew sîvi˚s_2_wrôêch™√»%d, chù %d i†busy\n", 
ch™√l
, 
chù
);

2761  
SUCCESS
;

2762 
	}
}

2765 
	$åy_to_ª°‹e_wrôe_fun˘i⁄
(
ssd_öfo
 *
ssd
){

2767 
ch™√l
 , 
chù
;

2769 
sub_ªque°
 *
sub_f‹_ªad
 = 
NULL
;

2770 
sub_ªque°
 *
sub_f‹_wrôe
 = 
NULL
;

2771 
sub_ªque°
 *
ãmp_sub_f‹_°‹e
 = 
NULL
;

2773 
gc_›î©i⁄
 *
gc_node
 = 
NULL
;

2775 
ch™√l
 = 0; ch™√»< 
ssd
->
∑ømëî
->
ch™√l_numbî
; channel++) {

2777 
chù
 = 0; chù < 
ssd
->
ch™√l_hód
[
ch™√l
].chip; chip ++) {

2779 if(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
wrôe_¥ìm±ive_sign
 == 1){

2780 #ifde‡
DEBUGSUSPEND


2781 
	`¥ötf
("åyÅÿª°‹êÆªady wrôêsu•íded ch™√»[%d], chù [%d] .\n", 
ch™√l
, 
chù
);

2785 
sub_f‹_ªad
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
;

2786 
sub_f‹_ªad
 !
NULL
)

2788 if(
sub_f‹_ªad
->
loˇti⁄
->
chù
 == chip)

2792 
sub_f‹_ªad
 = sub_f‹_ªad->
√xt_node
 ;

2802 if(
sub_f‹_ªad
 =
NULL
){

2804 
sub_f‹_wrôe
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

2805 
sub_f‹_wrôe
 !
NULL
)

2807 if(
sub_f‹_wrôe
->
loˇti⁄
->
chù
 == chip)

2811 
sub_f‹_wrôe
 = sub_f‹_wrôe->
√xt_node
 ;

2816 
	`¥ötf
("°‹ed sub i†%Œd\n", 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
°‹edsub
);

2817 
ãmp_sub_f‹_°‹e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
°‹edsub
;

2818 
	`¥ötf
("ªad o≥øti⁄. chù: %d,Ü≤: %d,Ö≤: %d o≥øti⁄: %d,size: %d, ////sub_ªque° sètus:: cuºít_°©e: %d, cuºít_time: %Œu,Çext_°©e: %d,Çext_°©e_¥edi˘_time: %Œu, sèã(⁄ly f‹ wrôe): %d\n", 
ãmp_sub_f‹_°‹e
->
loˇti⁄
->
chù
,Åemp_sub_f‹_°‹e->
Õn
,Åemp_sub_f‹_°‹e->
µn
,ãmp_sub_f‹_°‹e->
›î©i⁄
,Åemp_sub_f‹_°‹e->
size
,Åemp_sub_f‹_°‹e->
cuºít_°©e
,ãmp_sub_f‹_°‹e->
cuºít_time
,ãmp_sub_f‹_°‹e->
√xt_°©e
,Åemp_sub_f‹_°‹e->
√xt_°©e_¥edi˘_time
,Åemp_sub_f‹_°‹e->
°©e
) ;

2819 if(
sub_f‹_wrôe
 !
ãmp_sub_f‹_°‹e
){

2820 
	`¥ötf
("lx˛x˛xc,sÿ£riou†wr⁄g!!!, chù %d fú° wrôê%Œd\n", 
chù
, 
sub_f‹_wrôe
);

2822 #ifde‡
DEBUGSUSPEND


2823 
	`¥ötf
("thi†chù ha†nÿªadÇow, sÿbegöÅÿª°‹e,buàhavêtÿjudgmíàch™√»i†IDLEándÅhênum_w_cy˛êi†%d.\n",
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
num_w_cy˛e
);

2827 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 =
CHANNEL_IDLE
Ë|| (ssd->ch™√l_hód[ch™√l].
√xt_°©e
 =CHANNEL_IDLE && ssd->ch™√l_hód[ch™√l].
√xt_°©e_¥edi˘_time
 <ssd->
cuºít_time
)) {

2830 if(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
num_w_cy˛e
 == 0){

2831 #ifde‡
DEBUGSUSPEND


2832 
	`¥ötf
("restoreÇum_w_cycle is 0 , wrong happen!!Üxclxclxc.\n");

2835 #ifde‡
DEBUGSUSPEND


2836 
	`¥ötf
("nowÑeally canÑestore .\n");

2841 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
wrôe_¥ìm±ive_sign
 = 0;

2842 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

2844 if–(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
num_w_cy˛e
) % 2 == 1 ){

2846 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG_w_¥ogam
 + 5*ssd->∑ømëî->time_ch¨a˘îi°ics.
tWC
 ;

2848 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG_w_vîify
 + 5*ssd->∑ømëî->time_ch¨a˘îi°ics.
tWC
;

2852 #ifde‡
DEBUGSUSPEND


2853 
	`¥ötf
("only because channel isÇot IDLE give upÑestoreÅhisÅime.\n");

2861 
	}
}

2871 
Sètus
 
	$£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

2872 *
ch™ge_cuºít_time_Êag
) {

2873 
j
 = 0, 
chù
 = 0;

2874 
k
 = 0;

2875 
ﬁd_µn
 = 0, 
√w_µn
 = 0;

2876 
chù_tokí
 = 0, 
dõ_tokí
 = 0, 
∂™e_tokí
 = 0, 
addªss_µn
 = 0;

2877 
dõ
 = 0, 
∂™e
 = 0;

2878 
time
 = 0;

2879 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

2880 
sub_ªque°
 *
sub_tw›œ√_⁄e
 = 
NULL
, *
sub_tw›œ√_two
 = NULL;

2881 
sub_ªque°
 *
sub_öãæóve_⁄e
 = 
NULL
, *
sub_öãæóve_two
 = NULL;

2887 #ifde‡
DEBUG


2888 
	`¥ötf
("íã∏£rvi˚s_2_wrôe, ch™√»i†%d, ch™√l_busy_Êag i†%d, ch™ge_cuºít_time_Êag i†%d\n",
ch™√l
, 
ch™√l_busy_Êag
, 
ch™ge_cuºít_time_Êag
);

2890 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 !
NULL
) || (ssd->subs_w_head != NULL)) {

2891 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 0)

2893 
j
 = 0; j < 
ssd
->
ch™√l_hód
[
ch™√l
].
chù
; j++) {

2894 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) && (ssd->subs_w_head == NULL)) {

2898 
chù_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
;

2899 #ifde‡
DEBUG


2900 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d\n", 
ch™√l
, 
chù_tokí
);

2904 i‡(*
ch™√l_busy_Êag
 == 0) {

2905 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
cuºít_°©e
 =
CHIP_IDLE
) ||

2906 ((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
√xt_°©e
 =
CHIP_IDLE
) &&

2907 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
√xt_°©e_¥edi˘_time
 <=

2908 
ssd
->
cuºít_time
))) {

2909 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) && (ssd->subs_w_head == NULL)) {

2912 
dõ_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
;

2913 #ifde‡
DEBUG


2914 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d,dõÅokí i†%d\n", 
ch™√l
, 
chù_tokí
, 
dõ_tokí
);

2918 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) != AD_INTERLEAVE) &&

2919 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) !=

2920 
AD_TWOPLANE
))

2922 #ifde‡
DEBUG


2923 
	`¥ötf
("if you haveÇot setádvanced command,then only doÇormalÑeadánd write\n");

2926 
sub
 = 
	`föd_wrôe_sub_ªque°
(
ssd
, 
ch™√l
);

2927 i‡(
sub
 =
NULL
) {

2931 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

2932 
∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
dõ_hód
[
dõ_tokí
].
tokí
;

2934 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù_tokí
, 
dõ_tokí
, 
∂™e_tokí
, 
sub
);

2936 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
dõ_hód
[
dõ_tokí
].
tokí
 =

2937 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
dõ_hód
[
dõ_tokí
].
tokí
 +

2938 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

2940 *
ch™ge_cuºít_time_Êag
 = 0;

2942 i‡(
ssd
->
∑ømëî
->
ad_¥i‹ôy2
 == 0) {

2943 
ssd
->
ªÆ_time_subªq
--;

2945 
	`go_⁄e_°ï
(
ssd
, 
sub
, 
NULL
, 
SR_W_TRANSFER
, 
NORMAL
);

2946 
	`dñëe_w_sub_ªque°
(
ssd
, 
ch™√l
, 
sub
);

2948 *
ch™√l_busy_Êag
 = 1;

2954 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 =

2955 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 + 1) %

2956 
ssd
->
∑ømëî
->
dõ_chù
;

2957 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 =

2958 (
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[channel];

2963 i‡(
	`dy«mic_adv™˚d_¥o˚ss
(
ssd
, 
ch™√l
, 
chù_tokí
Ë=
NULL
) {

2964 *
ch™√l_busy_Êag
 = 0;

2965 #ifde‡
DEBUG


2966 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d,Åhîêi†nŸ suô o≥øti⁄ i¿thi†ch™√l\n", 
ch™√l
, 
chù_tokí
);

2970 #ifde‡
DEBUG


2971 
	`¥ötf
("ch™√»%d'†chùÅokí i†%d, hîêgëá dy«mic_adv™˚_¥o˚ss\n", 
ch™√l
, 
chù_tokí
);

2974 *
ch™√l_busy_Êag
 = 1;

2975 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 =

2976 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 + 1) %

2977 
ssd
->
∑ømëî
->
dõ_chù
;

2978 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 =

2979 (
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[channel];

2980 #ifde‡
DEBUG


2981 
	`¥ötf
("ch™√l---tokí upd©ê(⁄ly movêahódËch™√»%d'†chùÅokí i†%d\n", 
ch™√l
, 
ssd
->
ch™√l_hód
[ch™√l].
tokí
);

2988 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 =

2989 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù_tokí
].
tokí
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

2990 #ifde‡
DEBUG


2991 
	`¥ötf
("dõ---tokí upd©ê(⁄ly movêhód),ÅhíÇewÅokí i†ch™√»%d'†chùÅokí i†%d, dõ_tokí i†%d\n", 
ch™√l
, 
chù_tokí
, 
ssd
->
ch™√l_hód
[ch™√l].
chù_hód
[chù_tokí].
tokí
);

2997 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 =

2998 (
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[channel];

3000 } i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 1)

3002 #ifde‡
DEBUG


3003 
	`¥ötf
("staticállocation.....now.\n");

3006 
chù
 = 0; chù < 
ssd
->
ch™√l_hód
[
ch™√l
].chip; chip++) {

3007 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 =
CHIP_IDLE
) ||

3008 ((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 =
CHIP_IDLE
) &&

3009 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 <ssd->
cuºít_time
))) {

3010 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) {

3013 i‡(*
ch™√l_busy_Êag
 == 0) {

3015 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) != AD_INTERLEAVE) &&

3016 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) != AD_TWOPLANE))

3018 #ifde‡
DEBUG


3019 
	`¥ötf
("services_2_writeÅatic operation. Here should beÖrinted for write\n");

3022 
dõ
 = 0; dõ < 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_num
; die++) {

3023 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
) {

3026 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

3027 
sub
 !
NULL
) {

3028 i‡((
sub
->
cuºít_°©e
 =
SR_WAIT
Ë&& (sub->
loˇti⁄
->
ch™√l
 == channel) &&

3029 (
sub
->
loˇti⁄
->
chù
 == chip) &&

3030 (
sub
->
loˇti⁄
->
dõ
 == die))

3034 
sub
 = sub->
√xt_node
;

3036 i‡(
sub
 =
NULL
) {

3040 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

3041 
sub
->
cuºít_time
 = 
ssd
->current_time;

3042 
sub
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

3043 
sub
->
√xt_°©e
 = 
SR_COMPLETE
;

3045 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_COPYBACK
) == AD_COPYBACK) {

3046 
	`c›y_back
(
ssd
, 
ch™√l
, 
chù
, 
dõ
,

3047 
sub
);

3048 *
ch™ge_cuºít_time_Êag
 = 0;

3050 
	`°©ic_wrôe
(
ssd
, 
ch™√l
, 
chù
, 
dõ
,

3051 
sub
);

3052 *
ch™ge_cuºít_time_Êag
 = 0;

3055 
	`dñëe_w_sub_ªque°
(
ssd
, 
ch™√l
, 
sub
);

3056 *
ch™√l_busy_Êag
 = 1;

3062 i‡(
	`dy«mic_adv™˚d_¥o˚ss
(
ssd
, 
ch™√l
, 
chù
Ë=
NULL
) {

3063 *
ch™√l_busy_Êag
 = 0;

3065 *
ch™√l_busy_Êag
 = 1;

3075  
SUCCESS
;

3076 
	}
}

3083 
ssd_öfo
 *
	$¥o˚ss
(
ssd_öfo
 *
ssd
) {

3092 
ﬁd_µn
 = -1, 
Êag_dõ
 = -1;

3093 
i
, 
ch™
, 
øndom_num
;

3094 
Êag
 = 0, 
√w_wrôe
 = 0, 
chg_cur_time_Êag
 = 1, 
Êag2
 = 0, 
Êag_gc
 = 0;

3095 
öt64_t
 
time
, 
ch™√l_time
 = 
MAX_INT64
;

3096 
sub_ªque°
 *
sub
;

3098 
whëhî_begö_run_gc
 = 0;

3099 
whëhî_°›_wrôe
 =0;

3103 if(
ssd
->
debug_sign
 == 1){

3114 #ifde‡
DEBUG_CURR_TIME


3115 
	`¥ötf
("íã∏¥o˚ss, cuºíàtime:%Œd\n",
ssd
->
cuºít_time
);

3122 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

3123 i‡((
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
 =
NULL
Ë&& (ssd->ch™√l_hód[i].
subs_w_hód
 == NULL) &&

3124 (
ssd
->
subs_w_hód
 =
NULL
)) {

3128 
Êag
 = 0;

3132 #ifde‡
DEBUG


3133 
	`¥ötf
("Êag i†%d, *** 1 ha†nÿsubs,Çow c™ dÿbackground GC,,0 ha†subs\n",
Êag
);

3135 i‡(
Êag
 == 1) {

3136 
ssd
->
Êag
 = 1;

3137 i‡(
ssd
->
gc_ªque°
 > 0)

3139 
	`gc
(
ssd
, 0, 1);

3141  
ssd
;

3143 
ssd
->
Êag
 = 0;

3146 
time
 = 
ssd
->
cuºít_time
;

3147 #ifde‡
DEBUG


3148 
	`¥ötf
("begin go into services_2_r_cmd_trans_and_complete\n");

3149 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3150 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3153 
	`£rvi˚s_2_r_cmd_å™s_™d_com∂ëe
(

3154 
ssd
);

3155 #ifde‡
DEBUG


3156 
	`¥ötf
("finish services_2_r_cmd_trans_and_complete\n");

3157 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3159 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3163 #ifde‡
DEBUG


3164 
	`¥ötf
("begin go into services_2_write_busy_in_chip\n");

3165 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3166 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3169 
	`£rvi˚s_2_wrôe_busy_ö_chù
(
ssd
);

3171 #ifde‡
DEBUG


3172 
	`¥ötf
("finish services_2_write_busy_in_chip\n");

3173 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3175 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3180 #ifde‡
DEBUG


3181 
	`¥ötf
("begin go into services_2_gc_busy_in_chip\n");

3182 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3183 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3187 
	`£rvi˚s_2_gc_busy_ö_chù
(
ssd
);

3190 #ifde‡
DEBUG


3191 
	`¥ötf
("finish services_2_gc_busy_in_chip\n");

3192 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3194 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3199 
øndom_num
 =

3200 
ssd
->
¥ogøm_cou¡
 % ssd->
∑ømëî
->
ch™√l_numbî
;

3206 
ch™
 = 0; ch™ < 
ssd
->
∑ømëî
->
ch™√l_numbî
; chan++) {

3207 
i
 = (
øndom_num
 + 
ch™
Ë% 
ssd
->
∑ømëî
->
ch™√l_numbî
;

3208 
Êag
 = 0;

3209 
Êag_gc
 = 0;

3210 #ifde‡
DEBUG


3211 
	`¥ötf
("íã∏thê¥o˚s†f‹ ch™√»%d cúcuœti⁄\n", 
i
);

3213 i‡((
ssd
->
ch™√l_hód
[
i
].
cuºít_°©e
 =
CHANNEL_IDLE
Ë|| (ssd->ch™√l_hód[i].
√xt_°©e
 == CHANNEL_IDLE &&

3214 
ssd
->
ch™√l_hód
[
i
].
√xt_°©e_¥edi˘_time
 <=

3215 
ssd
->
cuºít_time
)) {

3216 #ifde‡
DEBUG


3217 
	`¥ötf
("⁄ly dó»thêvÆuê0!! hîêi†thêvÆue: ssd->ch™√l_hód[%d].cuºít_°©êi†%d,‹ ssd->ch™√l_hód[%d].√xt_°©êi†%dándÇext_°©e_¥edi˘_time<ssd->cuºít_timê\n",
i
,
ssd
->
ch™√l_hód
[i].
cuºít_°©e
, i, ssd->ch™√l_hód[i].
√xt_°©e
);

3237 
sub
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

3240 i‡–(
ssd
->
gc_ªque°
 > 0Ë&& (ssd->
ch™√l_hód
[
i
].
gc_comm™d
 != 0) ){

3241 
whëhî_begö_run_gc
 = 1;}

3243 
whëhî_begö_run_gc
 = 
	`judgög_ªad_ö_gc_chù
(
ssd
, 
i
);

3245 #ifde‡
DEBUG


3246 
	`¥ötf
("begö gÿötÿ£rvi˚s_2_r_waô, fœg i†%d, fœg_g¯i†%d\n",
Êag
,
Êag_gc
);

3247 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3248 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3250 
	`£rvi˚s_2_r_waô
(
ssd
, 
i
, &
Êag
, &
chg_cur_time_Êag
);

3251 #ifde‡
DEBUG


3252 
	`¥ötf
("föish sîvi˚s_2_r_waô, fœg i†%d, fœg_g¯i†%d\n",
Êag
,
Êag_gc
);

3253 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3254 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3260 i‡((
Êag
 =0Ë&& (
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
 !=

3261 
NULL
))

3263 #ifde‡
DEBUG


3264 
	`¥ötf
("begö gÿötÿ£rvi˚s_2_r_d©e_å™s, fœg i†%d, fœg_g¯i†%d\n",
Êag
,
Êag_gc
);

3265 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3266 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3269 
	`£rvi˚s_2_r_d©a_å™s
(
ssd
, 
i
, &
Êag
, &
chg_cur_time_Êag
);

3270 #ifde‡
DEBUG


3271 
	`¥ötf
("föish sîvi˚s_2_r_d©a_å™s, fœg i†%d, fœg_g¯i†%d\n",
Êag
,
Êag_gc
);

3272 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3273 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3285 if(
whëhî_begö_run_gc
 == 1 ){

3286 #ifde‡
DEBUG


3287 
	`¥ötf
("now ha†GC, fœg i†%d, fœg_g¯i†%d\n",
Êag
,
Êag_gc
);

3288 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3289 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3294 
	`gc
(
ssd
, 
i
, 0);

3295 #ifde‡
DEBUG


3296 
	`¥ötf
("föish GC, fœg i†%d, fœg_g¯i†%d\n",
Êag
,
Êag_gc
);

3297 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3298 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3307 i‡–(
ssd
->
gc_ªque°
 > 0Ë&& (ssd->
ch™√l_hód
[
i
].
gc_comm™d
 != 0) ){

3309 
whëhî_°›_wrôe
 = 1;

3312 
whëhî_°›_wrôe
 = 0;

3314 #ifde‡
DEBUG


3315 
	`¥ötf
("whëhî_begö_run_g¯i†%d, whëhî_°›_wrôêi†%d\n",
whëhî_begö_run_gc
, 
whëhî_°›_wrôe
 );

3321 if(
whëhî_°›_wrôe
 == 0 ){

3323 i‡–(
Êag
 =0Ë&& (
ssd
->
ch™√l_hód
[
i
].
gc_comm™d
 =
NULL
) )

3325 #ifde‡
DEBUG


3326 
	`¥ötf
("begö gÿötÿ£rvi˚s_2_wrôe, fœg=0,Êag_g¯i†%d\n",
Êag_gc
);

3327 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3328 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3336 #ifde‡
DEBUG


3337 
	`¥ötf
("bef‹êgÿötÿ£rvi˚s_2_wrôe,ch™√»i†%d\n",
i
);

3339 
	`√w_£rvi˚s_2_wrôe
(
ssd
, 
i
, &
Êag
, &
chg_cur_time_Êag
);

3341 #ifde‡
DEBUG


3342 
	`¥ötf
("föish sîvi˚s_2_wrôe, fœg i†%d, fœg_g¯i†%d\n",
Êag
, 
Êag_gc
);

3343 
	`¥ötfsub_ªque°_°©us
(
ssd
);

3344 
	`¥ötf_evîy_chù_ªad_subªque°
(
ssd
);

3352  
ssd
;

3353 
	}
}

3359 
ssd_öfo
 *
	$dy«mic_adv™˚d_¥o˚ss
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
) {

3360 
dõ
 = 0, 
∂™e
 = 0;

3361 
subs_cou¡
 = 0;

3362 
Êag
;

3363 
g©e
;

3364 
∂™e_∂a˚
;

3365 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL, *
sub0
 = NULL, *
sub1
 = NULL, *
sub2
 = NULL, *
sub3
 = NULL, *
sub0_rw
 = NULL, *
sub1_rw
 = NULL, *
sub2_rw
 = NULL, *
sub3_rw
 = NULL;

3366 
sub_ªque°
 **
subs
 = 
NULL
;

3367 
max_sub_num
 = 0;

3368 
dõ_tokí
 = 0, 
∂™e_tokí
 = 0;

3369 *
∂™e_bôs
 = 
NULL
;

3370 
öãæóvî_cou¡
 = 0;

3372 
mask
 = 0x00000001;

3373 
i
 = 0, 
j
 = 0;

3374 #ifde‡
DEBUG


3375 
	`¥ötf
("enter dynamic_advanced_process\n");

3378 
max_sub_num
 = (
ssd
->
∑ømëî
->
dõ_chù
Ë* (ssd->∑ømëî->
∂™e_dõ
);

3379 
g©e
 = 
max_sub_num
;

3380 
subs
 = (
sub_ªque°
 **Ë
	`mÆloc
(
max_sub_num
 * (sub_request *));

3381 
	`Æloc_as£π
(
subs
, "sub_request");

3383 
i
 = 0; i < 
max_sub_num
; i++) {

3384 
subs
[
i
] = 
NULL
;

3387 i‡((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =0Ë&& (ssd->∑ømëî->
dy«mic_Æloˇti⁄
 == 0) &&

3388 (
ssd
->
∑ømëî
->
ad_¥i‹ôy2
 == 0)) {

3389 
g©e
 = 
ssd
->
ªÆ_time_subªq
 / ssd->
∑ømëî
->
ch™√l_numbî
;

3391 i‡(
g©e
 == 0) {

3392 
g©e
 = 1;

3394 i‡(
ssd
->
ªÆ_time_subªq
 % ssd->
∑ømëî
->
ch™√l_numbî
 != 0) {

3395 
g©e
++;

3400 i‡((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 ==

3403 i‡(
ssd
->
∑ømëî
->
dy«mic_Æloˇti⁄
 == 0) {

3404 
sub
 = 
ssd
->
subs_w_hód
;

3406 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

3409 
subs_cou¡
 = 0;

3411 (
sub
 !
NULL
Ë&& (
subs_cou¡
 < 
max_sub_num
Ë&& (subs_cou¡ < 
g©e
)) {

3412 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

3413 i‡((
sub
->
upd©e
 =
NULL
Ë|| ((sub->upd©ê!NULLË&& ((sub->upd©e->
cuºít_°©e
 =
SR_COMPLETE
) ||

3414 ((
sub
->
upd©e
->
√xt_°©e
 =
SR_COMPLETE
) &&

3415 (
sub
->
upd©e
->
√xt_°©e_¥edi˘_time
 <=

3416 
ssd
->
cuºít_time
)))))

3418 
subs
[
subs_cou¡
] = 
sub
;

3419 
subs_cou¡
++;

3423 
p
 = 
sub
;

3424 
sub
 = sub->
√xt_node
;

3427 i‡(
subs_cou¡
 == 0)

3429 
i
 = 0; i < 
max_sub_num
; i++) {

3430 
subs
[
i
] = 
NULL
;

3432 
	`‰ì
(
subs
);

3434 
subs
 = 
NULL
;

3435 
	`‰ì
(
∂™e_bôs
);

3436  
NULL
;

3438 i‡(
subs_cou¡
 >= 2) {

3443 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) == AD_TWOPLANE) &&

3444 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE)) {

3445 
	`gë_µn_f‹_adv™˚d_comm™ds
(
ssd
, 
ch™√l
, 
chù
, 
subs
, 
subs_cou¡
, 
INTERLEAVE_TWO_PLANE
);

3446 } i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) == AD_TWOPLANE) &&

3447 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) != AD_INTERLEAVE)) {

3448 i‡(
subs_cou¡
 > 
ssd
->
∑ømëî
->
∂™e_dõ
) {

3449 
i
 = 
ssd
->
∑ømëî
->
∂™e_dõ
; i < 
subs_cou¡
; i++) {

3450 
subs
[
i
] = 
NULL
;

3452 
subs_cou¡
 = 
ssd
->
∑ømëî
->
∂™e_dõ
;

3454 
	`gë_µn_f‹_adv™˚d_comm™ds
(
ssd
, 
ch™√l
, 
chù
, 
subs
, 
subs_cou¡
, 
TWO_PLANE
);

3455 } i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) != AD_TWOPLANE) &&

3456 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE)) {

3458 i‡(
subs_cou¡
 > 
ssd
->
∑ømëî
->
dõ_chù
) {

3459 
i
 = 
ssd
->
∑ømëî
->
dõ_chù
; i < 
subs_cou¡
; i++) {

3460 
subs
[
i
] = 
NULL
;

3462 
subs_cou¡
 = 
ssd
->
∑ømëî
->
dõ_chù
;

3464 
	`gë_µn_f‹_adv™˚d_comm™ds
(
ssd
, 
ch™√l
, 
chù
, 
subs
, 
subs_cou¡
, 
INTERLEAVE
);

3466 
i
 = 1; i < 
subs_cou¡
; i++) {

3467 
subs
[
i
] = 
NULL
;

3469 
subs_cou¡
 = 1;

3470 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
subs
[0]);

3474 i‡(
subs_cou¡
 == 1)

3476 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
subs
[0]);

3484 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

3485 
∂™e_bôs
 = (*Ë
	`mÆloc
((
ssd
->
∑ømëî
->
dõ_chù
) * ());

3486 
	`Æloc_as£π
(
∂™e_bôs
, "plane_bits");

3487 
	`mem£t
(
∂™e_bôs
, 0, (
ssd
->
∑ømëî
->
dõ_chù
) * ());

3489 
i
 = 0; i < 
ssd
->
∑ømëî
->
dõ_chù
; i++) {

3490 
∂™e_bôs
[
i
] = 0x00000000;

3492 
subs_cou¡
 = 0;

3494 (
sub
 !
NULL
Ë&& (
subs_cou¡
 < 
max_sub_num
)) {

3495 i‡(
sub
->
cuºít_°©e
 =
SR_WAIT
) {

3496 i‡((
sub
->
upd©e
 =
NULL
Ë|| ((sub->upd©ê!NULLË&& ((sub->upd©e->
cuºít_°©e
 =
SR_COMPLETE
) ||

3497 ((
sub
->
upd©e
->
√xt_°©e
 =
SR_COMPLETE
) &&

3498 (
sub
->
upd©e
->
√xt_°©e_¥edi˘_time
 <=

3499 
ssd
->
cuºít_time
))))) {

3500 i‡(
sub
->
loˇti⁄
->
chù
 == chip) {

3501 
∂™e_∂a˚
 = 0x00000001 << (
sub
->
loˇti⁄
->
∂™e
);

3503 i‡((
∂™e_bôs
[
sub
->
loˇti⁄
->
dõ
] & 
∂™e_∂a˚
) !=

3504 
∂™e_∂a˚
)

3506 
subs
[
sub
->
loˇti⁄
->
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + sub->loˇti⁄->
∂™e
] = sub;

3507 
subs_cou¡
++;

3508 
∂™e_bôs
[
sub
->
loˇti⁄
->
dõ
] = (∂™e_bôs[sub->loˇti⁄->dõ] | 
∂™e_∂a˚
);

3513 
sub
 = sub->
√xt_node
;

3516 i‡(
subs_cou¡
 == 0)

3518 
i
 = 0; i < 
max_sub_num
; i++) {

3519 
subs
[
i
] = 
NULL
;

3521 
	`‰ì
(
subs
);

3522 
subs
 = 
NULL
;

3523 
	`‰ì
(
∂™e_bôs
);

3524  
NULL
;

3527 
Êag
 = 0;

3528 i‡(
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 != 0) {

3529 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_COPYBACK
) == AD_COPYBACK)

3531 i‡(
subs_cou¡
 > 1)

3533 
	`gë_µn_f‹_adv™˚d_comm™ds
(
ssd
, 
ch™√l
, 
chù
, 
subs
, 
subs_cou¡
, 
COPY_BACK
);

3535 
i
 = 0; i < 
max_sub_num
; i++) {

3536 i‡(
subs
[
i
] !
NULL
) {

3540 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
subs
[
i
]);

3546 i‡(
subs_cou¡
 > 1)

3548 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE) &&

3549 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) == AD_TWOPLANE)) {

3550 
	`gë_µn_f‹_adv™˚d_comm™ds
(
ssd
, 
ch™√l
, 
chù
, 
subs
, 
subs_cou¡
, 
INTERLEAVE_TWO_PLANE
);

3551 } i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE) &&

3552 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) != AD_TWOPLANE)) {

3553 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

3554 i‡(
∂™e_bôs
[
dõ
] != 0x00000000) {

3555 
i
 = 0; i < 
ssd
->
∑ømëî
->
∂™e_dõ
; i++) {

3556 
∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

3557 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 =

3558 (
∂™e_tokí
 + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

3559 
mask
 = 0x00000001 << 
∂™e_tokí
;

3560 i‡((
∂™e_bôs
[
dõ
] & 
mask
) == mask) {

3561 
∂™e_bôs
[
dõ
] = 
mask
;

3565 
i
 = i + 1; i < 
ssd
->
∑ømëî
->
∂™e_dõ
; i++) {

3566 
∂™e
 = (
∂™e_tokí
 + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

3567 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
] = 
NULL
;

3568 
subs_cou¡
--;

3570 
öãæóvî_cou¡
++;

3573 i‡(
öãæóvî_cou¡
 >= 2) {

3574 
	`gë_µn_f‹_adv™˚d_comm™ds
(
ssd
, 
ch™√l
, 
chù
, 
subs
, 
subs_cou¡
, 
INTERLEAVE
);

3576 
i
 = 0; i < 
max_sub_num
; i++) {

3577 i‡(
subs
[
i
] !
NULL
) {

3581 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
subs
[
i
]);

3584 i‡(((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) != AD_INTERLEAVE) &&

3585 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) == AD_TWOPLANE)) {

3586 
i
 = 0; i < 
ssd
->
∑ømëî
->
dõ_chù
; i++) {

3587 
dõ_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3588 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 =

3589 (
dõ_tokí
 + 1Ë% 
ssd
->
∑ømëî
->
dõ_chù
;

3590 i‡(
	`size
(
∂™e_bôs
[
dõ_tokí
]) > 1) {

3596 i‡(
i
 < 
ssd
->
∑ømëî
->
dõ_chù
) {

3597 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

3598 i‡(
dõ
 !
dõ_tokí
) {

3599 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

3600 i‡(
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
] !
NULL
) {

3601 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
] = 
NULL
;

3602 
subs_cou¡
--;

3607 
	`gë_µn_f‹_adv™˚d_comm™ds
(
ssd
, 
ch™√l
, 
chù
, 
subs
, 
subs_cou¡
, 
TWO_PLANE
);

3610 
i
 = 0; i < 
ssd
->
∑ømëî
->
dõ_chù
; i++) {

3611 
dõ_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3612 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 =

3613 (
dõ_tokí
 + 1Ë% 
ssd
->
∑ømëî
->
dõ_chù
;

3614 i‡(
∂™e_bôs
[
dõ_tokí
] != 0x00000000) {

3615 
j
 = 0; j < 
ssd
->
∑ømëî
->
∂™e_dõ
; j++) {

3616 
∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ_tokí
].
tokí
;

3617 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ_tokí
].
tokí
 =

3618 (
∂™e_tokí
 + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

3619 i‡(((
∂™e_bôs
[
dõ_tokí
]Ë& (0x00000001 << 
∂™e_tokí
)) != 0x00000000) {

3620 
sub
 = 
subs
[
dõ_tokí
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e_tokí
];

3626 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
sub
);

3631 
i
 = 0; i < 
ssd
->
∑ømëî
->
dõ_chù
; i++) {

3632 
dõ_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3633 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ_tokí
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

3634 i‡(
∂™e_bôs
[
dõ_tokí
] != 0x00000000) {

3635 
j
 = 0; j < 
ssd
->
∑ømëî
->
∂™e_dõ
; j++) {

3636 
∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ_tokí
].
tokí
;

3637 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ_tokí
].
tokí
 =

3638 (
∂™e_tokí
 + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

3639 i‡(((
∂™e_bôs
[
dõ_tokí
]Ë& (0x00000001 << 
∂™e_tokí
)) != 0x00000000) {

3640 
sub
 = 
subs
[
dõ_tokí
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e_tokí
];

3644 i‡(
sub
 !
NULL
) {

3649 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
sub
);

3654 
i
 = 0; i < 
ssd
->
∑ømëî
->
dõ_chù
; i++) {

3655 
dõ_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3656 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ_tokí
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

3657 i‡(
∂™e_bôs
[
dõ_tokí
] != 0x00000000) {

3658 
j
 = 0; j < 
ssd
->
∑ømëî
->
∂™e_dõ
; j++) {

3659 
∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ_tokí
].
tokí
;

3660 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 =

3661 (
∂™e_tokí
 + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

3662 i‡(((
∂™e_bôs
[
dõ_tokí
]Ë& (0x00000001 << 
∂™e_tokí
)) != 0x00000000) {

3663 
sub
 = 
subs
[
dõ_tokí
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e_tokí
];

3667 i‡(
sub
 !
NULL
) {

3672 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
sub
);

3677 
i
 = 0; i < 
max_sub_num
; i++) {

3678 
subs
[
i
] = 
NULL
;

3680 
	`‰ì
(
subs
);

3681 
subs
 = 
NULL
;

3682 
	`‰ì
(
∂™e_bôs
);

3683  
ssd
;

3684 
	}
}

3689 
Sètus


3690 
	$gë_µn_f‹_n‹mÆ_comm™d
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
sub_ªque°
 *
sub
) {

3691 
dõ
 = 0;

3692 
∂™e
 = 0;

3693 #ifde‡
DEBUG


3694 
	`¥ötf
("enter into get_ppn_for_normal_command\n");

3697 i‡(
sub
 =
NULL
) {

3698  
ERROR
;

3701 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =
DYNAMIC_ALLOCATION
) {

3702 
dõ
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3703 
∂™e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

3704 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
sub
);

3705 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = (
∂™e
 + 1Ë% ssd->
∑ømëî
->
∂™e_dõ
;

3706 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

3708 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, &
sub
, 1, 
NORMAL
);

3709  
SUCCESS
;

3711 
dõ
 = 
sub
->
loˇti⁄
->die;

3712 
∂™e
 = 
sub
->
loˇti⁄
->plane;

3713 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
sub
);

3714 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, &
sub
, 1, 
NORMAL
);

3715  
SUCCESS
;

3718 
	}
}

3729 
Sètus


3730 
	$gë_µn_f‹_adv™˚d_comm™ds
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
sub_ªque°
 **
subs
,

3731 
subs_cou¡
, 
comm™d
) {

3732 
dõ
 = 0, 
∂™e
 = 0;

3733 
dõ_tokí
 = 0, 
∂™e_tokí
 = 0;

3734 
sub_ªque°
 *
sub
 = 
NULL
;

3735 
i
 = 0, 
j
 = 0, 
k
 = 0;

3736 
unvÆid_subs_cou¡
 = 0;

3737 
vÆid_subs_cou¡
 = 0;

3738 
öãæóve_Êag
 = 
FALSE
;

3739 
mu…i_∂™e_Álg
 = 
FALSE
;

3740 
max_subs_num
 = 0;

3741 
sub_ªque°
 *
fú°_sub_ö_chù
 = 
NULL
;

3742 
sub_ªque°
 *
fú°_sub_ö_dõ
 = 
NULL
;

3743 
sub_ªque°
 *
£c⁄d_sub_ö_dõ
 = 
NULL
;

3744 
°©e
 = 
SUCCESS
;

3745 
mu…i_∂™e_Êag
 = 
FALSE
;

3747 
max_subs_num
 = 
ssd
->
∑ømëî
->
dõ_chù
 * ssd->∑ømëî->
∂™e_dõ
;

3749 #ifde‡
DEBUG


3750 
	`¥ötf
("enter get_ppn_for_advanced_commands\n");

3753 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =
DYNAMIC_ALLOCATION
)

3755 i‡((
comm™d
 =
INTERLEAVE_TWO_PLANE
) ||

3756 (
comm™d
 =
COPY_BACK
))

3758 
i
 = 0; i < 
subs_cou¡
; i++) {

3759 
dõ
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3760 i‡(
i
 <

3761 
ssd
->
∑ømëî
->
dõ_chù
)

3763 
∂™e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

3764 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
subs
[
i
]);

3765 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 =

3766 (
∂™e
 + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

3773 
°©e
 = 
	`make_Àvñ_∑ge
(
ssd
, 
subs
[
i
 % ssd->
∑ømëî
->
dõ_chù
], subs[i]);

3774 i‡(
°©e
 !
SUCCESS
) {

3775 
subs
[
i
] = 
NULL
;

3776 
unvÆid_subs_cou¡
++;

3778 
mu…i_∂™e_Êag
 = 
TRUE
;

3781 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

3783 
vÆid_subs_cou¡
 = 
subs_cou¡
 - 
unvÆid_subs_cou¡
;

3784 
ssd
->
öãæóve_cou¡
++;

3785 i‡(
mu…i_∂™e_Êag
 =
TRUE
) {

3786 
ssd
->
öãr_m∂™e_cou¡
++;

3787 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 0, 
subs
, 
vÆid_subs_cou¡
,

3788 
INTERLEAVE_TWO_PLANE
);

3790 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 0, 
subs
, 
vÆid_subs_cou¡
, 
INTERLEAVE
);

3792  
SUCCESS
;

3794 i‡(
comm™d
 =
INTERLEAVE
) {

3799 
i
 = 0; (ò< 
subs_cou¡
Ë&& (ò< 
ssd
->
∑ømëî
->
dõ_chù
); i++) {

3800 
dõ
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3801 
∂™e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

3802 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
subs
[
i
]);

3803 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 =

3804 (
∂™e
 + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

3805 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

3806 
vÆid_subs_cou¡
++;

3808 
ssd
->
öãæóve_cou¡
++;

3809 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 0, 
subs
, 
vÆid_subs_cou¡
, 
INTERLEAVE
);

3810  
SUCCESS
;

3812 i‡(
comm™d
 =
TWO_PLANE
) {

3813 i‡(
subs_cou¡
 < 2) {

3814  
ERROR
;

3816 
dõ
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

3817 
j
 = 0; j < 
subs_cou¡
; j++) {

3818 i‡(
j
 == 1) {

3819 
°©e
 = 
	`föd_Àvñ_∑ge
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
subs
[0],

3820 
subs
[1]);

3821 i‡(
°©e
 !
SUCCESS
) {

3822 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
subs
[0]);

3823  
FAILURE
;

3825 
vÆid_subs_cou¡
 = 2;

3827 } i‡(
j
 > 1) {

3828 
°©e
 = 
	`make_Àvñ_∑ge
(
ssd
, 
subs
[0],

3829 
subs
[
j
]);

3830 i‡(
°©e
 !
SUCCESS
) {

3831 
k
 = 
j
; k < 
subs_cou¡
; k++) {

3832 
subs
[
k
] = 
NULL
;

3834 
subs_cou¡
 = 
j
;

3837 
vÆid_subs_cou¡
++;

3841 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

3842 
ssd
->
m_∂™e_¥og_cou¡
++;

3843 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
subs
, 
vÆid_subs_cou¡
, 
TWO_PLANE
);

3844  
SUCCESS
;

3847  
ERROR
;

3852 i‡((
comm™d
 =
INTERLEAVE_TWO_PLANE
Ë|| (comm™d =
COPY_BACK
)) {

3853 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

3854 
fú°_sub_ö_dõ
 = 
NULL
;

3855 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

3856 
sub
 = 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
];

3857 i‡(
sub
 !
NULL
) {

3858 i‡(
fú°_sub_ö_dõ
 =
NULL
) {

3859 
fú°_sub_ö_dõ
 = 
sub
;

3860 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
sub
);

3862 
°©e
 = 
	`make_Àvñ_∑ge
(
ssd
, 
fú°_sub_ö_dõ
, 
sub
);

3863 i‡(
°©e
 !
SUCCESS
) {

3864 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
] = 
NULL
;

3865 
subs_cou¡
--;

3866 
sub
 = 
NULL
;

3868 
mu…i_∂™e_Êag
 = 
TRUE
;

3874 i‡(
mu…i_∂™e_Êag
 =
TRUE
) {

3875 
ssd
->
öãr_m∂™e_cou¡
++;

3876 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 0, 
subs
, 
vÆid_subs_cou¡
, 
INTERLEAVE_TWO_PLANE
);

3877  
SUCCESS
;

3879 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 0, 
subs
, 
vÆid_subs_cou¡
, 
INTERLEAVE
);

3880  
SUCCESS
;

3883 i‡(
comm™d
 =
INTERLEAVE
) {

3884 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

3885 
fú°_sub_ö_dõ
 = 
NULL
;

3886 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

3887 
sub
 = 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
];

3888 i‡(
sub
 !
NULL
) {

3889 i‡(
fú°_sub_ö_dõ
 =
NULL
) {

3890 
fú°_sub_ö_dõ
 = 
sub
;

3891 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
sub
);

3892 
vÆid_subs_cou¡
++;

3894 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
] = 
NULL
;

3895 
subs_cou¡
--;

3896 
sub
 = 
NULL
;

3901 i‡(
vÆid_subs_cou¡
 > 1) {

3902 
ssd
->
öãæóve_cou¡
++;

3904 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 0, 
subs
, 
vÆid_subs_cou¡
, 
INTERLEAVE
);

3906 i‡(
comm™d
 =
TWO_PLANE
) {

3907 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

3908 
fú°_sub_ö_dõ
 = 
NULL
;

3909 
£c⁄d_sub_ö_dõ
 = 
NULL
;

3910 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

3911 
sub
 = 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
];

3912 i‡(
sub
 !
NULL
) {

3913 i‡(
fú°_sub_ö_dõ
 =
NULL
) {

3914 
fú°_sub_ö_dõ
 = 
sub
;

3915 } i‡(
£c⁄d_sub_ö_dõ
 =
NULL
) {

3916 
£c⁄d_sub_ö_dõ
 = 
sub
;

3917 
°©e
 = 
	`föd_Àvñ_∑ge
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
fú°_sub_ö_dõ
, 
£c⁄d_sub_ö_dõ
);

3918 i‡(
°©e
 !
SUCCESS
) {

3919 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
] = 
NULL
;

3920 
subs_cou¡
--;

3921 
£c⁄d_sub_ö_dõ
 = 
NULL
;

3922 
sub
 = 
NULL
;

3924 
vÆid_subs_cou¡
 = 2;

3927 
°©e
 = 
	`make_Àvñ_∑ge
(
ssd
, 
fú°_sub_ö_dõ
, 
sub
);

3928 i‡(
°©e
 !
SUCCESS
) {

3929 
subs
[
dõ
 * 
ssd
->
∑ømëî
->
∂™e_dõ
 + 
∂™e
] = 
NULL
;

3930 
subs_cou¡
--;

3931 
sub
 = 
NULL
;

3933 
vÆid_subs_cou¡
++;

3938 i‡(
£c⁄d_sub_ö_dõ
 !
NULL
) {

3939 
mu…i_∂™e_Êag
 = 
TRUE
;

3943 i‡(
mu…i_∂™e_Êag
 =
TRUE
) {

3944 
ssd
->
m_∂™e_¥og_cou¡
++;

3945 
	`compuã_£rve_time
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
subs
, 
vÆid_subs_cou¡
, 
TWO_PLANE
);

3946  
SUCCESS
;

3949 
i
 = 0;

3950 
sub
 = 
NULL
;

3951 (
sub
 =
NULL
Ë&& (
i
 < 
max_subs_num
)) {

3952 
sub
 = 
subs
[
i
];

3953 
i
++;

3955 i‡(
sub
 !
NULL
) {

3956 
	`gë_µn_f‹_n‹mÆ_comm™d
(
ssd
, 
ch™√l
, 
chù
, 
sub
);

3957  
FAILURE
;

3959  
ERROR
;

3964  
ERROR
;

3967 
	}
}

3973 
Sètus
 
	$make_Àvñ_∑ge
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub0
, sub_ªque° *
sub1
) {

3974 
i
 = 0, 
j
 = 0, 
k
 = 0;

3975 
ch™√l
 = 0, 
chù
 = 0, 
dõ
 = 0, 
∂™e0
 = 0, 
∂™e1
 = 0, 
block0
 = 0, 
block1
 = 0, 
∑ge0
 = 0, 
∑ge1
 = 0;

3976 
a˘ive_block0
 = 0, 
a˘ive_block1
 = 0;

3977 
ﬁd_∂™e_tokí
 = 0;

3979 i‡((
sub0
 =
NULL
Ë|| (
sub1
 =NULLË|| (sub0->
loˇti⁄
 == NULL)) {

3980  
ERROR
;

3982 
ch™√l
 = 
sub0
->
loˇti⁄
->channel;

3983 
chù
 = 
sub0
->
loˇti⁄
->chip;

3984 
dõ
 = 
sub0
->
loˇti⁄
->die;

3985 
∂™e0
 = 
sub0
->
loˇti⁄
->
∂™e
;

3986 
block0
 = 
sub0
->
loˇti⁄
->
block
;

3987 
∑ge0
 = 
sub0
->
loˇti⁄
->
∑ge
;

3988 
ﬁd_∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

3995 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =
DYNAMIC_ALLOCATION
) {

3996 
ﬁd_∂™e_tokí
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

3997 
i
 = 0; i < 
ssd
->
∑ømëî
->
∂™e_dõ
; i++) {

3998 
∂™e1
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

3999 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e1
].
add_ªg_µn
 == -1) {

4000 
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e1
);

4001 
block1
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e1
].
a˘ive_block
;

4008 i‡(
block1
 =
block0
) {

4009 
∑ge1
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e1
].
blk_hód
[
block1
].
œ°_wrôe_∑ge
 +

4011 i‡(
∑ge1
 =
∑ge0
) {

4013 } i‡(
∑ge1
 < 
∑ge0
) {

4014 i‡(
ssd
->
∑ømëî
->
gªed_MPW_ad
 == 1)

4017 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e1
, 
block1
, 
∑ge0
);

4023 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = (
∂™e1
 + 1Ë% ssd->
∑ømëî
->
∂™e_dõ
;

4025 i‡(
i
 < 
ssd
->
∑ømëî
->
∂™e_dõ
) {

4026 
	`Êash_∑ge_°©e_modify
(
ssd
, 
sub1
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e1
, 
block1
,

4027 
∑ge0
);

4029 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = (
∂™e1
 + 1Ë% ssd->
∑ømëî
->
∂™e_dõ
;

4030  
SUCCESS
;

4032 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = 
ﬁd_∂™e_tokí
;

4033  
FAILURE
;

4037 i‡((
sub1
->
loˇti⁄
 =
NULL
Ë|| (sub1->loˇti⁄->
ch™√l
 !ch™√lË|| (sub1->loˇti⁄->
chù
 != chip) ||

4038 (
sub1
->
loˇti⁄
->
dõ
 != die)) {

4039  
ERROR
;

4041 
∂™e1
 = 
sub1
->
loˇti⁄
->
∂™e
;

4042 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e1
].
add_ªg_µn
 == -1) {

4043 
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e1
);

4044 
block1
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e1
].
a˘ive_block
;

4045 i‡(
block1
 =
block0
) {

4046 
∑ge1
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e1
].
blk_hód
[
block1
].
œ°_wrôe_∑ge
 +

4048 i‡(
∑ge1
 > 
∑ge0
) {

4049  
FAILURE
;

4050 } i‡(
∑ge1
 < 
∑ge0
) {

4051 i‡(
ssd
->
∑ømëî
->
gªed_MPW_ad
 == 1) {

4053 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e1
, 
block1
, 
∑ge0
);

4054 
	`Êash_∑ge_°©e_modify
(
ssd
, 
sub1
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e1
, 
block1
, 
∑ge0
);

4056  
SUCCESS
;

4058  
FAILURE
;

4061 
	`Êash_∑ge_°©e_modify
(
ssd
, 
sub1
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e1
, 
block1
, 
∑ge0
);

4063  
SUCCESS
;

4067  
FAILURE
;

4071  
ERROR
;

4075 
	}
}

4082 
Sètus
 
	$föd_Àvñ_∑ge
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
,

4083 
sub_ªque°
 *
subA
, sub_ªque° *
subB
) {

4084 
i
, 
∂™eA
, 
∂™eB
, 
a˘ive_blockA
, 
a˘ive_blockB
, 
∑geA
, 
∑geB
, 
aim_∑ge
, 
ﬁd_∂™e
;

4085 
gc_›î©i⁄
 *
gc_node
;

4087 
ﬁd_∂™e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

4094 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 0) {

4095 
∂™eA
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

4096 i‡(
∂™eA
 % 2 == 0) {

4097 
∂™eB
 = 
∂™eA
 + 1;

4098 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 =

4099 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 + 2Ë% ssd->
∑ømëî
->
∂™e_dõ
;

4101 
∂™eA
 = (∂™eA + 1Ë% 
ssd
->
∑ømëî
->
∂™e_dõ
;

4102 
∂™eB
 = 
∂™eA
 + 1;

4103 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 =

4104 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 + 3Ë% ssd->
∑ømëî
->
∂™e_dõ
;

4108 
∂™eA
 = 
subA
->
loˇti⁄
->
∂™e
;

4109 
∂™eB
 = 
subB
->
loˇti⁄
->
∂™e
;

4111 
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
);

4112 
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
);

4113 
a˘ive_blockA
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
a˘ive_block
;

4114 
a˘ive_blockB
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
a˘ive_block
;

4122 i‡(
a˘ive_blockA
 =
a˘ive_blockB
) {

4123 
∑geA
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
a˘ive_blockA
].
œ°_wrôe_∑ge
 +

4125 
∑geB
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
a˘ive_blockB
].
œ°_wrôe_∑ge
 +

4127 i‡(
∑geA
 =
∑geB
)

4129 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockA
, 
∑geA
);

4130 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockB
, 
∑geB
);

4132 i‡(
ssd
->
∑ømëî
->
gªed_MPW_ad
 == 1)

4134 i‡(
∑geA
 < 
∑geB
) {

4135 
aim_∑ge
 = 
∑geB
;

4136 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockA
,

4137 
aim_∑ge
);

4139 
aim_∑ge
 = 
∑geA
;

4140 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockB
, 
aim_∑ge
);

4142 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockA
, 
aim_∑ge
);

4143 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockB
, 
aim_∑ge
);

4146 
subA
 = 
NULL
;

4147 
subB
 = 
NULL
;

4148 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = 
ﬁd_∂™e
;

4149  
FAILURE
;

4157 
∑geA
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
a˘ive_blockA
].
œ°_wrôe_∑ge
 +

4159 
∑geB
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
a˘ive_blockB
].
œ°_wrôe_∑ge
 +

4161 i‡(
∑geA
 < 
∑geB
) {

4162 i‡(
ssd
->
∑ømëî
->
gªed_MPW_ad
 == 1)

4169 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
a˘ive_blockB
].
∑ge_hód
[
∑geB
].
‰ì_°©e
 ==

4170 
PG_SUB
) {

4171 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockB
, 
∑geB
);

4172 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockB
, 
∑geB
);

4173 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockB
, 
∑geB
);

4180 
i
 = 0; i < 
ssd
->
∑ømëî
->
block_∂™e
; i++) {

4181 
∑geA
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
i
].
œ°_wrôe_∑ge
 +

4183 
∑geB
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
i
].
œ°_wrôe_∑ge
 +

4185 i‡((
∑geA
 < 
ssd
->
∑ømëî
->
∑ge_block
Ë&& (
∑geB
 < ssd->parameter->page_block)) {

4186 i‡(
∑geA
 < 
∑geB
) {

4187 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
i
].
∑ge_hód
[
∑geB
].
‰ì_°©e
 ==

4188 
PG_SUB
) {

4189 
aim_∑ge
 = 
∑geB
;

4190 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
i
, 
aim_∑ge
);

4194 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
i
].
∑ge_hód
[
∑geA
].
‰ì_°©e
 ==

4195 
PG_SUB
) {

4196 
aim_∑ge
 = 
∑geA
;

4197 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
i
, 
aim_∑ge
);

4203 i‡(
i
 < 
ssd
->
∑ømëî
->
block_∂™e
) {

4204 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
i
, 
aim_∑ge
);

4205 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
i
, 
aim_∑ge
);

4207 
subA
 = 
NULL
;

4208 
subB
 = 
NULL
;

4209 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = 
ﬁd_∂™e
;

4210  
FAILURE
;

4215 
subA
 = 
NULL
;

4216 
subB
 = 
NULL
;

4217 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = 
ﬁd_∂™e
;

4218  
FAILURE
;

4222 i‡(
ssd
->
∑ømëî
->
gªed_MPW_ad
 == 1) {

4223 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
a˘ive_blockA
].
∑ge_hód
[
∑geA
].
‰ì_°©e
 ==

4224 
PG_SUB
) {

4225 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockA
, 
∑geA
);

4226 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockA
, 
∑geA
);

4227 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockA
, 
∑geA
);

4229 
i
 = 0; i < 
ssd
->
∑ømëî
->
block_∂™e
; i++) {

4230 
∑geA
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
i
].
œ°_wrôe_∑ge
 +

4232 
∑geB
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
i
].
œ°_wrôe_∑ge
 +

4234 i‡((
∑geA
 < 
ssd
->
∑ømëî
->
∑ge_block
Ë&& (
∑geB
 < ssd->parameter->page_block)) {

4235 i‡(
∑geA
 < 
∑geB
) {

4236 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
i
].
∑ge_hód
[
∑geB
].
‰ì_°©e
 ==

4237 
PG_SUB
) {

4238 
aim_∑ge
 = 
∑geB
;

4239 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
i
, 
aim_∑ge
);

4243 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
i
].
∑ge_hód
[
∑geA
].
‰ì_°©e
 ==

4244 
PG_SUB
) {

4245 
aim_∑ge
 = 
∑geA
;

4246 
	`make_ßme_Àvñ
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
i
, 
aim_∑ge
);

4252 i‡(
i
 < 
ssd
->
∑ømëî
->
block_∂™e
) {

4253 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
i
, 
aim_∑ge
);

4254 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
i
, 
aim_∑ge
);

4256 
subA
 = 
NULL
;

4257 
subB
 = 
NULL
;

4258 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = 
ﬁd_∂™e
;

4259  
FAILURE
;

4264 i‡((
∑geA
 =
∑geB
) && (pageA == 0)) {

4270 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
a˘ive_blockA
].
∑ge_hód
[
∑geA
].
‰ì_°©e
 ==

4271 
PG_SUB
)

4273 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
a˘ive_blockA
].
∑ge_hód
[
∑geA
].
‰ì_°©e
 ==

4274 
PG_SUB
)) {

4275 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockA
, 
∑geA
);

4276 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockA
, 
∑geA
);

4278 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
blk_hód
[
a˘ive_blockB
].
∑ge_hód
[
∑geA
].
‰ì_°©e
 ==

4279 
PG_SUB
)

4281 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
blk_hód
[
a˘ive_blockB
].
∑ge_hód
[
∑geA
].
‰ì_°©e
 ==

4282 
PG_SUB
)) {

4283 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subA
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eA
, 
a˘ive_blockB
, 
∑geA
);

4284 
	`Êash_∑ge_°©e_modify
(
ssd
, 
subB
, 
ch™√l
, 
chù
, 
dõ
, 
∂™eB
, 
a˘ive_blockB
, 
∑geA
);

4286 
subA
 = 
NULL
;

4287 
subB
 = 
NULL
;

4288 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = 
ﬁd_∂™e
;

4289  
FAILURE
;

4292 
subA
 = 
NULL
;

4293 
subB
 = 
NULL
;

4294 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = 
ﬁd_∂™e
;

4295  
ERROR
;

4301 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eA
].
‰ì_∑ge
 <

4302 (
ssd
->
∑ømëî
->
∑ge_block
 * ssd->∑ømëî->
block_∂™e
 * ssd->∑ømëî->
gc_h¨d_thªshﬁd
)) {

4303 
gc_node
 = (
gc_›î©i⁄
 *Ë
	`mÆloc
((gc_operation));

4304 
	`Æloc_as£π
(
gc_node
, "gc_node");

4305 
	`mem£t
(
gc_node
, 0, (
gc_›î©i⁄
));

4307 
gc_node
->
√xt_node
 = 
NULL
;

4308 
gc_node
->
chù
 = chip;

4309 
gc_node
->
dõ
 = die;

4310 
gc_node
->
∂™e
 = 
∂™eA
;

4311 
gc_node
->
block
 = 0xffffffff;

4312 
gc_node
->
∑ge
 = 0;

4313 
gc_node
->
°©e
 = 
GC_WAIT
;

4314 
gc_node
->
¥i‹ôy
 = 
GC_UNINTERRUPT
;

4315 
gc_node
->
√xt_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
;

4316 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
 = 
gc_node
;

4317 
ssd
->
gc_ªque°
++;

4319 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™eB
].
‰ì_∑ge
 <

4320 (
ssd
->
∑ømëî
->
∑ge_block
 * ssd->∑ømëî->
block_∂™e
 * ssd->∑ømëî->
gc_h¨d_thªshﬁd
)) {

4321 
gc_node
 = (
gc_›î©i⁄
 *Ë
	`mÆloc
((gc_operation));

4322 
	`Æloc_as£π
(
gc_node
, "gc_node");

4323 
	`mem£t
(
gc_node
, 0, (
gc_›î©i⁄
));

4325 
gc_node
->
√xt_node
 = 
NULL
;

4326 
gc_node
->
chù
 = chip;

4327 
gc_node
->
dõ
 = die;

4328 
gc_node
->
∂™e
 = 
∂™eB
;

4329 
gc_node
->
block
 = 0xffffffff;

4330 
gc_node
->
∑ge
 = 0;

4331 
gc_node
->
°©e
 = 
GC_WAIT
;

4332 
gc_node
->
¥i‹ôy
 = 
GC_UNINTERRUPT
;

4333 
gc_node
->
√xt_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
;

4334 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
 = 
gc_node
;

4335 
ssd
->
gc_ªque°
++;

4338  
SUCCESS
;

4339 
	}
}

4344 
ssd_öfo
 *

4345 
	$Êash_∑ge_°©e_modify
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub
, 
ch™√l
, 
chù
,

4346 
dõ
, 
∂™e
, 
block
, 
∑ge
) {

4347 
µn
, 
fuŒ_∑ge
;

4348 
loˇl
 *
loˇti⁄
;

4349 
dúe˘_îa£
 *
√w_dúe˘_îa£
, *
dúe˘_îa£_node
;

4351 
fuŒ_∑ge
 = ~(0xfffffff‡<< 
ssd
->
∑ømëî
->
sub∑ge_∑ge
);

4352 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
œ°_wrôe_∑ge
 = 
∑ge
;

4353 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
‰ì_∑ge_num
--;

4355 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
œ°_wrôe_∑ge
 >

4357 
	`¥ötf
("error!ÅheÜast writeÖageÜargerÅhan 64!!\n");

4361 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 ==

4364 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
 = 
	`föd_µn
(ssd, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
∑ge
);

4365 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 = sub->state;

4368 
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
;

4369 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, 
µn
);

4370 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
vÆid_°©e
 = 0;

4371 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
‰ì_°©e
 = 0;

4372 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
Õn
 = 0;

4373 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
övÆid_∑ge_num
++;

4374 i‡(
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
övÆid_∑ge_num
 ==

4375 
ssd
->
∑ømëî
->
∑ge_block
)

4377 
√w_dúe˘_îa£
 = (
dúe˘_îa£
 *Ë
	`mÆloc
((direct_erase));

4378 
	`Æloc_as£π
(
√w_dúe˘_îa£
, "new_direct_erase");

4379 
	`mem£t
(
√w_dúe˘_îa£
, 0, (
dúe˘_îa£
));

4381 
√w_dúe˘_îa£
->
block
 = 
loˇti⁄
->block;

4382 
√w_dúe˘_îa£
->
√xt_node
 = 
NULL
;

4383 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
;

4384 i‡(
dúe˘_îa£_node
 =
NULL
) {

4385 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
 = 
√w_dúe˘_îa£
;

4387 
√w_dúe˘_îa£
->
√xt_node
 = 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
;

4388 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
 = 
√w_dúe˘_îa£
;

4391 
	`‰ì
(
loˇti⁄
);

4392 
loˇti⁄
 = 
NULL
;

4393 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
≤
 = 
	`föd_µn
(ssd, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
∑ge
);

4394 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 = (ssd->dram->map->map_entry[sub->lpn].state | sub->state);

4397 
sub
->
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[sub->
Õn
].
≤
;

4398 
sub
->
loˇti⁄
->
ch™√l
 = channel;

4399 
sub
->
loˇti⁄
->
chù
 = chip;

4400 
sub
->
loˇti⁄
->
dõ
 = die;

4401 
sub
->
loˇti⁄
->
∂™e
 =Ölane;

4402 
sub
->
loˇti⁄
->
block
 = block;

4403 
sub
->
loˇti⁄
->
∑ge
 =Öage;

4405 
ssd
->
¥ogøm_cou¡
++;

4406 
ssd
->
ch™√l_hód
[
ch™√l
].
¥ogøm_cou¡
++;

4407 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
¥ogøm_cou¡
++;

4408 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
‰ì_∑ge
--;

4409 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
∑ge
].
Õn
 = 
sub
->lpn;

4410 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
∑ge
].
vÆid_°©e
 = 
sub
->
°©e
;

4411 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
∑ge
].
‰ì_°©e
 = (

4412 (~(
sub
->
°©e
)Ë& 
fuŒ_∑ge
);

4413 
ssd
->
wrôe_Êash_cou¡
++;

4415  
ssd
;

4416 
	}
}

4422 
ssd_öfo
 *

4423 
	$make_ßme_Àvñ
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

4424 
block
, 
aim_∑ge
) {

4425 
i
 = 0, 
°ï
, 
∑ge
;

4426 
dúe˘_îa£
 *
√w_dúe˘_îa£
, *
dúe˘_îa£_node
;

4428 
∑ge
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
œ°_wrôe_∑ge
 +

4430 
°ï
 = 
aim_∑ge
 - 
∑ge
;

4431 
i
 < 
°ï
) {

4432 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
∑ge
 +

4433 
i
].
vÆid_°©e
 = 0;

4434 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
∑ge
 +

4435 
i
].
‰ì_°©e
 = 0;

4436 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
∑ge
 +

4437 
i
].
Õn
 = 0;

4439 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
övÆid_∑ge_num
++;

4441 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
‰ì_∑ge_num
--;

4443 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
‰ì_∑ge
--;

4445 
i
++;

4448 
ssd
->
wa°e_∑ge_cou¡
 +
°ï
;

4450 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
œ°_wrôe_∑ge
 =

4451 
aim_∑ge
 - 1;

4453 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
övÆid_∑ge_num
 ==

4454 
ssd
->
∑ømëî
->
∑ge_block
)

4456 
√w_dúe˘_îa£
 = (
dúe˘_îa£
 *Ë
	`mÆloc
((direct_erase));

4457 
	`Æloc_as£π
(
√w_dúe˘_îa£
, "new_direct_erase");

4458 
	`mem£t
(
√w_dúe˘_îa£
, 0, (
dúe˘_îa£
));

4460 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
;

4461 i‡(
dúe˘_îa£_node
 =
NULL
) {

4462 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
 = 
√w_dúe˘_îa£
;

4464 
√w_dúe˘_îa£
->
√xt_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
;

4465 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
 = 
√w_dúe˘_îa£
;

4469 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
œ°_wrôe_∑ge
 >

4471 
	`¥ötf
("error!ÅheÜast writeÖageÜargerÅhan 64!!\n");

4475  
ssd
;

4476 
	}
}

4483 
ssd_öfo
 *
	$compuã_£rve_time
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
,

4484 
sub_ªque°
 **
subs
, 
subs_cou¡
, 
comm™d
) {

4485 
i
 = 0;

4486 
max_subs_num
 = 0;

4487 
sub_ªque°
 *
sub
 = 
NULL
, *
p
 = NULL;

4488 
sub_ªque°
 *
œ°_sub
 = 
NULL
;

4489 
max_subs_num
 = 
ssd
->
∑ømëî
->
dõ_chù
 * ssd->∑ømëî->
∂™e_dõ
;

4491 i‡((
comm™d
 =
INTERLEAVE_TWO_PLANE
Ë|| (comm™d =
COPY_BACK
)) {

4492 
i
 = 0; i < 
max_subs_num
; i++) {

4493 i‡(
subs
[
i
] !
NULL
) {

4494 
œ°_sub
 = 
subs
[
i
];

4495 
subs
[
i
]->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4496 
subs
[
i
]->
cuºít_time
 = 
ssd
->current_time;

4497 
subs
[
i
]->
√xt_°©e
 = 
SR_COMPLETE
;

4498 
subs
[
i
]->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4499 (
subs
[
i
]->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

4500 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4501 
subs
[
i
]->
com∂ëe_time
 = subs[i]->
√xt_°©e_¥edi˘_time
;

4503 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
subs
[
i
]);

4506 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4507 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4508 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4509 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
œ°_sub
->
com∂ëe_time
;

4511 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4512 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4513 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4514 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4515 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4516 } i‡(
comm™d
 =
TWO_PLANE
) {

4517 
i
 = 0; i < 
max_subs_num
; i++) {

4518 i‡(
subs
[
i
] !
NULL
) {

4520 
subs
[
i
]->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4521 i‡(
œ°_sub
 =
NULL
) {

4522 
subs
[
i
]->
cuºít_time
 = 
ssd
->current_time;

4524 
subs
[
i
]->
cuºít_time
 = 
œ°_sub
->
com∂ëe_time
 + 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tDBSY
;

4527 
subs
[
i
]->
√xt_°©e
 = 
SR_COMPLETE
;

4528 
subs
[
i
]->
√xt_°©e_¥edi˘_time
 =

4529 
subs
[
i
]->
cuºít_time
 + 7 * 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4530 (
subs
[
i
]->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
Ë* ssd->∑ømëî->
time_ch¨a˘îi°ics
.
tWC
;

4531 
subs
[
i
]->
com∂ëe_time
 = subs[i]->
√xt_°©e_¥edi˘_time
;

4532 
œ°_sub
 = 
subs
[
i
];

4534 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
subs
[
i
]);

4537 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4538 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4539 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4540 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
œ°_sub
->
com∂ëe_time
;

4542 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4543 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4544 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4545 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4546 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4547 } i‡(
comm™d
 =
INTERLEAVE
) {

4548 
i
 = 0; i < 
max_subs_num
; i++) {

4549 i‡(
subs
[
i
] !
NULL
) {

4551 
subs
[
i
]->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4552 i‡(
œ°_sub
 =
NULL
) {

4553 
subs
[
i
]->
cuºít_time
 = 
ssd
->current_time;

4555 
subs
[
i
]->
cuºít_time
 = 
œ°_sub
->
com∂ëe_time
;

4557 
subs
[
i
]->
√xt_°©e
 = 
SR_COMPLETE
;

4558 
subs
[
i
]->
√xt_°©e_¥edi˘_time
 =

4559 
subs
[
i
]->
cuºít_time
 + 7 * 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4560 (
subs
[
i
]->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
Ë* ssd->∑ømëî->
time_ch¨a˘îi°ics
.
tWC
;

4561 
subs
[
i
]->
com∂ëe_time
 = subs[i]->
√xt_°©e_¥edi˘_time
;

4562 
œ°_sub
 = 
subs
[
i
];

4564 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
subs
[
i
]);

4567 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4568 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4569 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4570 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
œ°_sub
->
com∂ëe_time
;

4572 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4573 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4574 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4575 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4576 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4577 } i‡(
comm™d
 =
NORMAL
) {

4578 
subs
[0]->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4579 
subs
[0]->
cuºít_time
 = 
ssd
->current_time;

4580 
subs
[0]->
√xt_°©e
 = 
SR_COMPLETE
;

4581 
subs
[0]->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4582 (
subs
[0]->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

4583 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4584 
subs
[0]->
com∂ëe_time
 = subs[0]->
√xt_°©e_¥edi˘_time
;

4586 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
subs
[0]);

4588 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4589 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4590 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4591 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
subs
[0]->
com∂ëe_time
;

4593 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4594 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4595 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4596 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4597 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4599  
NULL
;

4602  
ssd
;

4604 
	}
}

4610 
ssd_öfo
 *
	$dñëe_‰om_ch™√l
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_ªq
) {

4611 
sub_ªque°
 *
sub
, *
p
;

4617 i‡((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =0Ë&& (ssd->∑ømëî->
dy«mic_Æloˇti⁄
 == 0)) {

4618 
sub
 = 
ssd
->
subs_w_hód
;

4620 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

4622 
p
 = 
sub
;

4624 
sub
 !
NULL
) {

4625 i‡(
sub
 =
sub_ªq
) {

4626 i‡((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =0Ë&& (ssd->∑ømëî->
dy«mic_Æloˇti⁄
 == 0)) {

4627 i‡(
ssd
->
∑ømëî
->
ad_¥i‹ôy2
 == 0) {

4628 
ssd
->
ªÆ_time_subªq
--;

4631 i‡(
sub
 ==

4632 
ssd
->
subs_w_hód
)

4634 i‡(
ssd
->
subs_w_hód
 !ssd->
subs_w_èû
) {

4635 
ssd
->
subs_w_hód
 = 
sub
->
√xt_node
;

4636 
sub
 = 
ssd
->
subs_w_hód
;

4639 
ssd
->
subs_w_hód
 = 
NULL
;

4640 
ssd
->
subs_w_èû
 = 
NULL
;

4641 
p
 = 
NULL
;

4646 i‡(
sub
->
√xt_node
 !
NULL
) {

4647 
p
->
√xt_node
 = 
sub
->next_node;

4648 
sub
 = 
p
->
√xt_node
;

4651 
ssd
->
subs_w_èû
 = 
p
;

4652 
ssd
->
subs_w_èû
->
√xt_node
 = 
NULL
;

4658 i‡(
sub
 =
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
)

4660 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 !ssd->ch™√l_hód[ch™√l].
subs_w_èû
) {

4661 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 = 
sub
->
√xt_node
;

4662 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
;

4665 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 = 
NULL
;

4666 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
 = 
NULL
;

4667 
p
 = 
NULL
;

4672 i‡(
sub
->
√xt_node
 !
NULL
) {

4673 
p
->
√xt_node
 = 
sub
->next_node;

4674 
sub
 = 
p
->
√xt_node
;

4677 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
 = 
p
;

4678 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_èû
->
√xt_node
 = 
NULL
;

4684 
p
 = 
sub
;

4685 
sub
 = sub->
√xt_node
;

4688  
ssd
;

4689 
	}
}

4692 
ssd_öfo
 *

4693 
	$un_gªed_öãæóve_c›yback
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
,

4694 
sub_ªque°
 *
sub1
, sub_ªque° *
sub2
) {

4695 
ﬁd_µn1
, 
µn1
, 
ﬁd_µn2
, 
µn2
, 
gªed_Êag
 = 0;

4697 
ﬁd_µn1
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub1
->
Õn
].
≤
;

4698 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub1
->
loˇti⁄
->
∂™e
,

4699 
sub1
);

4700 
µn1
 = 
sub1
->
µn
;

4702 
ﬁd_µn2
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub2
->
Õn
].
≤
;

4703 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub2
->
loˇti⁄
->
∂™e
,

4704 
sub2
);

4705 
µn2
 = 
sub2
->
µn
;

4707 i‡((
ﬁd_µn1
 % 2 =
µn1
 % 2Ë&& (
ﬁd_µn2
 % 2 =
µn2
 % 2)) {

4708 
ssd
->
c›y_back_cou¡
++;

4709 
ssd
->
c›y_back_cou¡
++;

4711 
sub1
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4712 
sub1
->
cuºít_time
 = 
ssd
->current_time;

4713 
sub1
->
√xt_°©e
 = 
SR_COMPLETE
;

4714 
sub1
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4715 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

4716 (
sub1
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

4717 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4718 
sub1
->
com∂ëe_time
 = sub1->
√xt_°©e_¥edi˘_time
;

4720 
sub2
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4721 
sub2
->
cuºít_time
 = 
sub1
->
com∂ëe_time
;

4722 
sub2
->
√xt_°©e
 = 
SR_COMPLETE
;

4723 
sub2
->
√xt_°©e_¥edi˘_time
 = sub2->
cuºít_time
 + 14 * 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4724 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

4725 (
sub2
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

4726 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4727 
sub2
->
com∂ëe_time
 = sub2->
√xt_°©e_¥edi˘_time
;

4729 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4730 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4731 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4732 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub2
->
com∂ëe_time
;

4734 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4735 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4736 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4737 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4738 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4740 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
sub1
);

4741 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
sub2
);

4743 i‡((
ﬁd_µn1
 % 2 =
µn1
 % 2Ë&& (
ﬁd_µn2
 % 2 !
µn2
 % 2)) {

4744 
ssd
->
öãæóve_cou¡
--;

4745 
ssd
->
c›y_back_cou¡
++;

4747 
sub1
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4748 
sub1
->
cuºít_time
 = 
ssd
->current_time;

4749 
sub1
->
√xt_°©e
 = 
SR_COMPLETE
;

4750 
sub1
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4751 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

4752 (
sub1
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

4753 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4754 
sub1
->
com∂ëe_time
 = sub1->
√xt_°©e_¥edi˘_time
;

4756 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4757 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4758 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4759 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub1
->
com∂ëe_time
;

4761 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4762 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4763 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4764 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4765 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4767 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
sub1
);

4769 i‡((
ﬁd_µn1
 % 2 !
µn1
 % 2Ë&& (
ﬁd_µn2
 % 2 =
µn2
 % 2)) {

4770 
ssd
->
öãæóve_cou¡
--;

4771 
ssd
->
c›y_back_cou¡
++;

4773 
sub2
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4774 
sub2
->
cuºít_time
 = 
ssd
->current_time;

4775 
sub2
->
√xt_°©e
 = 
SR_COMPLETE
;

4776 
sub2
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4777 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

4778 (
sub2
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

4779 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4780 
sub2
->
com∂ëe_time
 = sub2->
√xt_°©e_¥edi˘_time
;

4782 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4783 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4784 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4785 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub2
->
com∂ëe_time
;

4787 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4788 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4789 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4790 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4791 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4793 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
sub2
);

4796 
ssd
->
öãæóve_cou¡
--;

4798 
sub1
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4799 
sub1
->
cuºít_time
 = 
ssd
->current_time;

4800 
sub1
->
√xt_°©e
 = 
SR_COMPLETE
;

4801 
sub1
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4802 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

4803 2 * (
ssd
->
∑ømëî
->
sub∑ge_∑ge
 * ssd->∑ømëî->
sub∑ge_ˇ∑côy
) *

4804 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4805 
sub1
->
com∂ëe_time
 = sub1->
√xt_°©e_¥edi˘_time
;

4807 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4808 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4809 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4810 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub1
->
com∂ëe_time
;

4812 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4813 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4814 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4815 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4816 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4818 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
sub1
);

4821  
ssd
;

4822 
	}
}

4825 
ssd_öfo
 *
	$un_gªed_c›yback
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
,

4826 
sub_ªque°
 *
sub1
) {

4827 
ﬁd_µn
, 
µn
;

4829 
ﬁd_µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub1
->
Õn
].
≤
;

4830 
	`gë_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 0,

4831 
sub1
);

4832 
µn
 = 
sub1
->ppn;

4834 i‡(
ﬁd_µn
 % 2 =
µn
 % 2) {

4835 
ssd
->
c›y_back_cou¡
++;

4836 
sub1
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4837 
sub1
->
cuºít_time
 = 
ssd
->current_time;

4838 
sub1
->
√xt_°©e
 = 
SR_COMPLETE
;

4839 
sub1
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4840 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

4841 (
sub1
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

4842 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4843 
sub1
->
com∂ëe_time
 = sub1->
√xt_°©e_¥edi˘_time
;

4845 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4846 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4847 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4848 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub1
->
com∂ëe_time
;

4850 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4851 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4852 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4853 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4854 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4857 
sub1
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

4858 
sub1
->
cuºít_time
 = 
ssd
->current_time;

4859 
sub1
->
√xt_°©e
 = 
SR_COMPLETE
;

4860 
sub1
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

4861 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

4862 2 * (
ssd
->
∑ømëî
->
sub∑ge_∑ge
 * ssd->∑ømëî->
sub∑ge_ˇ∑côy
) *

4863 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

4864 
sub1
->
com∂ëe_time
 = sub1->
√xt_°©e_¥edi˘_time
;

4866 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

4867 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

4868 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

4869 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub1
->
com∂ëe_time
;

4871 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

4872 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

4873 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

4874 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

4875 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

4878 
	`dñëe_‰om_ch™√l
(
ssd
, 
ch™√l
, 
sub1
);

4880  
ssd
;

4881 
	}
}

4888 
sub_ªque°
 *

4889 
	$föd_öãæóve_tw›œ√_∑ge
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
⁄e_∑ge
, 
comm™d
) {

4890 
sub_ªque°
 *
two_∑ge
;

4892 i‡(
⁄e_∑ge
->
cuºít_°©e
 !
SR_WAIT
) {

4893  
NULL
;

4895 i‡(((
ssd
->
ch™√l_hód
[
⁄e_∑ge
->
loˇti⁄
->
ch™√l
].
chù_hód
[⁄e_∑ge->loˇti⁄->
chù
].
cuºít_°©e
 ==

4896 
CHIP_IDLE
) ||

4897 ((
ssd
->
ch™√l_hód
[
⁄e_∑ge
->
loˇti⁄
->
ch™√l
].
chù_hód
[⁄e_∑ge->loˇti⁄->
chù
].
√xt_°©e
 ==

4898 
CHIP_IDLE
) &&

4899 (
ssd
->
ch™√l_hód
[
⁄e_∑ge
->
loˇti⁄
->
ch™√l
].
chù_hód
[⁄e_∑ge->loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 <=

4900 
ssd
->
cuºít_time
)))) {

4901 
two_∑ge
 = 
⁄e_∑ge
->
√xt_node
;

4902 i‡(
comm™d
 =
TWO_PLANE
) {

4903 
two_∑ge
 !
NULL
) {

4904 i‡(
two_∑ge
->
cuºít_°©e
 !
SR_WAIT
) {

4905 
two_∑ge
 =Åwo_∑ge->
√xt_node
;

4906 } i‡((
⁄e_∑ge
->
loˇti⁄
->
chù
 =
two_∑ge
->location->chip) &&

4907 (
⁄e_∑ge
->
loˇti⁄
->
dõ
 =
two_∑ge
->location->die) &&

4908 (
⁄e_∑ge
->
loˇti⁄
->
block
 =
two_∑ge
->location->block) &&

4909 (
⁄e_∑ge
->
loˇti⁄
->
∑ge
 =
two_∑ge
->location->page)) {

4910 i‡(
⁄e_∑ge
->
loˇti⁄
->
∂™e
 !
two_∑ge
->location->plane) {

4911  
two_∑ge
;

4913 
two_∑ge
 =Åwo_∑ge->
√xt_node
;

4916 
two_∑ge
 =Åwo_∑ge->
√xt_node
;

4919 i‡(
two_∑ge
 ==

4920 
NULL
)

4922  
NULL
;

4925 i‡(
comm™d
 =
INTERLEAVE
) {

4926 
two_∑ge
 !
NULL
) {

4927 i‡(
two_∑ge
->
cuºít_°©e
 !
SR_WAIT
) {

4928 
two_∑ge
 =Åwo_∑ge->
√xt_node
;

4929 } i‡((
⁄e_∑ge
->
loˇti⁄
->
chù
 =
two_∑ge
->location->chip) &&

4930 (
⁄e_∑ge
->
loˇti⁄
->
dõ
 !
two_∑ge
->location->die)) {

4931  
two_∑ge
;

4933 
two_∑ge
 =Åwo_∑ge->
√xt_node
;

4936 i‡(
two_∑ge
 ==

4937 
NULL
)

4939  
NULL
;

4945  
NULL
;

4947 
	}
}

4954 
	$föd_öãæóve_tw›œ√_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_ªque°_⁄e
,

4955 
sub_ªque°
 *
sub_ªque°_two
, 
comm™d
) {

4956 
sub_ªque°_⁄e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
;

4957 
sub_ªque°_⁄e
 !
NULL
) {

4958 
sub_ªque°_two
 = 
	`föd_öãæóve_tw›œ√_∑ge
(
ssd
, 
sub_ªque°_⁄e
,

4959 
comm™d
);

4960 i‡(
sub_ªque°_two
 =
NULL
) {

4961 
sub_ªque°_⁄e
 = sub_ªque°_⁄e->
√xt_node
;

4962 } i‡(
sub_ªque°_two
 !=

4963 
NULL
)

4969 i‡(
sub_ªque°_two
 !
NULL
) {

4970 i‡(
ssd
->
ªque°_queue
 !=

4971 
ssd
->
ªque°_èû
) {

4972 i‡((
ssd
->
ªque°_queue
->
l¢
 - ssd->
∑ømëî
->
sub∑ge_∑ge
) <

4973 (
sub_ªque°_⁄e
->
Õn
 * 
ssd
->
∑ømëî
->
sub∑ge_∑ge
)) {

4974 i‡((
ssd
->
ªque°_queue
->
l¢
 + ssd->ªque°_queue->
size
 + ssd->
∑ømëî
->
sub∑ge_∑ge
) >

4975 (
sub_ªque°_⁄e
->
Õn
 * 
ssd
->
∑ømëî
->
sub∑ge_∑ge
)) {

4977 
sub_ªque°_two
 = 
NULL
;

4980 
sub_ªque°_two
 = 
NULL
;

4985 i‡(
sub_ªque°_two
 !
NULL
) {

4986  
SUCCESS
;

4988  
FAILURE
;

4991 
	}
}

4998 
Sètus
 
	$go_⁄e_°ï
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub1
, sub_ªque° *
sub2
, 
aim_°©e
,

4999 
comm™d
) {

5000 
i
 = 0, 
j
 = 0, 
k
 = 0, 
m
 = 0;

5001 
time
 = 0;

5002 
sub_ªque°
 *
sub
 = 
NULL
;

5003 
sub_ªque°
 *
sub_tw›œ√_⁄e
 = 
NULL
, *
sub_tw›œ√_two
 = NULL;

5004 
sub_ªque°
 *
sub_öãæóve_⁄e
 = 
NULL
, *
sub_öãæóve_two
 = NULL;

5005 
loˇl
 *
loˇti⁄
 = 
NULL
;

5006 i‡(
sub1
 =
NULL
) {

5007  
ERROR
;

5009 #ifde‡
DEBUG


5010 
	`¥ötf
("íã∏thêgo_⁄e_°ï fun˘i⁄,subáddªs†poöài†%Œd,sub ch™√»%d, sub chù %d, sub dõ %d, subÖœ√ %d, sub block %d, subÖagê%d, sub sub-∑gê%d,áim_°©êi†%d, comm™d i†%d\n",
sub1
, sub1->
loˇti⁄
->
ch™√l
,sub1->loˇti⁄->
chù
,sub1->loˇti⁄->
dõ
,sub1->loˇti⁄->
∂™e
,sub1->loˇti⁄->
block
,sub1->loˇti⁄->
∑ge
,sub1->loˇti⁄->
sub_∑ge
, 
aim_°©e
, 
comm™d
);

5017 i‡(
comm™d
 =
NORMAL
) {

5018 #ifde‡
DEBUG


5019 
	`¥ötf
("enterÇormal command\n");

5022 
sub
 = 
sub1
;

5023 
loˇti⁄
 = 
sub1
->location;

5024 
aim_°©e
) {

5025 
SR_R_READ
: {

5031 #ifde‡
DEBUG


5032 
	`¥ötf
("íã∏n‹mÆ comm™d'†SR_R_REAS,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5035 
sub
->
cuºít_time
 = 
ssd
->current_time;

5036 
sub
->
cuºít_°©e
 = 
SR_R_READ
;

5037 
sub
->
√xt_°©e
 = 
SR_R_DATA_TRANSFER
;

5038 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
;

5040 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_READ_BUSY
;

5041 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5042 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_DATA_TRANSFER
;

5043 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 =

5044 
ssd
->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
;

5046 #ifde‡
DEBUGSUSPEND


5047 
	`¥ötf
("SR_R_READ: sub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d, sub->cuºít_timê%Œd, sub->√xt_timê%Œd, ssd->cuºít_timê%Œd, ssd->cuºít_°©ê%d, ssd->√xt_°©ê%d ,chù %dÇext_¥edi˘_timê%Œd\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
, sub->
cuºít_time
, sub->
√xt_°©e_¥edi˘_time
, 
ssd
->cuºít_time,sub->
cuºít_°©e
, sub->
√xt_°©e
,Üoˇti⁄->chù, ssd->
ch™√l_hód
[loˇti⁄->ch™√l].
chù_hód
[location->chip].next_state_predict_time );

5053 
SR_R_C_A_TRANSFER
: {

5060 
sub
->
cuºít_time
 = 
ssd
->current_time;

5061 
sub
->
cuºít_°©e
 = 
SR_R_C_A_TRANSFER
;

5062 
sub
->
√xt_°©e
 = 
SR_R_READ
;

5063 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5064 
sub
->
begö_time
 = 
ssd
->
cuºít_time
;

5066 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
add_ªg_µn
 = 
sub
->
µn
;

5067 
ssd
->
ªad_cou¡
++;

5069 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_C_A_TRANSFER
;

5070 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5071 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5072 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 =

5073 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5075 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_C_A_TRANSFER
;

5076 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5077 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_READ_BUSY
;

5078 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 =

5079 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5081 #ifde‡
DEBUGSUSPEND


5082 
	`¥ötf
("SR_R_C_A_TRANSFER: sub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d, sub->cuºít_timê%Œd, sub->√xt_timê%Œd, ssd->cuºít_timê%Œd, ssd->cuºít_°©ê%d, ssd->√xt_°©ê%d, chù %dÇext_¥edi˘_timê%Œd \n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
, sub->
cuºít_time
, sub->
√xt_°©e_¥edi˘_time
, 
ssd
->cuºít_time,sub->
cuºít_°©e
, sub->
√xt_°©e
,loˇti⁄->chù, ssd->
ch™√l_hód
[loˇti⁄->ch™√l].
chù_hód
[location->chip].next_state_predict_time );

5089 
SR_R_DATA_TRANSFER
: {

5097 
sub
->
cuºít_time
 = 
ssd
->current_time;

5098 
sub
->
cuºít_°©e
 = 
SR_R_DATA_TRANSFER
;

5099 
sub
->
√xt_°©e
 = 
SR_COMPLETE
;

5100 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + (sub->
size
 * ssd->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5101 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
;

5102 
sub
->
com∂ëe_time
 = sub->
√xt_°©e_¥edi˘_time
;

5104 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_DATA_TRANSFER
;

5105 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5106 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5107 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub
->next_state_predict_time;

5109 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_DATA_TRANSFER
;

5110 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5111 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

5112 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = 
sub
->next_state_predict_time;

5114 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
add_ªg_µn
 = -1;

5116 #ifde‡
DEBUGSUSPEND


5117 
	`¥ötf
("SR_R_DATA_TRANSFER: sub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d, sub->cuºít_timê%Œd, sub->√xt_timê%Œd, ssd->cuºít_timê%Œd, ssd->cuºít_°©ê%d, ssd->√xt_°©ê%d, chù %dÇext_¥edi˘_timê%Œd ,\n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
, sub->
cuºít_time
, sub->
√xt_°©e_¥edi˘_time
, 
ssd
->cuºít_time, sub->
cuºít_°©e
, sub->
√xt_°©e
,loˇti⁄->chù, ssd->
ch™√l_hód
[loˇti⁄->ch™√l].
chù_hód
[location->chip].next_state_predict_time );

5124 
SR_W_TRANSFER
: {

5132 #ifde‡
DEBUG


5133 
	`¥ötf
("íã∏n‹mÆ comm™d'†SR_W_TRANSFERS,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5136 
sub
->
cuºít_time
 = 
ssd
->current_time;

5137 
sub
->
cuºít_°©e
 = 
SR_W_TRANSFER
;

5138 
sub
->
√xt_°©e
 = 
SR_COMPLETE
;

5139 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

5140 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5141 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5142 
sub
->
com∂ëe_time
 = sub->
√xt_°©e_¥edi˘_time
 + 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

5143 
time
 = 
sub
->
com∂ëe_time
;

5145 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

5146 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5147 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5148 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
time
;

5150 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

5151 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5152 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

5153 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 =

5154 
time
 + 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

5159 
SR_W_C_A_DATA_TRANSFER
: {

5165 #ifde‡
DEBUG


5166 
	`¥ötf
("íã∏n‹mÆ comm™d'†SR_W_C_A_DATA_TRANSFER,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5170 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 !=

5173 i‡((
sub
->
°©e
 & 
ssd
->
døm
->
m≠
->
m≠_íåy
[sub->
Õn
].state) ==

5174 
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
)

5176 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

5177 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5178 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5180 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

5181 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

5182 (
	`size
((
ssd
->
døm
->
m≠
->
m≠_íåy
[
sub
->
Õn
].
°©e
 ^ sub->state))) *

5183 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
 +

5184 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5185 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5186 
ssd
->
ªad_cou¡
++;

5187 
ssd
->
upd©e_ªad_cou¡
++;

5190 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

5191 (
sub
->
size
 * 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5192 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5203 
sub
->
cuºít_time
 = 
ssd
->current_time;

5204 
sub
->
cuºít_°©e
 = 
SR_W_C_A_DATA_TRANSFER
;

5205 
sub
->
√xt_°©e
 = 
SR_W_DATA_TRANSFER
;

5212 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

5213 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5214 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5215 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub
->next_state_predict_time;

5217 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_WRITE_DATA_CMD_BUSY
;

5218 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5219 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_WRITE_BUSY
;

5220 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = 
sub
->next_state_predict_time;

5226 #ifde‡
DEBUGSUSPEND


5227 
	`¥ötf
("SR_W_C_A_DATA_TRANSFER: sub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d, sub->cuºít_timê%Œd, sub->√xt_timê%Œd, ssd->cuºít_timê%Œd, ssd->cuºít_°©ê%d, ssd->√xt_°©ê%d, chù %dÇext_¥edi˘_timê%Œd \n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
, sub->
cuºít_time
, sub->
√xt_°©e_¥edi˘_time
, 
ssd
->cuºít_time, sub->
cuºít_°©e
, sub->
√xt_°©e
,loˇti⁄->chù, ssd->
ch™√l_hód
[loˇti⁄->ch™√l].
chù_hód
[location->chip].next_state_predict_time );

5233 
SR_W_DATA_TRANSFER_ONE_PROG_OF_ITERATIONS
: {

5239 #ifde‡
DEBUG


5240 
	`¥ötf
("íã∏n‹mÆ comm™d'†SR_W_DATA_TRANSFER_ONE_PROG_OF_ITERATIONS,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5244 
sub
->
cuºít_time
 = 
ssd
->current_time;

5245 
sub
->
cuºít_°©e
 = 
SR_W_DATA_TRANSFER
;

5246 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG_w_¥ogam
;

5248 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

5249 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5250 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = 
sub
->next_state_predict_time;

5251 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_WRITE_BUSY
;

5252 
sub
->
√xt_°©e
 = 
SR_W_DATA_TRANSFER
;

5255 #ifde‡
DEBUGSUSPEND


5256 
	`¥ötf
("SR_W_DATA_TRANSFER_ONE_PROG_OF_ITERATIONS: sub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d, sub->cuºít_timê%Œd, sub->√xt_timê%Œd, ssd->cuºít_timê%Œd, ssd->cuºít_°©ê%d, ssd->√xt_°©ê%d, chù %dÇext_¥edi˘_timê%Œd \n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
, sub->
cuºít_time
, sub->
√xt_°©e_¥edi˘_time
, 
ssd
->cuºít_time, sub->
cuºít_°©e
, sub->
√xt_°©e
,loˇti⁄->chù, ssd->
ch™√l_hód
[loˇti⁄->ch™√l].
chù_hód
[location->chip].next_state_predict_time );

5263 
SR_W_DATA_TRANSFER_ONE_VERIFY_OF_ITERATIONS
: {

5269 #ifde‡
DEBUG


5270 
	`¥ötf
("íã∏n‹mÆ comm™d'†SR_W_DATA_TRANSFER_ONE_VERIFY_OF_ITERATIONS,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5274 
sub
->
cuºít_time
 = 
ssd
->current_time;

5275 
sub
->
cuºít_°©e
 = 
SR_W_DATA_TRANSFER
;

5276 
sub
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG_w_vîify
;

5278 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_WRITE_BUSY
;

5279 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5280 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = 
sub
->next_state_predict_time;

5281 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_WRITE_BUSY
;

5282 
sub
->
√xt_°©e
 = 
SR_W_DATA_TRANSFER
;

5285 #ifde‡
DEBUGSUSPEND


5286 
	`¥ötf
("SR_W_DATA_TRANSFER_ONE_VERIFY_OF_ITERATIONS: sub inf‹m©i⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d,Ö≤ %d, sub->cuºít_timê%Œd, sub->√xt_timê%Œd, ssd->cuºít_timê%Œd, ssd->cuºít_°©ê%d, ssd->√xt_°©ê%d, chù %dÇext_¥edi˘_timê%Œd \n",
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
∂™e
, sub->
µn
, sub->
cuºít_time
, sub->
√xt_°©e_¥edi˘_time
, 
ssd
->cuºít_time, sub->
cuºít_°©e
, sub->
√xt_°©e
,loˇti⁄->chù, ssd->
ch™√l_hód
[loˇti⁄->ch™√l].
chù_hód
[location->chip].next_state_predict_time );

5295  
ERROR
;

5299 i‡(
comm™d
 =
TWO_PLANE
) {

5300 #ifde‡
DEBUG


5301 
	`¥ötf
("enter TWO_PLANE\n");

5309 i‡((
sub1
 =
NULL
Ë|| (
sub2
 == NULL)) {

5310  
ERROR
;

5312 
sub_tw›œ√_⁄e
 = 
sub1
;

5313 
sub_tw›œ√_two
 = 
sub2
;

5314 
loˇti⁄
 = 
sub1
->location;

5316 
aim_°©e
) {

5317 
SR_R_C_A_TRANSFER
: {

5318 #ifde‡
DEBUG


5319 
	`¥ötf
("íã∏TWO_PLANE,ö SRC_R_C_A_TRANSFER,ssdd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5322 
sub_tw›œ√_⁄e
->
cuºít_time
 = 
ssd
->current_time;

5323 
sub_tw›œ√_⁄e
->
cuºít_°©e
 = 
SR_R_C_A_TRANSFER
;

5324 
sub_tw›œ√_⁄e
->
√xt_°©e
 = 
SR_R_READ
;

5325 
sub_tw›œ√_⁄e
->
√xt_°©e_¥edi˘_time
 =

5326 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5327 
sub_tw›œ√_⁄e
->
begö_time
 = 
ssd
->
cuºít_time
;

5329 
ssd
->
ch™√l_hód
[
sub_tw›œ√_⁄e
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub_tw›œ√_⁄e->loˇti⁄->
chù
].
dõ_hód
[sub_tw›œ√_⁄e->loˇti⁄->
dõ
].
∂™e_hód
[sub_tw›œ√_⁄e->loˇti⁄->
∂™e
].
add_ªg_µn
 = sub_tw›œ√_⁄e->
µn
;

5330 
ssd
->
ªad_cou¡
++;

5332 
sub_tw›œ√_two
->
cuºít_time
 = 
ssd
->current_time;

5333 
sub_tw›œ√_two
->
cuºít_°©e
 = 
SR_R_C_A_TRANSFER
;

5334 
sub_tw›œ√_two
->
√xt_°©e
 = 
SR_R_READ
;

5335 
sub_tw›œ√_two
->
√xt_°©e_¥edi˘_time
 = 
sub_tw›œ√_⁄e
->next_state_predict_time;

5336 
sub_tw›œ√_two
->
begö_time
 = 
ssd
->
cuºít_time
;

5338 
ssd
->
ch™√l_hód
[
sub_tw›œ√_two
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub_tw›œ√_two->loˇti⁄->
chù
].
dõ_hód
[sub_tw›œ√_two->loˇti⁄->
dõ
].
∂™e_hód
[sub_tw›œ√_two->loˇti⁄->
∂™e
].
add_ªg_µn
 = sub_tw›œ√_two->
µn
;

5339 
ssd
->
ªad_cou¡
++;

5340 
ssd
->
m_∂™e_ªad_cou¡
++;

5342 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_C_A_TRANSFER
;

5343 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5344 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5345 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 =

5346 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5348 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_C_A_TRANSFER
;

5349 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5350 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_READ_BUSY
;

5351 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 =

5352 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5357 
SR_R_DATA_TRANSFER
: {

5358 #ifde‡
DEBUG


5359 
	`¥ötf
("íã∏TWO_PLANE,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5362 
sub_tw›œ√_⁄e
->
cuºít_time
 = 
ssd
->current_time;

5363 
sub_tw›œ√_⁄e
->
cuºít_°©e
 = 
SR_R_DATA_TRANSFER
;

5364 
sub_tw›œ√_⁄e
->
√xt_°©e
 = 
SR_COMPLETE
;

5365 
sub_tw›œ√_⁄e
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + (sub_tw›œ√_⁄e->
size
 *

5366 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5367 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
;

5368 
sub_tw›œ√_⁄e
->
com∂ëe_time
 = sub_tw›œ√_⁄e->
√xt_°©e_¥edi˘_time
;

5370 
sub_tw›œ√_two
->
cuºít_time
 = 
sub_tw›œ√_⁄e
->
√xt_°©e_¥edi˘_time
;

5371 
sub_tw›œ√_two
->
cuºít_°©e
 = 
SR_R_DATA_TRANSFER
;

5372 
sub_tw›œ√_two
->
√xt_°©e
 = 
SR_COMPLETE
;

5373 
sub_tw›œ√_two
->
√xt_°©e_¥edi˘_time
 = sub_tw›œ√_two->
cuºít_time
 + (sub_tw›œ√_two->
size
 *

5374 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5375 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
;

5376 
sub_tw›œ√_two
->
com∂ëe_time
 = sub_tw›œ√_two->
√xt_°©e_¥edi˘_time
;

5378 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_DATA_TRANSFER
;

5379 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5380 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5381 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub_tw›œ√_⁄e
->next_state_predict_time;

5383 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_DATA_TRANSFER
;

5384 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5385 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

5386 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = 
sub_tw›œ√_⁄e
->next_state_predict_time;

5388 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
add_ªg_µn
 = -1;

5393  
ERROR
;

5396 i‡(
comm™d
 =
INTERLEAVE
) {

5397 #ifde‡
DEBUG


5398 
	`¥ötf
("enter INTERLEAVE\n");

5401 i‡((
sub1
 =
NULL
Ë|| (
sub2
 == NULL)) {

5402  
ERROR
;

5404 
sub_öãæóve_⁄e
 = 
sub1
;

5405 
sub_öãæóve_two
 = 
sub2
;

5406 
loˇti⁄
 = 
sub1
->location;

5408 
aim_°©e
) {

5409 
SR_R_C_A_TRANSFER
: {

5410 #ifde‡
DEBUG


5411 
	`¥ötf
("íã∏INTERLEAVE,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5414 
sub_öãæóve_⁄e
->
cuºít_time
 = 
ssd
->current_time;

5415 
sub_öãæóve_⁄e
->
cuºít_°©e
 = 
SR_R_C_A_TRANSFER
;

5416 
sub_öãæóve_⁄e
->
√xt_°©e
 = 
SR_R_READ
;

5417 
sub_öãæóve_⁄e
->
√xt_°©e_¥edi˘_time
 =

5418 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5419 
sub_öãæóve_⁄e
->
begö_time
 = 
ssd
->
cuºít_time
;

5421 
ssd
->
ch™√l_hód
[
sub_öãæóve_⁄e
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub_öãæóve_⁄e->loˇti⁄->
chù
].
dõ_hód
[sub_öãæóve_⁄e->loˇti⁄->
dõ
].
∂™e_hód
[sub_öãæóve_⁄e->loˇti⁄->
∂™e
].
add_ªg_µn
 = sub_öãæóve_⁄e->
µn
;

5422 
ssd
->
ªad_cou¡
++;

5424 
sub_öãæóve_two
->
cuºít_time
 = 
ssd
->current_time;

5425 
sub_öãæóve_two
->
cuºít_°©e
 = 
SR_R_C_A_TRANSFER
;

5426 
sub_öãæóve_two
->
√xt_°©e
 = 
SR_R_READ
;

5427 
sub_öãæóve_two
->
√xt_°©e_¥edi˘_time
 = 
sub_öãæóve_⁄e
->next_state_predict_time;

5428 
sub_öãæóve_two
->
begö_time
 = 
ssd
->
cuºít_time
;

5430 
ssd
->
ch™√l_hód
[
sub_öãæóve_two
->
loˇti⁄
->
ch™√l
].
chù_hód
[sub_öãæóve_two->loˇti⁄->
chù
].
dõ_hód
[sub_öãæóve_two->loˇti⁄->
dõ
].
∂™e_hód
[sub_öãæóve_two->loˇti⁄->
∂™e
].
add_ªg_µn
 = sub_öãæóve_two->
µn
;

5431 
ssd
->
ªad_cou¡
++;

5432 
ssd
->
öãæóve_ªad_cou¡
++;

5434 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_C_A_TRANSFER
;

5435 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5436 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5437 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 =

5438 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5440 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_C_A_TRANSFER
;

5441 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5442 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_READ_BUSY
;

5443 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 =

5444 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

5449 
SR_R_DATA_TRANSFER
: {

5450 #ifde‡
DEBUG


5451 
	`¥ötf
("SR_R_DATA_TRANSFER TWO_PLANE,™d ssd->cuºít_timêi†%Œu \n",
ssd
->
cuºít_time
);

5454 
sub_öãæóve_⁄e
->
cuºít_time
 = 
ssd
->current_time;

5455 
sub_öãæóve_⁄e
->
cuºít_°©e
 = 
SR_R_DATA_TRANSFER
;

5456 
sub_öãæóve_⁄e
->
√xt_°©e
 = 
SR_COMPLETE
;

5457 
sub_öãæóve_⁄e
->
√xt_°©e_¥edi˘_time
 = 
ssd
->
cuºít_time
 + (sub_öãæóve_⁄e->
size
 *

5458 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5459 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
;

5460 
sub_öãæóve_⁄e
->
com∂ëe_time
 = sub_öãæóve_⁄e->
√xt_°©e_¥edi˘_time
;

5462 
sub_öãæóve_two
->
cuºít_time
 = 
sub_öãæóve_⁄e
->
√xt_°©e_¥edi˘_time
;

5463 
sub_öãæóve_two
->
cuºít_°©e
 = 
SR_R_DATA_TRANSFER
;

5464 
sub_öãæóve_two
->
√xt_°©e
 = 
SR_COMPLETE
;

5465 
sub_öãæóve_two
->
√xt_°©e_¥edi˘_time
 = sub_öãæóve_two->
cuºít_time
 +

5466 (
sub_öãæóve_two
->
size
 *

5467 
ssd
->
∑ømëî
->
sub∑ge_ˇ∑côy
) *

5468 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tRC
;

5469 
sub_öãæóve_two
->
com∂ëe_time
 = sub_öãæóve_two->
√xt_°©e_¥edi˘_time
;

5471 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_°©e
 = 
CHANNEL_DATA_TRANSFER
;

5472 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
cuºít_time
 = ssd->current_time;

5473 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

5474 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
√xt_°©e_¥edi˘_time
 = 
sub_öãæóve_two
->next_state_predict_time;

5476 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 = 
CHIP_DATA_TRANSFER
;

5477 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_time
 = ssd->current_time;

5478 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

5479 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 = 
sub_öãæóve_two
->next_state_predict_time;

5481 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
add_ªg_µn
 = -1;

5486  
ERROR
;

5490 
	`¥ötf
("\nERROR: Unexpected command !\n");

5491  
ERROR
;

5494  
SUCCESS
;

5495 
	}
}

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/flash.h

19 #i‚de‡
FLASH_H


20 
	#FLASH_H
 100000

	)

22 
	~<°dlib.h
>

23 
	~"∑gem≠.h
"

25 
ssd_öfo
 *
¥o˚ss
(ssd_info *);

27 
ssd_öfo
 *
ö£π2buf„r
(ssd_öfÿ*, , , 
sub_ªque°
 *, 
ªque°
 *);

29 
ssd_öfo
 *

30 
Êash_∑ge_°©e_modify
(
ssd_öfo
 *, 
sub_ªque°
 *, , , , ,

33 
ssd_öfo
 *

34 
make_ßme_Àvñ
(
ssd_öfo
 *, , , , , , );

36 
föd_Àvñ_∑ge
(
ssd_öfo
 *, , , , 
sub_ªque°
 *,

37 
sub_ªque°
 *);

39 
make_Àvñ_∑ge
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub0
, sub_ªque° *
sub1
);

40 
ssd_öfo
 *
compuã_£rve_time
(ssd_öfÿ*
ssd
, 
ch™√l
, 
chù
, 
dõ
,

41 
sub_ªque°
 **
subs
, 
subs_cou¡
, 
comm™d
);

44 
gë_µn_f‹_adv™˚d_comm™ds
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
sub_ªque°
 **
subs
,

45 
subs_cou¡
, 
comm™d
);

47 
gë_µn_f‹_n‹mÆ_comm™d
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
sub_ªque°
 *
sub
);

49 
ssd_öfo
 *
dy«mic_adv™˚d_¥o˚ss
(ssd_öfÿ*
ssd
, 
ch™√l
, 
chù
);

51 
sub_ªque°
 *
föd_two_∂™e_∑ge
(
ssd_öfo
 *, sub_request *);

53 
sub_ªque°
 *
föd_öãæóve_ªad_∑ge
(
ssd_öfo
 *, sub_request *);

55 
föd_tw›œ√_wrôe_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_tw›œ√_⁄e
,

56 
sub_ªque°
 *
sub_tw›œ√_two
);

58 
föd_öãæóve_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_öãæóve_⁄e
,

59 
sub_ªque°
 *
sub_öãæóve_two
);

61 
sub_ªque°
 *

62 
föd_ªad_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
);

64 
sub_ªque°
 *
föd_wrôe_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
);

66 
sub_ªque°
 *

67 
¸ót_sub_ªque°
(
ssd_öfo
 *
ssd
, 
Õn
, 
size
, 
°©e
, 
ªque°
 *
ªq
,

68 
›î©i⁄
);

70 
sub_ªque°
 *

71 
föd_öãæóve_tw›œ√_∑ge
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
⁄ïage
, 
comm™d
);

74 
föd_öãæóve_tw›œ√_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_ªque°_⁄e
,

75 
sub_ªque°
 *
sub_ªque°_two
, 
comm™d
);

77 
ssd_öfo
 *
dñëe_‰om_ch™√l
(ssd_öfÿ*
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_ªq
);

79 
ssd_öfo
 *

80 
un_gªed_öãæóve_c›yback
(
ssd_öfo
 *, , , , 
sub_ªque°
 *,

81 
sub_ªque°
 *);

83 
ssd_öfo
 *
un_gªed_c›yback
(ssd_öfÿ*, , , , 
sub_ªque°
 *);

86 
föd_a˘ive_block
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

88 
wrôe_∑ge
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

89 
a˘ive_block
, *
µn
);

91 
Æloˇã_loˇti⁄
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub_ªq
);

94 
go_⁄e_°ï
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub1
, sub_ªque° *
sub2
, 
aim_°©e
,

95 
comm™d
);

97 
£rvi˚s_2_r_cmd_å™s_™d_com∂ëe
(
ssd_öfo
 *
ssd
);

99 
£rvi˚s_2_r_waô
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

100 *
ch™ge_cuºít_time_Êag
);

102 
£rvi˚s_2_r_d©a_å™s
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

103 *
ch™ge_cuºít_time_Êag
);

105 
£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

106 *
ch™ge_cuºít_time_Êag
);

109 
£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
, *
ch™ge_cuºít_time_Êag
);

110 
£rvi˚s_2_wrôe_busy_ö_chù
(
ssd_öfo
 *
ssd
);

111 
£rvi˚s_2_gc_busy_ö_chù
(
ssd_öfo
 *
ssd
);

112 
gc_åy_to_su•íd_fun˘i⁄
(
ssd_öfo
 *
ssd
, 
gc_›î©i⁄
 *
gc_node
, 
ch™√l
, 
chù
, 
cuºít_°©e
, 
√xt_°©e
, 
time
);

113 
åy_to_ª°‹e_gc_fun˘i⁄
(
ssd_öfo
 *
ssd
, 
gc_›î©i⁄
 *
gc_node
, 
ch™√l
, 
chù
);

115 
åy_to_ª°‹e_wrôe_fun˘i⁄
(
ssd_öfo
 *
ssd
);

117 
√w_£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,*
ch™ge_cuºít_time_Êag
);

121 
dñëe_w_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub
);

123 
c›y_back
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub_ªque°
 *
sub
);

126 
°©ic_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub_ªque°
 *
sub
);

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/initialize.c

19 
	#_CRTDBG_MAP_ALLOC


	)

21 
	~<°dlib.h
>

22 
	~"öôülize.h
"

23 
	~"∑gem≠.h
"

24 
	~"ssd.h
"

25 
	#FALSE
 0

	)

26 
	#TRUE
 1

	)

28 
	#ACTIVE_FIXED
 0

	)

29 
	#ACTIVE_ADJUST
 1

	)

35 
	$keyCom∑ªFunc
(
TREE_NODE
 *
p
, TREE_NODE *
p1
) {

36 
buf„r_group
 *
T1
 = 
NULL
, *
T2
 = NULL;

38 
T1
 = (
buf„r_group
 *Ë
p
;

39 
T2
 = (
buf„r_group
 *Ë
p1
;

42 i‡(
T1
->
group
 < 
T2
->group)  1;

43 i‡(
T1
->
group
 > 
T2
->group)  -1;

46 
	}
}

49 
	$‰ìFunc
(
TREE_NODE
 *
pNode
) {

51 i‡(
pNode
 !
NULL
) {

52 
	`‰ì
((*Ë
pNode
);

56 
pNode
 = 
NULL
;

58 
	}
}

68 
ssd_öfo
 *
	$öôüti⁄
(
ssd_öfo
 *
ssd
) {

69 
x
 = 0, 
y
 = 0, 
i
 = 0, 
j
 = 0, 
k
 = 0, 
l
 = 0, 
m
 = 0, 
n
 = 0;

71 
buf„r
[300];

72 
∑ømëî_vÆue
 *
∑ømëîs
;

73 
FILE
 *
Â
 = 
NULL
;

93 
	`°∫˝y
(
ssd
->
∑ømëîfûíame
, "page.parameters", 16);

95 
	`¥ötf
("\ninputÅrace fileÇame:");

96 
	`sˇnf
("%s", 
ssd
->
åa˚fûíame
);

97 
	`°∫˝y
(
ssd
->
ouçutfûíame
, "ex.out", 7);

98 
	`°∫˝y
(
ssd
->
°©i°icfûíame
, "statistic10.dat", 16);

99 
	`°∫˝y
(
ssd
->
°©i°icfûíame2
, "statistic2.dat", 15);

102 
∑ømëîs
 = 
	`lﬂd_∑ømëîs
(
ssd
->
∑ømëîfûíame
);

103 
ssd
->
∑ømëî
 = 
∑ømëîs
;

104 
ssd
->
mö_l¢
 = 0x7fffffff;

105 
ssd
->
∑ge
 = ssd->
∑ømëî
->
chù_num
 * ssd->∑ømëî->
dõ_chù
 * ssd->∑ømëî->
∂™e_dõ
 *

106 
ssd
->
∑ømëî
->
block_∂™e
 * ssd->∑ømëî->
∑ge_block
;

109 
ssd
->
døm
 = (
døm_öfo
 *Ë
	`mÆloc
((dram_info));

110 
	`Æloc_as£π
(
ssd
->
døm
, "ssd->dram");

111 
	`mem£t
(
ssd
->
døm
, 0, (
døm_öfo
));

112 
	`öôülize_døm
(
ssd
);

115 
ssd
->
ch™√l_hód
 = (
ch™√l_öfo
 *Ë
	`mÆloc
(ssd->
∑ømëî
->
ch™√l_numbî
 * (channel_info));

116 
	`Æloc_as£π
(
ssd
->
ch™√l_hód
, "ssd->channel_head");

117 
	`mem£t
(
ssd
->
ch™√l_hód
, 0, ssd->
∑ømëî
->
ch™√l_numbî
 * (
ch™√l_öfo
));

118 
	`öôülize_ch™√ls
(
ssd
);

121 
	`¥ötf
("\n");

122 
ssd
->
ouçutfûe
 = 
	`f›í
(ssd->
ouçutfûíame
, "w");

123 i‡(
ssd
->
ouçutfûe
 =
NULL
) {

124 
	`¥ötf
("the output file can't open\n");

125  
NULL
;

128 
	`¥ötf
("\n");

129 
ssd
->
°©i°icfûe
 = 
	`f›í
(ssd->
°©i°icfûíame
, "w");

130 i‡(
ssd
->
°©i°icfûe
 =
NULL
) {

131 
	`¥ötf
("the statistic file can't open\n");

132  
NULL
;

135 
	`¥ötf
("\n");

138 
	`Ârötf
(
ssd
->
ouçutfûe
, "∑ømëî fûe: %s\n", ssd->
∑ømëîfûíame
);

139 
	`Ârötf
(
ssd
->
ouçutfûe
, "åa˚ fûe: %s\n", ssd->
åa˚fûíame
);

140 
	`Ârötf
(
ssd
->
°©i°icfûe
, "∑ømëî fûe: %s\n", ssd->
∑ømëîfûíame
);

141 
	`Ârötf
(
ssd
->
°©i°icfûe
, "åa˚ fûe: %s\n", ssd->
åa˚fûíame
);

143 
	`fÊush
(
ssd
->
ouçutfûe
);

144 
	`fÊush
(
ssd
->
°©i°icfûe
);

146 
Â
 = 
	`f›í
(
ssd
->
∑ømëîfûíame
, "r");

147 i‡(
Â
 =
NULL
) {

148 
	`¥ötf
("\ntheÖarameter file can't open!\n");

149  
NULL
;

154 
	`Ârötf
(
ssd
->
ouçutfûe
, "-----------------------parameter file----------------------\n");

155 
	`Ârötf
(
ssd
->
°©i°icfûe
, "-----------------------parameter file----------------------\n");

156 
	`fgës
(
buf„r
, 300, 
Â
)) {

157 
	`Ârötf
(
ssd
->
ouçutfûe
, "%s", 
buf„r
);

158 
	`fÊush
(
ssd
->
ouçutfûe
);

159 
	`Ârötf
(
ssd
->
°©i°icfûe
, "%s", 
buf„r
);

160 
	`fÊush
(
ssd
->
°©i°icfûe
);

163 
	`Ârötf
(
ssd
->
ouçutfûe
, "\n");

164 
	`Ârötf
(
ssd
->
ouçutfûe
, "-----------------------simulation output----------------------\n");

165 
	`fÊush
(
ssd
->
ouçutfûe
);

167 
	`Ârötf
(
ssd
->
°©i°icfûe
, "\n");

168 
	`Ârötf
(
ssd
->
°©i°icfûe
, "-----------------------simulation output----------------------\n");

169 
	`fÊush
(
ssd
->
°©i°icfûe
);

171 
	`f˛o£
(
Â
);

172 
	`¥ötf
("initiation is completed!\n");

174  
ssd
;

175 
	}
}

178 
døm_öfo
 *
	$öôülize_døm
(
ssd_öfo
 *
ssd
) {

179 
∑ge_num
;

181 
døm_öfo
 *
døm
 = 
ssd
->dram;

182 
døm
->
døm_ˇ∑côy
 = 
ssd
->
∑ømëî
->dram_capacity;

183 
døm
->
buf„r
 = (
tAVLTªe
 *Ë
	`avlTªeCª©e
((*Ë
keyCom∑ªFunc
, (*Ë
‰ìFunc
);

184 
døm
->
buf„r
->
max_buf„r_£˘‹
 = 
ssd
->
∑ømëî
->
døm_ˇ∑côy
 / 
SECTOR
;

186 
døm
->
m≠
 = (
m≠_öfo
 *Ë
	`mÆloc
((map_info));

187 
	`Æloc_as£π
(
døm
->
m≠
, "dram->map");

188 
	`mem£t
(
døm
->
m≠
, 0, (
m≠_öfo
));

190 
∑ge_num
 = 
ssd
->
∑ømëî
->
∑ge_block
 * ssd->∑ømëî->
block_∂™e
 * ssd->∑ømëî->
∂™e_dõ
 *

191 
ssd
->
∑ømëî
->
dõ_chù
 * ssd->∑ømëî->
chù_num
;

192 
	`¥ötf
("∑ge_num i†%d\n", 
∑ge_num
);

193 
døm
->
m≠
->
m≠_íåy
 = (
íåy
 *Ë
	`mÆloc
((íåyË* 
∑ge_num
);

194 
	`Æloc_as£π
(
døm
->
m≠
->
m≠_íåy
, "dram->map->map_entry");

195 
	`mem£t
(
døm
->
m≠
->
m≠_íåy
, 0, (
íåy
Ë* 
∑ge_num
);

197  
døm
;

198 
	}
}

200 
∑ge_öfo
 *
	$öôülize_∑ge
(
∑ge_öfo
 *
p_∑ge
) {

201 
p_∑ge
->
vÆid_°©e
 = 0;

202 
p_∑ge
->
‰ì_°©e
 = 
PG_SUB
;

203 
p_∑ge
->
Õn
 = -1;

204 
p_∑ge
->
wrôãn_cou¡
 = 0;

205  
p_∑ge
;

206 
	}
}

208 
blk_öfo
 *
	$öôülize_block
(
blk_öfo
 *
p_block
, 
∑ømëî_vÆue
 *
∑ømëî
) {

209 
i
;

210 
∑ge_öfo
 *
p_∑ge
;

212 
p_block
->
‰ì_∑ge_num
 = 
∑ømëî
->
∑ge_block
;

213 
p_block
->
œ°_wrôe_∑ge
 = -1;

215 
p_block
->
∑ge_hód
 = (
∑ge_öfo
 *Ë
	`mÆloc
(
∑ømëî
->
∑ge_block
 * (page_info));

216 
	`Æloc_as£π
(
p_block
->
∑ge_hód
, "p_block->page_head");

217 
	`mem£t
(
p_block
->
∑ge_hód
, 0, 
∑ømëî
->
∑ge_block
 * (
∑ge_öfo
));

219 
i
 = 0; i < 
∑ømëî
->
∑ge_block
; i++) {

220 
p_∑ge
 = &(
p_block
->
∑ge_hód
[
i
]);

221 
	`öôülize_∑ge
(
p_∑ge
);

223  
p_block
;

225 
	}
}

227 
∂™e_öfo
 *
	$öôülize_∂™e
(
∂™e_öfo
 *
p_∂™e
, 
∑ømëî_vÆue
 *
∑ømëî
) {

228 
i
;

229 
blk_öfo
 *
p_block
;

230 
p_∂™e
->
add_ªg_µn
 = -1;

242 
p_∂™e
->
‰ì_∑ge
 = 
∑ømëî
->
block_∂™e
 *Ö¨amëî->
∑ge_block
;

244 
p_∂™e
->
blk_hód
 = (
blk_öfo
 *Ë
	`mÆloc
(
∑ømëî
->
block_∂™e
 * (blk_info));

245 
	`Æloc_as£π
(
p_∂™e
->
blk_hód
, "p_plane->blk_head");

246 
	`mem£t
(
p_∂™e
->
blk_hód
, 0, 
∑ømëî
->
block_∂™e
 * (
blk_öfo
));

248 
i
 = 0; i < 
∑ømëî
->
block_∂™e
; i++) {

249 
p_block
 = &(
p_∂™e
->
blk_hód
[
i
]);

250 
	`öôülize_block
(
p_block
, 
∑ømëî
);

252  
p_∂™e
;

253 
	}
}

255 
dõ_öfo
 *
	$öôülize_dõ
(
dõ_öfo
 *
p_dõ
, 
∑ømëî_vÆue
 *
∑ømëî
, 
cuºít_time
) {

256 
i
;

257 
∂™e_öfo
 *
p_∂™e
;

259 
p_dõ
->
tokí
 = 0;

261 
p_dõ
->
∂™e_hód
 = (
∂™e_öfo
 *Ë
	`mÆloc
(
∑ømëî
->
∂™e_dõ
 * (plane_info));

262 
	`Æloc_as£π
(
p_dõ
->
∂™e_hód
, "p_die->plane_head");

263 
	`mem£t
(
p_dõ
->
∂™e_hód
, 0, 
∑ømëî
->
∂™e_dõ
 * (
∂™e_öfo
));

265 
i
 = 0; i < 
∑ømëî
->
∂™e_dõ
; i++) {

266 
p_∂™e
 = &(
p_dõ
->
∂™e_hód
[
i
]);

267 
	`öôülize_∂™e
(
p_∂™e
, 
∑ømëî
);

270  
p_dõ
;

271 
	}
}

273 
chù_öfo
 *
	$öôülize_chù
(
chù_öfo
 *
p_chù
, 
∑ømëî_vÆue
 *
∑ømëî
, 
cuºít_time
) {

274 
i
;

275 
dõ_öfo
 *
p_dõ
;

277 
p_chù
->
cuºít_°©e
 = 
CHIP_IDLE
;

278 
p_chù
->
√xt_°©e
 = 
CHIP_IDLE
;

279 
p_chù
->
cuºít_time
 = current_time;

280 
p_chù
->
√xt_°©e_¥edi˘_time
 = 0;

281 
p_chù
->
dõ_num
 = 
∑ømëî
->
dõ_chù
;

282 
p_chù
->
∂™e_num_dõ
 = 
∑ømëî
->
∂™e_dõ
;

283 
p_chù
->
block_num_∂™e
 = 
∑ømëî
->
block_∂™e
;

284 
p_chù
->
∑ge_num_block
 = 
∑ømëî
->
block_∂™e
;

285 
p_chù
->
sub∑ge_num_∑ge
 = 
∑ømëî
->
sub∑ge_∑ge
;

286 
p_chù
->
îs_limô
 = 
∑ømëî
->ers_limit;

287 
p_chù
->
tokí
 = 0;

288 
p_chù
->
ac_timög
 = 
∑ømëî
->
time_ch¨a˘îi°ics
;

289 
p_chù
->
ªad_cou¡
 = 0;

290 
p_chù
->
¥ogøm_cou¡
 = 0;

291 
p_chù
->
îa£_cou¡
 = 0;

293 
p_chù
->
num_w_cy˛e
 = 0;

294 
p_chù
->
wrôe_¥ìm±ive_sign
 = 0;

295 
p_chù
->
chù_ªad_queue_Àngth
 = 0;

296 
p_chù
->
chù_wrôe_queue_Àngth
 = 0;

302 
p_chù
->
dõ_hód
 = (
dõ_öfo
 *Ë
	`mÆloc
(
∑ømëî
->
dõ_chù
 * (die_info));

303 
	`Æloc_as£π
(
p_chù
->
dõ_hód
, "p_chip->die_head");

304 
	`mem£t
(
p_chù
->
dõ_hód
, 0, 
∑ømëî
->
dõ_chù
 * (
dõ_öfo
));

306 
i
 = 0; i < 
∑ømëî
->
dõ_chù
; i++) {

307 
p_dõ
 = &(
p_chù
->
dõ_hód
[
i
]);

308 
	`öôülize_dõ
(
p_dõ
, 
∑ømëî
, 
cuºít_time
);

311  
p_chù
;

312 
	}
}

314 
ssd_öfo
 *
	$öôülize_ch™√ls
(
ssd_öfo
 *
ssd
) {

315 
i
, 
j
;

316 
ch™√l_öfo
 *
p_ch™√l
;

317 
chù_öfo
 *
p_chù
;

320 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

321 
p_ch™√l
 = &(
ssd
->
ch™√l_hód
[
i
]);

322 
p_ch™√l
->
chù
 = 
ssd
->
∑ømëî
->
chù_ch™√l
[
i
];

323 
p_ch™√l
->
cuºít_°©e
 = 
CHANNEL_IDLE
;

324 
p_ch™√l
->
√xt_°©e
 = 
CHANNEL_IDLE
;

331 
p_ch™√l
->
chù_hód
 = (
chù_öfo
 *Ë
	`mÆloc
(
ssd
->
∑ømëî
->
chù_ch™√l
[
i
] * (chip_info));

332 
	`Æloc_as£π
(
p_ch™√l
->
chù_hód
, "p_channel->chip_head");

333 
	`mem£t
(
p_ch™√l
->
chù_hód
, 0, 
ssd
->
∑ømëî
->
chù_ch™√l
[
i
] * (
chù_öfo
));

335 
j
 = 0; j < 
ssd
->
∑ømëî
->
chù_ch™√l
[
i
]; j++) {

336 
p_chù
 = &(
p_ch™√l
->
chù_hód
[
j
]);

337 
	`öôülize_chù
(
p_chù
, 
ssd
->
∑ømëî
, ssd->
cuºít_time
);

338 #ifde‡
DEBUG


339 
	`¥ötf
("öôülizêch™√l†chù %d, ssd cuºít_timê%Œd\n",
j
, 
ssd
->
cuºít_time
);

344  
ssd
;

345 
	}
}

353 
∑ømëî_vÆue
 *
	$lﬂd_∑ømëîs
(
∑ømëî_fûe
[30]) {

354 
FILE
 *
Â
;

355 
FILE
 *
Â1
;

356 
FILE
 *
Â2
;

358 
∑ømëî_vÆue
 *
p
;

359 
buf
[
BUFSIZE
];

360 
i
;

361 
¥e_eql
, 
√xt_eql
;

362 
ªs_eql
;

363 *
±r
;

365 
p
 = (
∑ømëî_vÆue
 *Ë
	`mÆloc
((parameter_value));

366 
	`Æloc_as£π
(
p
, "parameter_value");

367 
	`mem£t
(
p
, 0, (
∑ømëî_vÆue
));

368 
p
->
queue_Àngth
 = 1000;

369 
	`mem£t
(
buf
, 0, 
BUFSIZE
);

371 
Â
 = 
	`f›í
(
∑ømëî_fûe
, "r");

372 i‡(
Â
 =
NULL
) {

373 
	`¥ötf
("the fileÖarameter_fileÉrror!\n");

374  
p
;

376 
Â1
 = 
	`f›í
("parameters_name.txt", "w");

377 i‡(
Â1
 =
NULL
) {

378 
	`¥ötf
("the fileÖarameter_nameÉrror!\n");

379  
p
;

381 
Â2
 = 
	`f›í
("parameters_value.txt", "w");

382 i‡(
Â2
 =
NULL
) {

383 
	`¥ötf
("the fileÖarameter_valueÉrror!\n");

384  
p
;

388 
	`fgës
(
buf
, 200, 
Â
)) {

389 i‡(
buf
[0] == '#' || buf[0] == ' ') ;

390 
±r
 = 
	`°rchr
(
buf
, '=');

391 i‡(!
±r
) ;

393 
¥e_eql
 = 
±r
 - 
buf
;

394 
√xt_eql
 = 
¥e_eql
 + 1;

396 
buf
[
¥e_eql
 - 1] == ' ')Öre_eql--;

397 
buf
[
¥e_eql
] = 0;

398 i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "chipÇumber")) == 0) {

399 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
chù_num
);

400 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "dram capacity")) == 0) {

401 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
døm_ˇ∑côy
);

402 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "cpu sdram")) == 0) {

403 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
˝u_sdøm
);

404 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "channelÇumber")) == 0) {

405 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
ch™√l_numbî
);

406 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "dieÇumber")) == 0) {

407 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
dõ_chù
);

408 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "planeÇumber")) == 0) {

409 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
∂™e_dõ
);

410 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "blockÇumber")) == 0) {

411 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
block_∂™e
);

412 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "pageÇumber")) == 0) {

413 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
∑ge_block
);

414 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "subpageÖage")) == 0) {

415 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
sub∑ge_∑ge
);

416 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "page capacity")) == 0) {

417 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
∑ge_ˇ∑côy
);

418 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "subpage capacity")) == 0) {

419 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
sub∑ge_ˇ∑côy
);

420 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_PROG")) == 0) {

421 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG
);

424 i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "tPROG_r_phy")) == 0) {

425 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG_r_phy
) ;

426 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "tPROG_w_total ")) == 0) {

427 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG_w_tŸÆ
) ;

428 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "tPROG_Nw_cycle")) == 0) {

429 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG_Nw_cy˛e
) ;

430 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "tPROG_Tw_cycle")) == 0) {

431 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG_Tw_cy˛e
) ;

432 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "tPROG_w_progam")) == 0) {

433 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG_w_¥ogam
) ;

434 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "tPROG_w_verify")) == 0) {

435 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG_w_vîify
) ;

436 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "tPROG_buffer")) == 0) {

437 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tPROG_buf„r
) ;

440 i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_DBSY")) == 0) {

441 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tDBSY
);

442 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_BERS")) == 0) {

443 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tBERS
);

444 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_CLS")) == 0) {

445 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCLS
);

446 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_CLH")) == 0) {

447 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCLH
);

448 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_CS")) == 0) {

449 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCS
);

450 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_CH")) == 0) {

451 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCH
);

452 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_WP")) == 0) {

453 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tWP
);

454 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_ALS")) == 0) {

455 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tALS
);

456 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_ALH")) == 0) {

457 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tALH
);

458 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_DS")) == 0) {

459 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tDS
);

460 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_DH")) == 0) {

461 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tDH
);

462 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_WC")) == 0) {

463 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tWC
);

464 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_WH")) == 0) {

465 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tWH
);

466 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_ADL")) == 0) {

467 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tADL
);

468 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_R")) == 0) {

469 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tR
);

470 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_AR")) == 0) {

471 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tAR
);

472 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_CLR")) == 0) {

473 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCLR
);

474 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RR")) == 0) {

475 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRR
);

476 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RP")) == 0) {

477 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRP
);

478 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_WB")) == 0) {

479 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tWB
);

480 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RC")) == 0) {

481 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRC
);

482 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_REA")) == 0) {

483 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tREA
);

484 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_CEA")) == 0) {

485 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCEA
);

486 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RHZ")) == 0) {

487 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRHZ
);

488 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_CHZ")) == 0) {

489 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCHZ
);

490 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RHOH")) == 0) {

491 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRHOH
);

492 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RLOH")) == 0) {

493 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRLOH
);

494 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_COH")) == 0) {

495 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tCOH
);

496 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_REH")) == 0) {

497 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tREH
);

498 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_IR")) == 0) {

499 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tIR
);

500 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RHW")) == 0) {

501 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRHW
);

502 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_WHR")) == 0) {

503 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tWHR
);

504 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "t_RST")) == 0) {

505 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_ch¨a˘îi°ics
.
tRST
);

506 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "eraseÜimit")) == 0) {

507 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
îs_limô
);

508 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "flash operating current")) == 0) {

509 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%lf", &
p
->
›î©ög_cuºít
);

510 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "flash supply voltage")) == 0) {

511 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%lf", &
p
->
suµly_vﬁège
);

512 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "dramáctive current")) == 0) {

513 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%lf", &
p
->
døm_a˘ive_cuºít
);

514 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "dram standby current")) == 0) {

515 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%lf", &
p
->
døm_°™dby_cuºít
);

516 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "dramÑefresh current")) == 0) {

517 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%lf", &
p
->
døm_ª‰esh_cuºít
);

518 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "dram voltage")) == 0) {

519 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%lf", &
p
->
døm_vﬁège
);

520 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "address mapping")) == 0) {

521 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
addªss_m≠pög
);

522 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "wearÜeveling")) == 0) {

523 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
wór_Àvñög
);

524 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "gc")) == 0) {

525 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
gc
);

526 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "clean in background")) == 0) {

527 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
˛ón_ö_background
);

528 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "overprovide")) == 0) {

529 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%f", &
p
->
ovî¥ovide
);

530 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "gcÅhreshold")) == 0) {

531 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%f", &
p
->
gc_thªshﬁd
);

532 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "buffer management")) == 0) {

533 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
buf„r_m™agemít
);

534 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "schedulingálgorithm")) == 0) {

535 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
schedulög_Æg‹ôhm
);

536 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "quickÅableÑadio")) == 0) {

537 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%f", &
p
->
quick_ødio
);

538 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "related mapping")) == 0) {

539 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
ªœãd_m≠pög
);

540 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "striping")) == 0) {

541 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
°rùög
);

542 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "interleaving")) == 0) {

543 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
öãæóvög
);

544 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "pipelining")) == 0) {

545 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
pùñöög
);

546 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "time_step")) == 0) {

547 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
time_°ï
);

548 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "smallÜarge write")) == 0) {

549 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
smÆl_œrge_wrôe
);

550 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "active writeÅhreshold")) == 0) {

551 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
thªshﬁd_fixed_adju°
);

552 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "threshold value")) == 0) {

553 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%f", &
p
->
thªshﬁd_vÆue
);

554 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "active write")) == 0) {

555 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
a˘ive_wrôe
);

556 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "gc hardÅhreshold")) == 0) {

557 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%f", &
p
->
gc_h¨d_thªshﬁd
);

558 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "allocation")) == 0) {

559 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
Æloˇti⁄_scheme
);

560 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "static_allocation")) == 0) {

561 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
°©ic_Æloˇti⁄
);

562 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "dynamic_allocation")) == 0) {

563 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
dy«mic_Æloˇti⁄
);

564 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "advanced command")) == 0) {

565 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
adv™˚d_comm™ds
);

566 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "advanced commandÖriority")) == 0) {

567 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
ad_¥i‹ôy
);

568 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "advanced commandÖriority2")) == 0) {

569 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
ad_¥i‹ôy2
);

570 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "greed CB command")) == 0) {

571 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
gªed_CB_ad
);

572 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "greed MPW command")) == 0) {

573 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
gªed_MPW_ad
);

574 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "aged")) == 0) {

575 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
aged
);

576 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "agedÑatio")) == 0) {

577 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%f", &
p
->
aged_øtio
);

578 } i‡((
ªs_eql
 = 
	`°rcmp
(
buf
, "queue_length")) == 0) {

579 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
queue_Àngth
);

580 } i‡((
ªs_eql
 = 
	`°∫cmp
(
buf
, "chipÇumber", 11)) == 0) {

581 
	`ssˇnf
(
buf
 + 12, "%d", &
i
);

582 
	`ssˇnf
(
buf
 + 
√xt_eql
, "%d", &
p
->
chù_ch™√l
[
i
]);

584 
	`¥ötf
("d⁄'àm©ch\à%s\n", 
buf
);

587 
	`mem£t
(
buf
, 0, 
BUFSIZE
);

590 
	`f˛o£
(
Â
);

591 
	`f˛o£
(
Â1
);

592 
	`f˛o£
(
Â2
);

594  
p
;

595 
	}
}

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/initialize.h

18 #i‚de‡
INITIALIZE_H


19 
	#INITIALIZE_H
 10000

	)

21 
	~<°dio.h
>

22 
	~<°rög.h
>

23 
	~<°dlib.h
>

24 
	~<time.h
>

25 
	~<˘y≥.h
>

26 
	~<sys/ty≥s.h
>

27 
	~"avlTªe.h
"

29 
	#SECTOR
 512

	)

30 
	#BUFSIZE
 200

	)

32 
	#DYNAMIC_ALLOCATION
 0

	)

33 
	#STATIC_ALLOCATION
 1

	)

35 
	#INTERLEAVE
 0

	)

36 
	#TWO_PLANE
 1

	)

38 
	#NORMAL
 2

	)

39 
	#INTERLEAVE_TWO_PLANE
 3

	)

40 
	#COPY_BACK
 4

	)

42 
	#AD_RANDOM
 1

	)

43 
	#AD_COPYBACK
 2

	)

44 
	#AD_TWOPLANE
 4

	)

45 
	#AD_INTERLEAVE
 8

	)

46 
	#AD_TWOPLANE_READ
 16

	)

48 
	#READ
 1

	)

49 
	#WRITE
 0

	)

57 
	#CHANNEL_IDLE
 000

	)

58 
	#CHANNEL_C_A_TRANSFER
 3

	)

59 
	#CHANNEL_GC
 4

	)

61 
	#CHANNEL_GC_ERASE
 5

	)

64 
	#CHANNEL_DATA_TRANSFER
 7

	)

65 
	#CHANNEL_TRANSFER
 8

	)

66 
	#CHANNEL_UNKNOWN
 9

	)

68 
	#CHIP_IDLE
 100

	)

69 
	#CHIP_WRITE_BUSY
 101

	)

70 
	#CHIP_READ_BUSY
 102

	)

71 
	#CHIP_C_A_TRANSFER
 103

	)

73 
	#CHIP_WRITE_DATA_CMD_BUSY
 104

	)

74 
	#CHIP_GC_RW_BUSY
 105

	)

76 
	#CHIP_DATA_TRANSFER
 107

	)

77 
	#CHIP_WAIT
 108

	)

78 
	#CHIP_ERASE_BUSY
 109

79 
	#CHIP_COPYBACK_BUSY
 110

	)

80 
	#UNKNOWN
 111

	)

82 
	#SR_WAIT
 200

	)

83 
	#SR_R_C_A_TRANSFER
 201

	)

84 
	#SR_R_READ
 202

	)

85 
	#SR_R_DATA_TRANSFER
 203

	)

86 
	#SR_W_C_A_DATA_TRANSFER
 204

	)

87 
	#SR_W_DATA_TRANSFER_ONE_PROG_OF_ITERATIONS
 205

	)

88 
	#SR_W_DATA_TRANSFER_ONE_VERIFY_OF_ITERATIONS
 207

	)

89 
	#SR_W_TRANSFER
 206

	)

92 
	#SR_W_DATA_TRANSFER
 208

93 

	)

94 
	#SR_COMPLETE
 299

	)

96 
	#REQUEST_IN
 300

97 
	#OUTPUT
 301

98 

	)

99 
	#GC_WAIT
 400

	)

100 
	#GC_ERASE_C_A
 401

	)

101 
	#GC_COPY_BACK
 402

	)

102 
	#GC_COMPLETE
 403

	)

103 
	#GC_INTERRUPT
 0

	)

104 
	#GC_UNINTERRUPT
 1

	)

106 
	#CHANNEL
(
l¢
Ë÷¢&0x0000)>>16

	)

107 
	#chù
(
l¢
Ë÷¢&0x0000)>>16

	)

108 
	#dõ
(
l¢
Ë÷¢&0x0000)>>16

	)

109 
	#PLANE
(
l¢
Ë÷¢&0x0000)>>16

	)

110 
	#BLOKC
(
l¢
Ë÷¢&0x0000)>>16

	)

111 
	#PAGE
(
l¢
Ë÷¢&0x0000)>>16

	)

112 
	#SUBPAGE
(
l¢
Ë÷¢&0x0000)>>16

	)

114 
	#PG_SUB
 0xffffffff

	)

120 
	#TRUE
 1

	)

121 
	#FALSE
 0

	)

122 
	#SUCCESS
 1

	)

123 
	#FAILURE
 0

	)

124 
	#ERROR
 -1

	)

125 
	#INFEASIBLE
 -2

	)

126 
	#OVERFLOW
 -3

	)

127 
	tSètus
;

129 
	sac_time_ch¨a˘îi°ics
 {

130 
	mtPROG
;

132 
	mtPROG_r_phy
;

134 
	mtPROG_w_tŸÆ
;

135 
	mtPROG_Nw_cy˛e
;

136 
	mtPROG_Tw_cy˛e
;

137 
	mtPROG_w_¥ogam
;

138 
	mtPROG_w_vîify
;

139 
	mtPROG_buf„r
;

143 
	mtDBSY
;

144 
	mtBERS
;

145 
	mtCLS
;

146 
	mtCLH
;

147 
	mtCS
;

148 
	mtCH
;

149 
	mtWP
;

150 
	mtALS
;

151 
	mtALH
;

152 
	mtDS
;

153 
	mtDH
;

154 
	mtWC
;

155 
	mtWH
;

156 
	mtADL
;

157 
	mtR
;

158 
	mtAR
;

159 
	mtCLR
;

160 
	mtRR
;

161 
	mtRP
;

162 
	mtWB
;

163 
	mtRC
;

164 
	mtREA
;

165 
	mtCEA
;

166 
	mtRHZ
;

167 
	mtCHZ
;

168 
	mtRHOH
;

169 
	mtRLOH
;

170 
	mtCOH
;

171 
	mtREH
;

172 
	mtIR
;

173 
	mtRHW
;

174 
	mtWHR
;

175 
	mtRST
;

176 } 
	gac_timög
;

179 
	sssd_öfo
 {

181 
	mdebug_sign
;

182 
	mgc_su•íd_times
;

183 
	mwrôe_su•íd_times
;

184 
	mgc_su•íd_doög
;

185 
	mwrôe_su•íd_doög
;

186 
	m‹igöÆ_tŸÆ_∑ges_numbî
;

187 
	ma·î_¥e_¥o˚ss_∑ges_numbî
;

188 
	ma·î_¥e_¥o˚s£_™d_aged_∑ges_numbî
;

189 
	mœ°_tŸÆ_avaûabÀ_∑ges_numbî
;

196 
	mssd_íîgy
;

197 
öt64_t
 
	mcuºít_time
;

198 
öt64_t
 
	m√xt_ªque°_time
;

199 
	mªÆ_time_subªq
;

200 
	mÊag
;

201 
	ma˘ive_Êag
;

202 
	m∑ge
;

204 
	mtokí
;

205 
	mgc_ªque°
;

207 
	mwrôe_ªque°_cou¡
;

208 
	mªad_ªque°_cou¡
;

209 
öt64_t
 
	mwrôe_avg
;

210 
öt64_t
 
	mªad_avg
;

212 
	mmö_l¢
;

213 
	mmax_l¢
;

214 
	mªad_cou¡
;

215 
	m¥ogøm_cou¡
;

216 
	mîa£_cou¡
;

217 
	mdúe˘_îa£_cou¡
;

218 
	mc›y_back_cou¡
;

219 
	mm_∂™e_ªad_cou¡
;

220 
	mm_∂™e_¥og_cou¡
;

221 
	möãæóve_cou¡
;

222 
	möãæóve_ªad_cou¡
;

223 
	möãr_m∂™e_cou¡
;

224 
	möãr_m∂™e_¥og_cou¡
;

225 
	möãæóve_îa£_cou¡
;

226 
	mm∂™e_îa£_c⁄ut
;

227 
	möãæóve_m∂™e_îa£_cou¡
;

228 
	mgc_c›y_back
;

229 
	mwrôe_Êash_cou¡
;

230 
	mwa°e_∑ge_cou¡
;

231 
	mave_ªad_size
;

232 
	mave_wrôe_size
;

233 
	mªque°_queue_Àngth
;

234 
	mupd©e_ªad_cou¡
;

236 
	m∑ømëîfûíame
[30];

237 
	måa˚fûíame
[30];

238 
	mouçutfûíame
[30];

239 
	m°©i°icfûíame
[30];

240 
	m°©i°icfûíame2
[30];

242 
FILE
 *
	mouçutfûe
;

243 
FILE
 *
	måa˚fûe
;

244 
FILE
 *
	m°©i°icfûe
;

245 
FILE
 *
	m°©i°icfûe2
;

247 
∑ømëî_vÆue
 *
	m∑ømëî
;

248 
døm_öfo
 *
	mdøm
;

249 
ªque°
 *
	mªque°_queue
;

250 
ªque°
 *
	mªque°_èû
;

251 
sub_ªque°
 *
	msubs_w_hód
;

252 
sub_ªque°
 *
	msubs_w_èû
;

253 
evít_node
 *
	mevít
;

254 
ch™√l_öfo
 *
	mch™√l_hód
;

258 
	sch™√l_öfo
 {

259 
	mchù
;

260 
	mªad_cou¡
;

261 
	m¥ogøm_cou¡
;

262 
	mîa£_cou¡
;

263 
	mtokí
;

265 
	mcuºít_°©e
;

266 
	m√xt_°©e
;

267 
öt64_t
 
	mcuºít_time
;

268 
öt64_t
 
	m√xt_°©e_¥edi˘_time
;

270 
evít_node
 *
	mevít
;

271 
sub_ªque°
 *
	msubs_r_hód
;

272 
sub_ªque°
 *
	msubs_r_èû
;

273 
sub_ªque°
 *
	msubs_w_hód
;

274 
sub_ªque°
 *
	msubs_w_èû
;

275 
gc_›î©i⁄
 *
	mgc_comm™d
;

276 
chù_öfo
 *
	mchù_hód
;

284 
	schù_öfo
 {

285 
	mdõ_num
;

286 
	m∂™e_num_dõ
;

287 
	mblock_num_∂™e
;

288 
	m∑ge_num_block
;

289 
	msub∑ge_num_∑ge
;

290 
	mîs_limô
;

291 
	mtokí
;

293 
	mcuºít_°©e
;

294 
	m√xt_°©e
;

295 
öt64_t
 
	mcuºít_time
;

296 
öt64_t
 
	m√xt_°©e_¥edi˘_time
;

298 
	mªad_cou¡
;

299 
	m¥ogøm_cou¡
;

300 
	mîa£_cou¡
;

302 
ac_time_ch¨a˘îi°ics
 
	mac_timög
;

303 
dõ_öfo
 *
	mdõ_hód
;

305 
	mwrôe_¥ìm±ive_sign
;

306 
	mnum_w_cy˛e
;

310 
	mchù_°©us
;

311 
	mchù_°©us_time
;

312 
	mchù_ªad_queue_Àngth
;

313 
	mchù_wrôe_queue_Àngth
;

315 
sub_ªque°
 *
	m°‹edsub
;

319 
	sdõ_öfo
 {

321 
	mtokí
;

322 
∂™e_öfo
 *
	m∂™e_hód
;

327 
	s∂™e_öfo
 {

328 
	madd_ªg_µn
;

335 
	m‰ì_∑ge
;

336 
	mîs_övÆid
;

337 
	ma˘ive_block
;

338 
	mˇn_îa£_block
;

339 
dúe˘_îa£
 *
	mîa£_node
;

340 
blk_öfo
 *
	mblk_hód
;

344 
	sblk_öfo
 {

345 
	mîa£_cou¡
;

346 
	m‰ì_∑ge_num
;

347 
	mövÆid_∑ge_num
;

348 
	mœ°_wrôe_∑ge
;

349 
∑ge_öfo
 *
	m∑ge_hód
;

353 
	s∑ge_öfo
 {

354 
	mvÆid_°©e
;

355 
	m‰ì_°©e
;

356 
	mÕn
;

357 
	mwrôãn_cou¡
;

361 
	sdøm_öfo
 {

362 
	mdøm_ˇ∑côy
;

363 
öt64_t
 
	mcuºít_time
;

365 
døm_∑ømëî
 *
	mdøm_∑ømãrs
;

366 
m≠_öfo
 *
	mm≠
;

367 
buf„r_öfo
 *
	mbuf„r
;

381 
	sbuf„r_group
 {

382 
TREE_NODE
 
	mnode
;

383 
buf„r_group
 *
	mLRU_lök_√xt
;

384 
buf„r_group
 *
	mLRU_lök_¥e
;

386 
	mgroup
;

387 
	m°‹ed
;

388 
	mdúty_˛ón
;

389 
	mÊag
;

390 } 
	tbuf_node
;

393 
	sdøm_∑ømëî
 {

394 
	ma˘ive_cuºít
;

395 
	m¶ìp_cuºít
;

396 
	mvﬁège
;

397 
	m˛ock_time
;

401 
	sm≠_öfo
 {

402 
íåy
 *
	mm≠_íåy
;

403 
buf„r_öfo
 *
	m©èch_öfo
;

407 
	sc⁄åﬁÀr_öfo
 {

408 
	m‰equícy
;

409 
öt64_t
 
	m˛ock_time
;

410 
	mpowî
;

414 
	sªque°
 {

415 
öt64_t
 
	mtime
;

416 
	ml¢
;

417 
	msize
;

418 
	m›î©i⁄
;

420 *
	m√ed_di°r_Êag
;

421 
	mcom∂ëe_l¢_cou¡
;

423 
	mdi°ri_Êag
;

425 
öt64_t
 
	mbegö_time
;

426 
öt64_t
 
	mª•⁄£_time
;

427 
	míîgy_c⁄sum±i⁄
;

429 
sub_ªque°
 *
	msubs
;

430 
ªque°
 *
	m√xt_node
;

434 
	ssub_ªque°
 {

435 
	mÕn
;

436 
	mµn
;

437 
	m›î©i⁄
;

438 
	msize
;

441 
	mcuºít_°©e
;

442 
öt64_t
 
	mcuºít_time
;

443 
	m√xt_°©e
;

444 
öt64_t
 
	m√xt_°©e_¥edi˘_time
;

445 
	m°©e
;

448 
öt64_t
 
	mbegö_time
;

449 
öt64_t
 
	mcom∂ëe_time
;

451 
loˇl
 *
	mloˇti⁄
;

452 
sub_ªque°
 *
	m√xt_subs
;

453 
sub_ªque°
 *
	m√xt_node
;

454 
sub_ªque°
 *
	mupd©e
;

458 
öt64_t
 
	m£rvi˚d_time
;

459 
öt64_t
 
	m¶ack_time
;

460 
	mœ°_sign
;

468 
	sevít_node
 {

469 
	mty≥
;

470 
öt64_t
 
	m¥edi˘_time
;

471 
evít_node
 *
	m√xt_node
;

472 
evít_node
 *
	m¥e_node
;

475 
	s∑ømëî_vÆue
 {

476 
	mchù_num
;

477 
	mdøm_ˇ∑côy
;

478 
	m˝u_sdøm
;

480 
	mch™√l_numbî
;

481 
	mchù_ch™√l
[100];

483 
	mdõ_chù
;

484 
	m∂™e_dõ
;

485 
	mblock_∂™e
;

486 
	m∑ge_block
;

487 
	msub∑ge_∑ge
;

489 
	m∑ge_ˇ∑côy
;

490 
	msub∑ge_ˇ∑côy
;

493 
	mîs_limô
;

494 
	maddªss_m≠pög
;

495 
	mwór_Àvñög
;

496 
	mgc
;

497 
	m˛ón_ö_background
;

498 
	mÆloc_poﬁ
;

499 
	movî¥ovide
;

500 
	mgc_thªshﬁd
;

502 
	m›î©ög_cuºít
;

503 
	msuµly_vﬁège
;

504 
	mdøm_a˘ive_cuºít
;

505 
	mdøm_°™dby_cuºít
;

506 
	mdøm_ª‰esh_cuºít
;

507 
	mdøm_vﬁège
;

509 
	mbuf„r_m™agemít
;

510 
	mschedulög_Æg‹ôhm
;

511 
	mquick_ødio
;

512 
	mªœãd_m≠pög
;

514 
	mtime_°ï
;

515 
	msmÆl_œrge_wrôe
;

517 
	m°rùög
;

518 
	möãæóvög
;

519 
	mpùñöög
;

520 
	mthªshﬁd_fixed_adju°
;

521 
	mthªshﬁd_vÆue
;

522 
	ma˘ive_wrôe
;

523 
	mgc_h¨d_thªshﬁd
;

524 
	mÆloˇti⁄_scheme
;

525 
	m°©ic_Æloˇti⁄
;

526 
	mdy«mic_Æloˇti⁄
;

527 
	madv™˚d_comm™ds
;

528 
	mad_¥i‹ôy
;

529 
	mad_¥i‹ôy2
;

530 
	mgªed_CB_ad
;

531 
	mgªed_MPW_ad
;

532 
	maged
;

533 
	maged_øtio
;

534 
	mqueue_Àngth
;

536 
ac_time_ch¨a˘îi°ics
 
	mtime_ch¨a˘îi°ics
;

542 
	síåy
 {

543 
	m≤
;

544 
	m°©e
;

548 
	sloˇl
 {

549 
	mch™√l
;

550 
	mchù
;

551 
	mdõ
;

552 
	m∂™e
;

553 
	mblock
;

554 
	m∑ge
;

555 
	msub_∑ge
;

559 
	sgc_öfo
 {

560 
öt64_t
 
	mbegö_time
;

561 
	mc›y_back_cou¡
;

562 
	mîa£_cou¡
;

563 
öt64_t
 
	m¥o˚ss_time
;

564 
	míîgy_c⁄sum±i⁄
;

568 
	sdúe˘_îa£
 {

569 
	mblock
;

570 
dúe˘_îa£
 *
	m√xt_node
;

577 
	sgc_›î©i⁄
 {

578 
	mchù
;

579 
	mdõ
;

580 
	m∂™e
;

581 
	mblock
;

582 
	m∑ge
;

583 
	m°©e
;

584 
	m¥i‹ôy
;

585 
gc_›î©i⁄
 *
	m√xt_node
;

587 
	mc›y_∑ge_numbî
;

588 
	mc›y_vÆid_numbî
;

589 
	mpos_ö_c›y
;

590 
	mªad
;

591 
	mwrôe
;

592 
	mîa£
;

593 
	mvi˘im_block_numbî
;

595 
	mgc_ªad_ö√r
;

596 
	mgc_wrôe_ö√r
;

597 
	mªad_wrôe_íd
;

598 
	mœ°_∑ge_ö_vi˘im_dól
;

600 
	mvi˘im_block_‰ì∑ge_°©i°ic
;

601 
	mchù_°©us
;

602 
	mchù_√xt_°©us
;

603 
	msign_f‹_¥ìm±ive
;

604 
	mchù_√xt_¥edi˘_time_diff
;

611 
	sDøm_wrôe_m≠
 {

612 
	m°©e
;

613 } 
	tDøm_wrôe_m≠
;

616 
ssd_öfo
 *
öôüti⁄
(ssd_info *);

618 
∑ømëî_vÆue
 *
lﬂd_∑ømëîs
(
∑ømëî_fûe
[30]);

620 
∑ge_öfo
 *
öôülize_∑ge
(∑ge_öfÿ*
p_∑ge
);

622 
blk_öfo
 *
öôülize_block
(blk_öfÿ*
p_block
, 
∑ømëî_vÆue
 *
∑ømëî
);

624 
∂™e_öfo
 *
öôülize_∂™e
(∂™e_öfÿ*
p_∂™e
, 
∑ømëî_vÆue
 *
∑ømëî
);

626 
dõ_öfo
 *
öôülize_dõ
(dõ_öfÿ*
p_dõ
, 
∑ømëî_vÆue
 *
∑ømëî
, 
cuºít_time
);

628 
chù_öfo
 *
öôülize_chù
(chù_öfÿ*
p_chù
, 
∑ømëî_vÆue
 *
∑ømëî
, 
cuºít_time
);

630 
ssd_öfo
 *
öôülize_ch™√ls
(ssd_öfÿ*
ssd
);

632 
døm_öfo
 *
öôülize_døm
(
ssd_öfo
 *
ssd
);

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/pagemap.c

19 
	#_CRTDBG_MAP_ALLOC


	)

21 
	~"∑gem≠.h
"

22 
	~"ssd.h
"

28 
	$fûe_as£π
(
îr‹
, *
s
) {

29 i‡(
îr‹
 == 0) ;

30 
	`¥ötf
("›í %†îr‹\n", 
s
);

31 
	`gëch¨
();

32 
	`exô
(-1);

33 
	}
}

38 
	$Æloc_as£π
(*
p
, *
s
)

40 i‡(
p
 !
NULL
) ;

41 
	`¥ötf
("mÆlo¯%†îr‹\n", 
s
);

42 
	`gëch¨
();

43 
	`exô
(-1);

44 
	}
}

51 
	$åa˚_as£π
(
öt64_t
 
time_t
, 
devi˚
, 
l¢
, 
size
, 
›e
)

53 i‡(
time_t
 < 0 || 
devi˚
 < 0 || 
l¢
 < 0 || 
size
 < 0 || 
›e
 < 0) {

54 
	`¥ötf
("åa˚Éº‹:%Œd %d %d %d %d\n", 
time_t
, 
devi˚
, 
l¢
, 
size
, 
›e
);

55 
	`gëch¨
();

56 
	`exô
(-1);

58 i‡(
time_t
 =0 && 
devi˚
 =0 && 
l¢
 =0 && 
size
 =0 && 
›e
 == 0) {

59 
	`¥ötf
("probableÑeadá blankÜine\n");

60 
	`gëch¨
();

62 
	}
}

69 
loˇl
 *
	$föd_loˇti⁄
(
ssd_öfo
 *
ssd
, 
µn
) {

70 
loˇl
 *
loˇti⁄
 = 
NULL
;

71 
i
 = 0;

72 
≤
, 
µn_vÆue
 = 
µn
;

73 
∑ge_∂™e
 = 0, 
∑ge_dõ
 = 0, 
∑ge_chù
 = 0, 
∑ge_ch™√l
 = 0;

75 
≤
 = 
µn
;

77 #ifde‡
DEBUG


78 
	`¥ötf
("enter find_location\n");

81 
loˇti⁄
 = (
loˇl
 *Ë
	`mÆloc
((local));

82 
	`Æloc_as£π
(
loˇti⁄
, "location");

83 
	`mem£t
(
loˇti⁄
, 0, (
loˇl
));

85 
∑ge_∂™e
 = 
ssd
->
∑ømëî
->
∑ge_block
 * ssd->∑ømëî->
block_∂™e
;

86 
∑ge_dõ
 = 
∑ge_∂™e
 * 
ssd
->
∑ømëî
->
∂™e_dõ
;

87 
∑ge_chù
 = 
∑ge_dõ
 * 
ssd
->
∑ømëî
->
dõ_chù
;

88 
∑ge_ch™√l
 = 
∑ge_chù
 * 
ssd
->
∑ømëî
->
chù_ch™√l
[0];

94 
loˇti⁄
->
ch™√l
 = 
µn
 / 
∑ge_ch™√l
;

95 
loˇti⁄
->
chù
 = (
µn
 % 
∑ge_ch™√l
Ë/ 
∑ge_chù
;

96 
loˇti⁄
->
dõ
 = ((
µn
 % 
∑ge_ch™√l
Ë% 
∑ge_chù
Ë/ 
∑ge_dõ
;

97 
loˇti⁄
->
∂™e
 = (((
µn
 % 
∑ge_ch™√l
Ë% 
∑ge_chù
Ë% 
∑ge_dõ
Ë/ 
∑ge_∂™e
;

98 
loˇti⁄
->
block
 = ((((
µn
 % 
∑ge_ch™√l
Ë% 
∑ge_chù
Ë% 
∑ge_dõ
Ë% 
∑ge_∂™e
Ë/ 
ssd
->
∑ømëî
->
∑ge_block
;

99 
loˇti⁄
->
∑ge
 = (((((
µn
 % 
∑ge_ch™√l
Ë% 
∑ge_chù
Ë% 
∑ge_dõ
Ë% 
∑ge_∂™e
Ë% 
ssd
->
∑ømëî
->
∑ge_block
) %

100 
ssd
->
∑ømëî
->
∑ge_block
;

102  
loˇti⁄
;

103 
	}
}

111 
	$föd_µn
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

112 
block
, 
∑ge
) {

113 
µn
 = 0;

114 
i
 = 0;

115 
∑ge_∂™e
 = 0, 
∑ge_dõ
 = 0, 
∑ge_chù
 = 0;

116 
∑ge_ch™√l
[100];

118 #ifde‡
DEBUG


125 
∑ge_∂™e
 = 
ssd
->
∑ømëî
->
∑ge_block
 * ssd->∑ømëî->
block_∂™e
;

126 
∑ge_dõ
 = 
∑ge_∂™e
 * 
ssd
->
∑ømëî
->
∂™e_dõ
;

127 
∑ge_chù
 = 
∑ge_dõ
 * 
ssd
->
∑ømëî
->
dõ_chù
;

128 
i
 < 
ssd
->
∑ømëî
->
ch™√l_numbî
) {

129 
∑ge_ch™√l
[
i
] = 
ssd
->
∑ømëî
->
chù_ch™√l
[i] * 
∑ge_chù
;

130 
i
++;

136 
i
 = 0;

137 
i
 < 
ch™√l
) {

138 
µn
 =Ö≤ + 
∑ge_ch™√l
[
i
];

139 
i
++;

141 
µn
 =Ö≤ + 
∑ge_chù
 * 
chù
 + 
∑ge_dõ
 * 
dõ
 + 
∑ge_∂™e
 * 
∂™e
 + 
block
 * 
ssd
->
∑ømëî
->
∑ge_block
 + 
∑ge
;

143  
µn
;

144 
	}
}

149 
	$£t_íåy_°©e
(
ssd_öfo
 *
ssd
, 
l¢
, 
size
) {

150 
ãmp
, 
°©e
, 
move
;

152 
ãmp
 = ~(0xfffffff‡<< 
size
);

153 
move
 = 
l¢
 % 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

154 
°©e
 = 
ãmp
 << 
move
;

156  
°©e
;

157 
	}
}

163 
ssd_öfo
 *
	$¥e_¥o˚ss_∑ge
(
ssd_öfo
 *
ssd
) {

164 
Ê
 = 0;

165 
devi˚
, 
l¢
, 
size
, 
›e
, 
Õn
, 
fuŒ_∑ge
;

166 
œrge°_l¢
, 
sub_size
, 
µn
, 
add_size
 = 0;

167 
i
 = 0, 
j
, 
k
;

168 
m≠_íåy_√w
, 
m≠_íåy_ﬁd
, 
modify
;

169 
Êag
 = 0;

170 
buf„r_ªque°
[200];

171 
loˇl
 *
loˇti⁄
;

172 
öt64_t
 
time
;

174 
l
, 
ãmp_chù_ch™√l
 ;

175 
ãmp_chù_ch™√l
 = 
ssd
->
∑ømëî
->
chù_num
 / ssd->∑ømëî->
ch™√l_numbî
;

177 
	`¥ötf
("\n");

178 
	`¥ötf
("beginÖre_process_page.................\n");

180 
ssd
->
åa˚fûe
 = 
	`f›í
(ssd->
åa˚fûíame
, "r");

181 i‡(
ssd
->
åa˚fûe
 =
NULL
)

183 
	`¥ötf
("theÅrace file can't open\n");

184  
NULL
;

187 
fuŒ_∑ge
 = ~(0xfffffff‡<< (
ssd
->
∑ømëî
->
sub∑ge_∑ge
));

189 
ssd
->
‹igöÆ_tŸÆ_∑ges_numbî
 = (ssd->
∑ømëî
->
chù_num
 * ssd->∑ømëî->
dõ_chù
 * ssd->∑ømëî->
∂™e_dõ
 *ssd->∑ømëî->
block_∂™e
 * ssd->∑ømëî->
∑ge_block
);

190 
ssd
->
a·î_¥e_¥o˚ss_∑ges_numbî
 = ssd->
‹igöÆ_tŸÆ_∑ges_numbî
 * (1 - ssd->
∑ømëî
->
ovî¥ovide
);

192 
œrge°_l¢
 = (Ë((
ssd
->
∑ømëî
->
chù_num
 * ssd->∑ømëî->
dõ_chù
 * ssd->∑ømëî->
∂™e_dõ
 *

193 
ssd
->
∑ømëî
->
block_∂™e
 * ssd->∑ømëî->
∑ge_block
 *

194 
ssd
->
∑ømëî
->
sub∑ge_∑ge
Ë* (1 - ssd->∑ømëî->
ovî¥ovide
));

196 
	`fgës
(
buf„r_ªque°
, 200, 
ssd
->
åa˚fûe
)) {

197 
	`ssˇnf
(
buf„r_ªque°
, "%Œd %d %d %d %d", &
time
, &
devi˚
, &
l¢
, &
size
, &
›e
);

198 
Ê
++;

199 
	`åa˚_as£π
(
time
, 
devi˚
, 
l¢
, 
size
, 
›e
);

201 
add_size
 = 0;

203 i‡(
›e
 == 1)

205 
add_size
 < 
size
) {

206 
l¢
 =Ü¢ % 
œrge°_l¢
;

207 
sub_size
 = 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 - (
l¢
 % ssd->parameter->subpage_page);

208 i‡(
add_size
 + 
sub_size
 >=

209 
size
)

211 
sub_size
 = 
size
 - 
add_size
;

212 
add_size
 +
sub_size
;

215 i‡((
sub_size
 > 
ssd
->
∑ømëî
->
sub∑ge_∑ge
) ||

216 (
add_size
 > 
size
))

218 
	`¥ötf
("¥e_¥o˚s†sub_size:%d\n", 
sub_size
);

227 
Õn
 = 
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

228 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
 == 0)

234 
µn
 = 
	`gë_µn_f‹_¥e_¥o˚ss
(
ssd
, 
l¢
);

235 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, 
µn
);

236 
ssd
->
¥ogøm_cou¡
++;

237 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
¥ogøm_cou¡
++;

238 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
¥ogøm_cou¡
++;

239 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
 = 
µn
;

240 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
 = 
	`£t_íåy_°©e
(ssd, 
l¢
, 
sub_size
);

241 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
Õn
 =Üpn;

242 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
vÆid_°©e
 = ssd->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
;

243 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
‰ì_°©e
 = (

244 (~
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
Ë& 
fuŒ_∑ge
);

246 
	`‰ì
(
loˇti⁄
);

247 
loˇti⁄
 = 
NULL
;

249 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
 > 0)

251 
m≠_íåy_√w
 = 
	`£t_íåy_°©e
(
ssd
, 
l¢
, 
sub_size
);

252 
m≠_íåy_ﬁd
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
;

253 
modify
 = 
m≠_íåy_√w
 | 
m≠_íåy_ﬁd
;

254 
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
;

255 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, 
µn
);

257 
ssd
->
¥ogøm_cou¡
++;

258 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
¥ogøm_cou¡
++;

259 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
¥ogøm_cou¡
++;

260 
ssd
->
døm
->
m≠
->
m≠_íåy
[
l¢
 / ssd->
∑ømëî
->
sub∑ge_∑ge
].
°©e
 = 
modify
;

261 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
vÆid_°©e
 = 
modify
;

262 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
‰ì_°©e
 = (

263 (~
modify
Ë& 
fuŒ_∑ge
);

265 
	`‰ì
(
loˇti⁄
);

266 
loˇti⁄
 = 
NULL
;

268 
l¢
 =Ü¢ + 
sub_size
;

269 
add_size
 +
sub_size
;

274 
	`¥ötf
("\n");

275 
	`¥ötf
("pre_process is complete!\n");

277 
	`f˛o£
(
ssd
->
åa˚fûe
);

279 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++){

280 
l
 = 0;Ü < 
ãmp_chù_ch™√l
;Ü++){

281 
j
 = 0; j < 
ssd
->
∑ømëî
->
dõ_chù
; j++){

282 
k
 = 0; k < 
ssd
->
∑ømëî
->
∂™e_dõ
; k++){

283 
	`Ârötf
(
ssd
->
ouçutfûe
, "ch™√»%d, chù:%d, dõ:%d,Öœ√:%d havê‰ìÖage: %d\n", 
i
, 
l
, 
j
, 
k
,

284 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
l
].
dõ_hód
[
j
].
∂™e_hód
[
k
].
‰ì_∑ge
);

285 
ssd
->
a·î_¥e_¥o˚s£_™d_aged_∑ges_numbî
 +ssd->
ch™√l_hód
[
i
].
chù_hód
[
l
].
dõ_hód
[
j
].
∂™e_hód
[
k
].
‰ì_∑ge
;

286 
	`fÊush
(
ssd
->
ouçutfûe
);

291  
ssd
;

292 
	}
}

298 
	$gë_µn_f‹_¥e_¥o˚ss
(
ssd_öfo
 *
ssd
, 
l¢
) {

299 
ch™√l
 = 0, 
chù
 = 0, 
dõ
 = 0, 
∂™e
 = 0;

300 
µn
, 
Õn
;

301 
a˘ive_block
;

302 
ch™√l_num
 = 0, 
chù_num
 = 0, 
dõ_num
 = 0, 
∂™e_num
 = 0;

304 #ifde‡
DEBUG


305 
	`¥ötf
("enter get_psn_for_pre_process\n");

308 
ch™√l_num
 = 
ssd
->
∑ømëî
->
ch™√l_numbî
;

309 
chù_num
 = 
ssd
->
∑ømëî
->
chù_ch™√l
[0];

310 
dõ_num
 = 
ssd
->
∑ømëî
->
dõ_chù
;

311 
∂™e_num
 = 
ssd
->
∑ømëî
->
∂™e_dõ
;

312 
Õn
 = 
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

314 i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 0)

316 i‡(
ssd
->
∑ømëî
->
dy«mic_Æloˇti⁄
 ==

319 
ch™√l
 = 
ssd
->
tokí
;

320 
ssd
->
tokí
 = (ssd->tokí + 1Ë% ssd->
∑ømëî
->
ch™√l_numbî
;

321 
chù
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
;

322 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 = (
chù
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[0];

323 
dõ
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

324 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

325 
∂™e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

326 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = (
∂™e
 + 1Ë% ssd->
∑ømëî
->
∂™e_dõ
;

327 } i‡(
ssd
->
∑ømëî
->
dy«mic_Æloˇti⁄
 ==

330 
ch™√l
 = 
Õn
 % 
ssd
->
∑ømëî
->
ch™√l_numbî
;

331 
chù
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
;

332 
ssd
->
ch™√l_hód
[
ch™√l
].
tokí
 = (
chù
 + 1Ë% ssd->
∑ømëî
->
chù_ch™√l
[0];

333 
dõ
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
;

334 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
tokí
 = (
dõ
 + 1Ë% ssd->
∑ømëî
->
dõ_chù
;

335 
∂™e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
;

336 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
tokí
 = (
∂™e
 + 1Ë% ssd->
∑ømëî
->
∂™e_dõ
;

338 } i‡(
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 1)

340 
ssd
->
∑ømëî
->
°©ic_Æloˇti⁄
) {

343 
ch™√l
 = (
Õn
 / (
∂™e_num
 * 
dõ_num
 * 
chù_num
)Ë% 
ch™√l_num
;

344 
chù
 = 
Õn
 % 
chù_num
;

345 
dõ
 = (
Õn
 / 
chù_num
Ë% 
dõ_num
;

346 
∂™e
 = (
Õn
 / (
dõ_num
 * 
chù_num
)Ë% 
∂™e_num
;

350 
ch™√l
 = 
Õn
 % 
ch™√l_num
;

351 
chù
 = (
Õn
 / 
ch™√l_num
Ë% 
chù_num
;

352 
dõ
 = (
Õn
 / (
chù_num
 * 
ch™√l_num
)Ë% 
dõ_num
;

353 
∂™e
 = (
Õn
 / (
dõ_num
 * 
chù_num
 * 
ch™√l_num
)Ë% 
∂™e_num
;

358 
ch™√l
 = 
Õn
 % 
ch™√l_num
;

359 
chù
 = (
Õn
 / (
∂™e_num
 * 
ch™√l_num
)Ë% 
chù_num
;

360 
dõ
 = (
Õn
 / (
∂™e_num
 * 
chù_num
 * 
ch™√l_num
)Ë% 
dõ_num
;

361 
∂™e
 = (
Õn
 / 
ch™√l_num
Ë% 
∂™e_num
;

365 
ch™√l
 = 
Õn
 % 
ch™√l_num
;

366 
chù
 = (
Õn
 / (
dõ_num
 * 
ch™√l_num
)Ë% 
chù_num
;

367 
dõ
 = (
Õn
 / 
ch™√l_num
Ë% 
dõ_num
;

368 
∂™e
 = (
Õn
 / (
dõ_num
 * 
chù_num
 * 
ch™√l_num
)Ë% 
∂™e_num
;

372 
ch™√l
 = 
Õn
 % 
ch™√l_num
;

373 
chù
 = (
Õn
 / (
∂™e_num
 * 
dõ_num
 * 
ch™√l_num
)Ë% 
chù_num
;

374 
dõ
 = (
Õn
 / (
∂™e_num
 * 
ch™√l_num
)Ë% 
dõ_num
;

375 
∂™e
 = (
Õn
 / 
ch™√l_num
Ë% 
∂™e_num
;

380 
ch™√l
 = 
Õn
 % 
ch™√l_num
;

381 
chù
 = (
Õn
 / (
∂™e_num
 * 
dõ_num
 * 
ch™√l_num
)Ë% 
chù_num
;

382 
dõ
 = (
Õn
 / 
ch™√l_num
Ë% 
dõ_num
;

383 
∂™e
 = (
Õn
 / (
dõ_num
 * 
ch™√l_num
)Ë% 
∂™e_num
;

396 #ifde‡
DEBUG


397 
	`¥ötf
("™d gë ch™√»%d,chù %d, dõ %d,Öœ√ %d\n", 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

400 i‡(
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
Ë=
FAILURE
) {

401 
	`¥ötf
("theÑead operation isÉxpandÅhe capacity of SSD\n");

404 
a˘ive_block
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].active_block;

405 i‡(
	`wrôe_∑ge
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
a˘ive_block
, &
µn
Ë=
ERROR
) {

409  
µn
;

410 
	}
}

417 
ssd_öfo
 *

418 
	$gë_µn
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

419 
sub_ªque°
 *
sub
) {

420 
ﬁd_µn
 = -1;

421 
µn
, 
Õn
, 
fuŒ_∑ge
;

422 
a˘ive_block
;

423 
block
;

424 
∑ge
, 
Êag
 = 0, 
Êag1
 = 0;

425 
ﬁd_°©e
 = 0, 
°©e
 = 0, 
c›y_sub∑ge
 = 0;

426 
loˇl
 *
loˇti⁄
;

427 
dúe˘_îa£
 *
dúe˘_îa£_node
, *
√w_dúe˘_îa£
;

428 
gc_›î©i⁄
 *
gc_node
;

430 
thªshﬁd_∑ge
 = 0;

431 
i
 = 0, 
j
 = 0, 
k
 = 0, 
l
 = 0, 
m
 = 0, 
n
 = 0;

433 #ifde‡
DEBUG


434 
	`¥ötf
("íã∏gë_µn,ch™√l:%d, chù:%d, dõ:%d,Öœ√:%d\n",
ch™√l
,
chù
,
dõ
,
∂™e
);

437 
fuŒ_∑ge
 = ~(0xfffffff‡<< (
ssd
->
∑ømëî
->
sub∑ge_∑ge
));

438 
Õn
 = 
sub
->lpn;

444 i‡(
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
Ë=
FAILURE
) {

445 
	`¥ötf
("ERROR :thîêi†nÿ‰ìÖagêö ch™√l:%d, chù:%d, dõ:%d,Öœ√:%d\n", 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

446  
ssd
;

449 
a˘ive_block
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].active_block;

450 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
œ°_wrôe_∑ge
++;

451 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
‰ì_∑ge_num
--;

453 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
œ°_wrôe_∑ge
 >

455 
	`¥ötf
("error!ÅheÜast writeÖageÜargerÅhan 64!!\n");

459 
block
 = 
a˘ive_block
;

460 
∑ge
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
œ°_wrôe_∑ge
;

462 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
 ==

465 i‡(
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
 != 0) {

466 
	`¥ötf
("newÜogical, Error in get_ppn()\n");

468 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
 = 
	`föd_µn
(ssd, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
∑ge
);

469 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
 = 
sub
->state;

472 
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
;

473 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, 
µn
);

474 i‡(
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
Õn
 !=

475 
Õn
) {

476 
	`¥ötf
("\nch™gêlogiˇl,Eº‹ i¿gë_µn(), m≠èbÀ.µ¿i†%d,ÖagêßvedÖ≤ i†%d, wr⁄gÜoˇti⁄ ch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d,Öagê%d\n", 
µn
,
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
Õn
,Üocation->channel,Üocation->chip,Üocation->die,Üocation->plane,Üocation->block,Üocation->page);

479 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
vÆid_°©e
 = 0;

480 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
‰ì_°©e
 = 0;

481 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
Õn
 = 0;

482 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
övÆid_∑ge_num
++;

487 i‡(
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
övÆid_∑ge_num
 ==

488 
ssd
->
∑ømëî
->
∑ge_block
) {

489 
√w_dúe˘_îa£
 = (
dúe˘_îa£
 *Ë
	`mÆloc
((direct_erase));

490 
	`Æloc_as£π
(
√w_dúe˘_îa£
, "new_direct_erase");

491 
	`mem£t
(
√w_dúe˘_îa£
, 0, (
dúe˘_îa£
));

493 
√w_dúe˘_îa£
->
block
 = 
loˇti⁄
->block;

494 
√w_dúe˘_îa£
->
√xt_node
 = 
NULL
;

495 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
;

496 i‡(
dúe˘_îa£_node
 =
NULL
) {

497 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
 = 
√w_dúe˘_îa£
;

499 
√w_dúe˘_îa£
->
√xt_node
 = 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
;

500 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
îa£_node
 = 
√w_dúe˘_îa£
;

504 
	`‰ì
(
loˇti⁄
);

505 
loˇti⁄
 = 
NULL
;

506 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
 = 
	`föd_µn
(ssd, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
∑ge
);

507 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
 = (ssd->døm->m≠->m≠_íåy[Õn].°©ê| 
sub
->state);

511 
sub
->
µn
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
;

512 
sub
->
loˇti⁄
->
ch™√l
 = channel;

513 
sub
->
loˇti⁄
->
chù
 = chip;

514 
sub
->
loˇti⁄
->
dõ
 = die;

515 
sub
->
loˇti⁄
->
∂™e
 =Ölane;

516 
sub
->
loˇti⁄
->
block
 = 
a˘ive_block
;

517 
sub
->
loˇti⁄
->
∑ge
 =Öage;

519 
ssd
->
¥ogøm_cou¡
++;

520 
ssd
->
ch™√l_hód
[
ch™√l
].
¥ogøm_cou¡
++;

521 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
¥ogøm_cou¡
++;

522 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
‰ì_∑ge
--;

523 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
∑ge_hód
[
∑ge
].
Õn
 =Üpn;

524 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
∑ge_hód
[
∑ge
].
vÆid_°©e
 = 
sub
->
°©e
;

525 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
∑ge_hód
[
∑ge
].
‰ì_°©e
 = (

526 (~(
sub
->
°©e
)Ë& 
fuŒ_∑ge
);

527 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
∑ge_hód
[
∑ge
].
wrôãn_cou¡
++;

528 
ssd
->
wrôe_Êash_cou¡
++;

530 i‡(
ssd
->
∑ømëî
->
a˘ive_wrôe
 ==

534 
thªshﬁd_∑ge
 = (
ssd
->
∑ømëî
->
∑ge_block
Ë* (ssd->∑ømëî->
block_∂™e
Ë* (ssd->∑ømëî->
gc_h¨d_thªshﬁd
);

535 #ifde‡
DEBUG


537 
	`¥ötf
("opps, must be here!! forÇoáctive_write.now is inÇoáctive_write strategy\n");

541 
	`¥ötf
("whíÇ‹mÆ wrôêevîytimêu£ o√Öagê wû»ªp‹à∂™e'†‰ì_∑gêa†fﬁlow: ch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d,Öagê%d, fªe_∑gê%d\n", 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
∑ge
, 
ssd
->
ch™√l_hód
[ch™√l].
chù_hód
[chù].
dõ_hód
[dõ].
∂™e_hód
[∂™e].
‰ì_∑ge
);

545 if(
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
 !
NULL
){

547 
	`¥ötf
("lxc, here will stopÅo moveáhead,willÑeturn. in channel GC\n");

548  
ssd
;

551 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
‰ì_∑ge
 <

554 
gc_node
 = (
gc_›î©i⁄
 *Ë
	`mÆloc
((gc_operation));

555 
	`Æloc_as£π
(
gc_node
, "gc_node");

556 
	`mem£t
(
gc_node
, 0, (
gc_›î©i⁄
));

558 
gc_node
->
√xt_node
 = 
NULL
;

559 
gc_node
->
chù
 = chip;

560 
gc_node
->
dõ
 = die;

561 
gc_node
->
∂™e
 =Ölane;

562 
gc_node
->
block
 = 0xffffffff;

563 
gc_node
->
∑ge
 = 0;

564 
gc_node
->
°©e
 = 
GC_WAIT
;

565 
gc_node
->
¥i‹ôy
 = 
GC_UNINTERRUPT
;

566 
gc_node
->
√xt_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
;

570 
gc_node
->
c›y_∑ge_numbî
 = -1;

571 
gc_node
->
c›y_vÆid_numbî
 = -1;

572 
gc_node
->
pos_ö_c›y
 = -1;

573 
gc_node
->
ªad
 = 1;

574 
gc_node
->
wrôe
 = 0;

575 
gc_node
->
îa£
 = -1;

576 
gc_node
->
vi˘im_block_numbî
 = -1;

577 
gc_node
->
gc_ªad_ö√r
 = -1;

578 
gc_node
->
gc_wrôe_ö√r
 = -1;

579 
gc_node
->
ªad_wrôe_íd
 = -1;

580 
gc_node
->
vi˘im_block_‰ì∑ge_°©i°ic
 = -1;

581 
gc_node
->
œ°_∑ge_ö_vi˘im_dól
 = -1;

582 
gc_node
->
chù_√xt_¥edi˘_time_diff
 = 0;

583 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
 = 
gc_node
;

584 
ssd
->
gc_ªque°
++;

587 
	`¥ötf
("GC will happenát once!\n");

588 #ifde‡
DEBUGONLYGC


589 
	`¥ötf
("GC happenÇow!\n");

590 
	`¥ötf_gc_node_öf‹m©i⁄
 (
gc_node
);

595 #ifde‡
DEBUG


597 
	`¥ötf
("n‹mÆ gë_µ¿'†gc_nodêc⁄ã¡,%x\n", 
ssd
->
gc_ªque°
);

598 
	`¥ötf_ssd_gc_node
(
ssd
);

604  
ssd
;

605 
	}
}

612 
	$gë_µn_f‹_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
) {

613 
µn
;

614 
a˘ive_block
, 
block
, 
∑ge
;

616 #ifde‡
DEBUG


617 
	`¥ötf
("íã∏gë_µn_f‹_gc,ch™√l:%d, chù:%d, dõ:%d,Öœ√:%d\n",
ch™√l
,
chù
,
dõ
,
∂™e
);

620 i‡(
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
Ë!
SUCCESS
) {

621 
	`¥ötf
("\n\nlxc Error int get_ppn_for_gc().\n");

625 
a˘ive_block
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].active_block;

627 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
œ°_wrôe_∑ge
++;

628 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
‰ì_∑ge_num
--;

630 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
œ°_wrôe_∑ge
 >

632 
	`¥ötf
("error!ÅheÜast writeÖageÜargerÅhan 64!!\n");

636 
block
 = 
a˘ive_block
;

637 
∑ge
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
œ°_wrôe_∑ge
;

639 
µn
 = 
	`föd_µn
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
∑ge
);

641 
ssd
->
¥ogøm_cou¡
++;

642 
ssd
->
ch™√l_hód
[
ch™√l
].
¥ogøm_cou¡
++;

643 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
¥ogøm_cou¡
++;

644 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
‰ì_∑ge
--;

645 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
a˘ive_block
].
∑ge_hód
[
∑ge
].
wrôãn_cou¡
++;

646 
ssd
->
wrôe_Êash_cou¡
++;

647 #ifde‡
DEBUGONLYGC


648 
	`¥ötf
("whí g¯gëÅhê√wÖ≤, ch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d\n", 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
);

650  
µn
;

652 
	}
}

661 
Sètus


662 
	$îa£_›î©i⁄
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

663 
block
) {

664 
i
 = 0;

665 #ifde‡
DEBUG


666 
	`¥ötf
("nowÉø£ ch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d \n", 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
);

669 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
‰ì_∑ge_num
 = ssd->
∑ømëî
->
∑ge_block
;

670 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
övÆid_∑ge_num
 = 0;

671 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
œ°_wrôe_∑ge
 = -1;

672 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
îa£_cou¡
++;

673 
i
 = 0; i < 
ssd
->
∑ømëî
->
∑ge_block
; i++) {

674 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
i
].
‰ì_°©e
 = 
PG_SUB
;

675 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
i
].
vÆid_°©e
 = 0;

676 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
block
].
∑ge_hód
[
i
].
Õn
 = -1;

678 
ssd
->
îa£_cou¡
++;

679 
ssd
->
ch™√l_hód
[
ch™√l
].
îa£_cou¡
++;

680 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
îa£_cou¡
++;

681 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
‰ì_∑ge
 +ssd->
∑ømëî
->
∑ge_block
;

683  
SUCCESS
;

685 
	}
}

691 
Sètus


692 
	$îa£_∂™es
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ1
, 
∂™e1
,

693 
comm™d
) {

694 
dõ
 = 0;

695 
∂™e
 = 0;

696 
block
 = 0;

697 
dúe˘_îa£
 *
dúe˘_îa£_node
 = 
NULL
;

698 
block0
 = 0xffffffff;

699 
block1
 = 0;

701 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ1
].
∂™e_hód
[
∂™e1
].
îa£_node
 =
NULL
) ||

702 ((
comm™d
 !
INTERLEAVE_TWO_PLANE
Ë&& (comm™d !
INTERLEAVE
Ë&& (comm™d !
TWO_PLANE
) &&

703 (
comm™d
 !
NORMAL
)))

705  
ERROR
;

712 
block1
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ1
].
∂™e_hód
[
∂™e1
].
îa£_node
->
block
;

714 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_TRANSFER
;

715 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

716 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

718 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_ERASE_BUSY
;

719 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

720 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

722 i‡(
comm™d
 =
INTERLEAVE_TWO_PLANE
)

724 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

725 
block0
 = 0xffffffff;

726 i‡(
dõ
 =
dõ1
) {

727 
block0
 = 
block1
;

729 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

730 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
;

731 i‡(
dúe˘_îa£_node
 !
NULL
) {

733 
block
 = 
dúe˘_îa£_node
->block;

735 i‡(
block0
 == 0xffffffff) {

736 
block0
 = 
block
;

738 i‡(
block
 !
block0
) {

743 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
 = 
dúe˘_îa£_node
->
√xt_node
;

744 
	`îa£_›î©i⁄
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
);

745 
	`‰ì
(
dúe˘_îa£_node
);

746 
dúe˘_îa£_node
 = 
NULL
;

747 
ssd
->
dúe˘_îa£_cou¡
++;

753 
ssd
->
öãæóve_m∂™e_îa£_cou¡
++;

754 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 =

755 
ssd
->
cuºít_time
 + 18 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

756 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWB
;

757 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

758 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 - 9 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

759 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
;

761 } i‡(
comm™d
 =
INTERLEAVE
)

763 
dõ
 = 0; dõ < 
ssd
->
∑ømëî
->
dõ_chù
; die++) {

764 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

765 i‡(
dõ
 =
dõ1
) {

766 
∂™e
 = 
∂™e1
;

768 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
;

769 i‡(
dúe˘_îa£_node
 !
NULL
) {

770 
block
 = 
dúe˘_îa£_node
->block;

771 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
 = 
dúe˘_îa£_node
->
√xt_node
;

772 
	`îa£_›î©i⁄
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
);

773 
	`‰ì
(
dúe˘_îa£_node
);

774 
dúe˘_îa£_node
 = 
NULL
;

775 
ssd
->
dúe˘_îa£_cou¡
++;

780 
ssd
->
öãæóve_îa£_cou¡
++;

781 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 =

782 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

783 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

784 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
;

785 } i‡(
comm™d
 =
TWO_PLANE
)

788 
∂™e
 = 0;Öœ√ < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ölane++) {

789 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ1
].
∂™e_hód
[
∂™e
].
îa£_node
;

790 i‡((
dúe˘_îa£_node
 !
NULL
)) {

791 
block
 = 
dúe˘_îa£_node
->block;

792 i‡(
block
 =
block1
) {

793 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ1
].
∂™e_hód
[
∂™e
].
îa£_node
 = 
dúe˘_îa£_node
->
√xt_node
;

794 
	`îa£_›î©i⁄
(
ssd
, 
ch™√l
, 
chù
, 
dõ1
, 
∂™e
, 
block
);

795 
	`‰ì
(
dúe˘_îa£_node
);

796 
dúe˘_îa£_node
 = 
NULL
;

797 
ssd
->
dúe˘_îa£_cou¡
++;

802 
ssd
->
m∂™e_îa£_c⁄ut
++;

803 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 =

804 
ssd
->
cuºít_time
 + 14 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

805 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

806 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
;

807 } i‡(
comm™d
 =
NORMAL
)

809 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ1
].
∂™e_hód
[
∂™e1
].
îa£_node
;

810 
block
 = 
dúe˘_îa£_node
->block;

811 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ1
].
∂™e_hód
[
∂™e1
].
îa£_node
 = 
dúe˘_îa£_node
->
√xt_node
;

812 
	`‰ì
(
dúe˘_îa£_node
);

813 
dúe˘_îa£_node
 = 
NULL
;

814 
	`îa£_›î©i⁄
(
ssd
, 
ch™√l
, 
chù
, 
dõ1
, 
∂™e1
, 
block
);

816 
ssd
->
dúe˘_îa£_cou¡
++;

817 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 =

818 
ssd
->
cuºít_time
 + 5 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

819 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

820 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWB
 +

821 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
;

823  
ERROR
;

826 
dúe˘_îa£_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ1
].
∂™e_hód
[
∂™e1
].
îa£_node
;

828 i‡(((
dúe˘_îa£_node
Ë!
NULL
Ë&& (dúe˘_îa£_node->
block
 =
block1
)) {

829  
FAILURE
;

831  
SUCCESS
;

833 
	}
}

848 
	$gc_dúe˘_îa£
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
) {

849 
lv_dõ
 = 0, 
lv_∂™e
 = 0;

850 
öãæóvî_Êag
 = 
FALSE
, 
muût_∂™e_Êag
 = FALSE;

851 
n‹mÆ_îa£_Êag
 = 
TRUE
;

853 
dúe˘_îa£
 *
dúe˘_îa£_node1
 = 
NULL
;

854 
dúe˘_îa£
 *
dúe˘_îa£_node2
 = 
NULL
;

856 
dúe˘_îa£_node1
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
;

857 i‡(
dúe˘_îa£_node1
 =
NULL
) {

858  
FAILURE
;

865 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) == AD_TWOPLANE) {

866 
lv_∂™e
 = 0;Üv_∂™ê< 
ssd
->
∑ømëî
->
∂™e_dõ
;Üv_plane++) {

867 
dúe˘_îa£_node2
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
;

868 i‡((
lv_∂™e
 !
∂™e
Ë&& (
dúe˘_îa£_node2
 !
NULL
)) {

869 i‡((
dúe˘_îa£_node1
->
block
Ë=(
dúe˘_îa£_node2
->block)) {

870 
muût_∂™e_Êag
 = 
TRUE
;

881 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE) {

882 
lv_dõ
 = 0;Üv_dõ < 
ssd
->
∑ømëî
->
dõ_chù
;Üv_die++) {

883 i‡(
lv_dõ
 !
dõ
) {

884 
lv_∂™e
 = 0;Üv_∂™ê< 
ssd
->
∑ømëî
->
∂™e_dõ
;Üv_plane++) {

885 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
îa£_node
 !
NULL
) {

886 
öãæóvî_Êag
 = 
TRUE
;

891 i‡(
öãæóvî_Êag
 =
TRUE
) {

903 i‡((
muût_∂™e_Êag
 =
TRUE
Ë&& (
öãæóvî_Êag
 == TRUE) &&

904 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) == AD_TWOPLANE) &&

905 ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE)) {

906 i‡(
	`îa£_∂™es
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
INTERLEAVE_TWO_PLANE
Ë=
SUCCESS
) {

907  
SUCCESS
;

909 } i‡((
öãæóvî_Êag
 =
TRUE
Ë&& ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_INTERLEAVE
) == AD_INTERLEAVE)) {

910 i‡(
	`îa£_∂™es
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
INTERLEAVE
Ë=
SUCCESS
) {

911  
SUCCESS
;

913 } i‡((
muût_∂™e_Êag
 =
TRUE
Ë&& ((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_TWOPLANE
) == AD_TWOPLANE)) {

914 i‡(
	`îa£_∂™es
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
TWO_PLANE
Ë=
SUCCESS
) {

915  
SUCCESS
;

919 i‡((
n‹mÆ_îa£_Êag
 ==

920 
TRUE
))

922 i‡(
	`îa£_∂™es
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
NORMAL
Ë=
SUCCESS
) {

923  
SUCCESS
;

925  
FAILURE
;

928  
SUCCESS
;

929 
	}
}

932 
Sètus
 
	$move_∑ge
(
ssd_öfo
 *
ssd
, 
loˇl
 *
loˇti⁄
, *
å™s„r_size
) {

933 
loˇl
 *
√w_loˇti⁄
 = 
NULL
;

934 
‰ì_°©e
 = 0, 
vÆid_°©e
 = 0;

935 
Õn
 = 0, 
ﬁd_µn
 = 0, 
µn
 = 0;

937 
Õn
 = 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].lpn;

938 
vÆid_°©e
 = 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].valid_state;

939 
‰ì_°©e
 = 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].free_state;

940 
ﬁd_µn
 = 
	`föd_µn
(
ssd
, 
loˇti⁄
->
ch™√l
,Üoˇti⁄->
chù
,Üoˇti⁄->
dõ
,Üoˇti⁄->
∂™e
,Üoˇti⁄->
block
,

941 
loˇti⁄
->
∑ge
);

942 
µn
 = 
	`gë_µn_f‹_gc
(
ssd
, 
loˇti⁄
->
ch™√l
,Üoˇti⁄->
chù
,Üoˇti⁄->
dõ
,

943 
loˇti⁄
->
∂™e
);

945 
√w_loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
,

946 
µn
);

948 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_COPYBACK
) == AD_COPYBACK) {

949 i‡(
ssd
->
∑ømëî
->
gªed_CB_ad
 ==

952 
ssd
->
c›y_back_cou¡
++;

953 
ssd
->
gc_c›y_back
++;

954 
ﬁd_µn
 % 2 !
µn
 % 2) {

955 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
‰ì_°©e
 = 0;

956 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
Õn
 = 0;

957 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
vÆid_°©e
 = 0;

958 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
övÆid_∑ge_num
++;

960 
	`‰ì
(
√w_loˇti⁄
);

961 
√w_loˇti⁄
 = 
NULL
;

963 
µn
 = 
	`gë_µn_f‹_gc
(
ssd
, 
loˇti⁄
->
ch™√l
,Üoˇti⁄->
chù
,Üoˇti⁄->
dõ
,

964 
loˇti⁄
->
∂™e
);

965 
ssd
->
¥ogøm_cou¡
--;

966 
ssd
->
wrôe_Êash_cou¡
--;

967 
ssd
->
wa°e_∑ge_cou¡
++;

969 i‡(
√w_loˇti⁄
 =
NULL
) {

970 
√w_loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, 
µn
);

973 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
‰ì_°©e
 = free_state;

974 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
Õn
 =Üpn;

975 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
vÆid_°©e
 = valid_state;

977 i‡(
ﬁd_µn
 % 2 !
µn
 % 2) {

978 (*
å™s„r_size
Ë+
	`size
(
vÆid_°©e
);

981 
ssd
->
c›y_back_cou¡
++;

982 
ssd
->
gc_c›y_back
++;

986 #ifde‡
DEBUGONLYGC


987 
	`¥ötf
("move_page hasÇo copyback operation\n");

989 (*
å™s„r_size
Ë+
	`size
(
vÆid_°©e
);

991 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
‰ì_°©e
 = free_state;

992 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
Õn
 =Üpn;

993 
ssd
->
ch™√l_hód
[
√w_loˇti⁄
->
ch™√l
].
chù_hód
[√w_loˇti⁄->
chù
].
dõ_hód
[√w_loˇti⁄->
dõ
].
∂™e_hód
[√w_loˇti⁄->
∂™e
].
blk_hód
[√w_loˇti⁄->
block
].
∑ge_hód
[√w_loˇti⁄->
∑ge
].
vÆid_°©e
 = valid_state;

996 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
‰ì_°©e
 = 0;

997 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
Õn
 = 0;

998 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
∑ge_hód
[loˇti⁄->
∑ge
].
vÆid_°©e
 = 0;

999 
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
dõ_hód
[loˇti⁄->
dõ
].
∂™e_hód
[loˇti⁄->
∂™e
].
blk_hód
[loˇti⁄->
block
].
övÆid_∑ge_num
++;

1001 i‡(
ﬁd_µn
 =
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
)

1003 
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
≤
 = 
µn
;

1006 #ifde‡
DEBUGONLYGC


1007 
	`¥ötf
("ö GC, oldÜoˇti⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d,Öagê%d ch™gêtÿ√wÜoˇti⁄: ch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d,Öagê%d \n", 
loˇti⁄
->
ch™√l
,Üoˇti⁄->
chù
,Üoˇti⁄->
dõ
,Üoˇti⁄->
∂™e
,Üoˇti⁄->
block
,Üoˇti⁄->
∑ge
, 
√w_loˇti⁄
->channel,Çew_location->chip,Çew_location->die,Çew_location->plane,Çew_location->block,Çew_location->page );

1009 
	`‰ì
(
√w_loˇti⁄
);

1010 
√w_loˇti⁄
 = 
NULL
;

1012  
SUCCESS
;

1013 
	}
}

1118 
	$unöãºu±_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
) {

1119 
i
 = 0, 
övÆid_∑ge
 = 0;

1120 
block
, 
a˘ive_block
, 
å™s„r_size
, 
‰ì_∑ge
, 
∑ge_move_cou¡
 = 0;

1121 
loˇl
 *
loˇti⁄
 = 
NULL
;

1122 
tŸÆ_övÆid_∑ge_num
 = 0;

1124 
gc_›î©i⁄
 *
gc_node
 = 
NULL
;

1125 
gc_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
;

1126 
cuºít_°©e
 = 0, 
√xt_°©e
 = 0;

1127 
√xt_°©e_¥edi˘_time
 = 0;

1130 if(
ssd
->
debug_sign
 == 1){

1141 #ifde‡
DEBUG


1142 
	`¥ötf
("begin go into uninterrupt_gc\n");

1147 i‡(
gc_node
 !
NULL
) {

1148 #ifde‡
DEBUG


1149 
	`¥ötf
("gc must be unNULL sinceÅhis isÅhe channel gc.\n");

1152 
cuºít_°©e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
gc_node
->
chù
].current_state;

1153 
√xt_°©e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
gc_node
->
chù
].next_state;

1154 
√xt_°©e_¥edi˘_time
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
gc_node
->
chù
].next_state_predict_time;

1165 if(
gc_node
->
vi˘im_block_numbî
 == -1){

1166 i‡(
	`föd_a˘ive_block
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
) !=

1167 
SUCCESS
)

1169 
	`¥ötf
("\n\n Error in uninterrupt_gc().\n");

1170  
ERROR
;

1172 
a˘ive_block
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].active_block;

1174 
övÆid_∑ge
 = 0;

1175 
å™s„r_size
 = 0;

1176 
block
 = -1;

1177 
i
 = 0; i <

1178 
ssd
->
∑ømëî
->
block_∂™e
; 
i
++)

1180 
tŸÆ_övÆid_∑ge_num
 +
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
i
].
övÆid_∑ge_num
;

1181 i‡((
a˘ive_block
 !
i
) &&

1182 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
i
].
övÆid_∑ge_num
 >

1183 
övÆid_∑ge
)) {

1184 
övÆid_∑ge
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
i
].
övÆid_∑ge_num
;

1185 
block
 = 
i
;

1189 #ifde‡
DEBUGONLYGC


1190 
	`¥ötf
("evîyGC o∆y choo£ on˚ block f‹ vi˘im.thi†block i¿ ch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d, ha† invÆid_∑ge_num %d\n", 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
i
, 
övÆid_∑ge
);

1196 i‡(
block
 == -1) {

1199 
gc_node
->
vi˘im_block_numbî
 = 
block
;

1200 
gc_node
->
block
 = block;

1203 #ifde‡
DEBUGONLYGC


1204 
	`¥ötf_gc_node_öf‹m©i⁄
 (
gc_node
);

1210 i‡((
gc_node
->
ªad_wrôe_íd
 !0Ë&& ((
cuºít_°©e
 =
CHIP_IDLE
Ë|| ((
√xt_°©e
 =CHIP_IDLEË&& (
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
)))){

1213 if–(
gc_node
->
ªad
 =1Ë&& (gc_node->
wrôe
 =0Ë&& (gc_node->
gc_ªad_ö√r
 == -1)) {

1215 
gc_node
->
c›y_∑ge_numbî
 ++;

1216 #ifde‡
DEBUG


1217 
	`¥ötf
("hîêªad wû»begöáÇewÖage, sÿ∑gênumbî ++ ,thê√wÖagêi†%d\n",
gc_node
->
c›y_∑ge_numbî
);

1219 
i
 = 
gc_node
->
c›y_∑ge_numbî
; i <

1220 
ssd
->
∑ømëî
->
∑ge_block
; 
i
++ )

1224 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
gc_node
->
vi˘im_block_numbî
].
∑ge_hód
[
i
].
‰ì_°©e
 &

1225 
PG_SUB
) == 0xffffffff) {

1226 
gc_node
->
vi˘im_block_‰ì∑ge_°©i°ic
 ++;

1228 i‡(
gc_node
->
vi˘im_block_‰ì∑ge_°©i°ic
 != -1) {

1229 
	`¥ötf
("\¡oÿmuch fªê∑ge. \à%d\à.%d\t%d\t%d\t%d\t\n", 
gc_node
->
vi˘im_block_‰ì∑ge_°©i°ic
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

1231 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
gc_node
->
vi˘im_block_numbî
].
∑ge_hód
[
i
].
vÆid_°©e
 >

1249 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_GC
;

1250 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

1251 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

1252 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_GC_RW_BUSY
;

1253 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1254 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_GC_RW_BUSY
;

1255 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + (7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
);

1256 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->channel_head[channel].next_state_predict_time ;

1259 
gc_node
->
c›y_vÆid_numbî
 = 
i
;

1260 
gc_node
->
c›y_∑ge_numbî
 = gc_node->
c›y_vÆid_numbî
 ;

1261 
gc_node
->
gc_ªad_ö√r
 = 0;

1262 #ifde‡
DEBUG


1263 
	`¥ötf
("evîytimêthêvi˘im ch™√»%d,chù %d, dõ %d,Öœ√ %d, block %dÖagê%d, , vÆid_°©ê%d\n",
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
block
, 
i
, 
ssd
->
ch™√l_hód
[ch™√l].
chù_hód
[chù].
dõ_hód
[dõ].
∂™e_hód
[∂™e].
blk_hód
[
gc_node
->
vi˘im_block_numbî
].
∑ge_hód
[i].
vÆid_°©e
);

1266 if(
i
 =((
ssd
->
∑ømëî
->
∑ge_block
) - 1)){

1267 
gc_node
->
œ°_∑ge_ö_vi˘im_dól
 = 0;

1278 if(
i
 =((
ssd
->
∑ømëî
->
∑ge_block
) - 1)){

1281 
gc_node
->
ªad_wrôe_íd
 = 0;

1282 #ifde‡
DEBUG


1283 
	`¥ötf
("òi†%d, món†thêœ° fªïage,d⁄'àdÿc›yback,Çow gÿtÿthêbegöög o‡îa£\n", 
i
);

1295 if–(
gc_node
->
ªad
 =0Ë&& (gc_node->
wrôe
 =1Ë&& (gc_node->
gc_wrôe_ö√r
 == -1)) {

1296 #ifde‡
DEBUG


1297 
	`¥ötf
("g¯wrôêpha£, wrôêôî©i⁄†i†%d,\n", 
gc_node
->
wrôe
);

1299 
i
 = 
gc_node
->
c›y_∑ge_numbî
;

1302 #ifde‡
DEBUG


1303 
	`¥ötf
("GCwrôêch™√»%d, chù %d, dõ %d,Öœ√ %d, block %d,Öagê%d, vÆid_°©êi†%d\n", 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
gc_node
->
vi˘im_block_numbî
, gc_node->
c›y_vÆid_numbî
,
ssd
->
ch™√l_hód
[ch™√l].
chù_hód
[chù].
dõ_hód
[dõ].
∂™e_hód
[∂™e].
blk_hód
[gc_node->vi˘im_block_numbî].
∑ge_hód
[gc_node->c›y_vÆid_numbî].
vÆid_°©e
 );

1307 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
gc_node
->
vi˘im_block_numbî
].
∑ge_hód
[gc_node->
c›y_vÆid_numbî
].
vÆid_°©e
 >

1324 #ifde‡
DEBUG


1325 
	`¥ötf
("gc_node->c›y_∑ge_numbî i†%d, i i†%d,theyáªÅhêßme\n",
gc_node
->
c›y_∑ge_numbî
, 
i
);

1330 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_GC
;

1331 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

1332 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

1333 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_GC_RW_BUSY
;

1334 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1335 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_GC_RW_BUSY
;

1336 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + (7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
);

1337 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->channel_head[channel].next_state_predict_time ;

1339 
gc_node
->
gc_wrôe_ö√r
 = 0;

1356 i‡–(
cuºít_°©e
 =
CHIP_IDLE
Ë|| ((
√xt_°©e
 =CHIP_IDLEË&& (
√xt_°©e_¥edi˘_time
 <
ssd
->
cuºít_time
))){

1357 i‡(
gc_node
->
ªad_wrôe_íd
 == 0) {

1359 if(
gc_node
->
îa£
 == -1) {

1360 #ifde‡
DEBUG


1361 
	`¥ötf
("g¯îa£Öha£,Éø£ iãøti⁄†i†%d,\n", 
gc_node
->
îa£
);

1377 #ifde‡
DEBUG


1378 
	`¥ötf
("gc_node->c›y_∑ge_numbî i†%d, iài†thêíd o‡ªad_å™s„r_wrôê™dÅhêbegö o‡thêîa£Çow\n",
gc_node
->
c›y_∑ge_numbî
);

1381 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_GC
;

1382 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

1383 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

1384 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_ERASE_BUSY
;

1385 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1386 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_ERASE_BUSY
;

1387 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 + (5 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
);

1388 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 = ssd->channel_head[channel].next_state_predict_time ;

1392 
gc_node
->
îa£
 = 0;

1405 
	}
}

1512 
	$öãºu±_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

1513 
gc_›î©i⁄
 *
gc_node
) {

1514 
i
, 
block
, 
a˘ive_block
, 
å™s„r_size
, 
övÆid_∑ge
 = 0;

1515 
loˇl
 *
loˇti⁄
;

1517 
a˘ive_block
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].active_block;

1518 
å™s„r_size
 = 0;

1519 i‡(
gc_node
->
block
 >
ssd
->
∑ømëî
->
block_∂™e
) {

1520 
i
 = 0; i < 
ssd
->
∑ømëî
->
block_∂™e
; i++) {

1521 i‡((
a˘ive_block
 !
i
) &&

1522 (
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
i
].
övÆid_∑ge_num
 >

1523 
övÆid_∑ge
)) {

1524 
övÆid_∑ge
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
i
].
övÆid_∑ge_num
;

1525 
block
 = 
i
;

1528 
gc_node
->
block
 = block;

1531 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
gc_node
->
block
].
övÆid_∑ge_num
 !=

1532 
ssd
->
∑ømëî
->
∑ge_block
)

1534 
i
 = 
gc_node
->
∑ge
; i < 
ssd
->
∑ømëî
->
∑ge_block
; i++) {

1535 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
gc_node
->
block
].
∑ge_hód
[
i
].
vÆid_°©e
 >

1537 
loˇti⁄
 = (
loˇl
 *Ë
	`mÆloc
((local));

1538 
	`Æloc_as£π
(
loˇti⁄
, "location");

1539 
	`mem£t
(
loˇti⁄
, 0, (
loˇl
));

1541 
loˇti⁄
->
ch™√l
 = channel;

1542 
loˇti⁄
->
chù
 = chip;

1543 
loˇti⁄
->
dõ
 = die;

1544 
loˇti⁄
->
∂™e
 =Ölane;

1545 
loˇti⁄
->
block
 = block;

1546 
loˇti⁄
->
∑ge
 = 
i
;

1547 
å™s„r_size
 = 0;

1549 
	`move_∑ge
(
ssd
, 
loˇti⁄
, &
å™s„r_size
);

1551 
	`‰ì
(
loˇti⁄
);

1552 
loˇti⁄
 = 
NULL
;

1554 
gc_node
->
∑ge
 = 
i
 + 1;

1555 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
dõ_hód
[
dõ
].
∂™e_hód
[
∂™e
].
blk_hód
[
gc_node
->
block
].
övÆid_∑ge_num
++;

1556 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_C_A_TRANSFER
;

1557 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

1558 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

1559 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_COPYBACK_BUSY
;

1560 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1561 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1563 i‡((
ssd
->
∑ømëî
->
adv™˚d_comm™ds
 & 
AD_COPYBACK
) == AD_COPYBACK) {

1564 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 =

1565 
ssd
->
cuºít_time
 + 7 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

1566 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 + 7 * ssd->∑ømëî->time_ch¨a˘îi°ics.
tWC
;

1567 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

1568 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 +

1569 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

1571 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 = ssd->
cuºít_time
 +

1572 (7 + 
å™s„r_size
 * 
SECTOR
) *

1573 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
 +

1574 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tR
 +

1575 (7 + 
å™s„r_size
 * 
SECTOR
) *

1576 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

1577 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

1578 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 +

1579 
ssd
->
∑ømëî
->
time_ch¨a˘îi°ics
.
tPROG
;

1585 
	`îa£_›î©i⁄
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
, 
gc_node
->
block
);

1587 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_°©e
 = 
CHANNEL_C_A_TRANSFER
;

1588 
ssd
->
ch™√l_hód
[
ch™√l
].
cuºít_time
 = ssd->current_time;

1589 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e
 = 
CHANNEL_IDLE
;

1590 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 =

1591 
ssd
->
cuºít_time
 + 5 * ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tWC
;

1593 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_°©e
 = 
CHIP_ERASE_BUSY
;

1594 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
cuºít_time
 = ssd->current_time;

1595 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e
 = 
CHIP_IDLE
;

1596 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
chù
].
√xt_°©e_¥edi˘_time
 =

1597 
ssd
->
ch™√l_hód
[
ch™√l
].
√xt_°©e_¥edi˘_time
 + ssd->
∑ømëî
->
time_ch¨a˘îi°ics
.
tBERS
;

1602 
	`¥ötf
("there isáÖroblem in interrupt_gc\n");

1604 
	}
}

1609 
	$dñëe_gc_node
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
gc_›î©i⁄
 *
gc_node
) {

1610 
gc_›î©i⁄
 *
gc_¥e
 = 
NULL
;

1611 i‡(
gc_node
 =
NULL
) {

1612  
ERROR
;

1615 i‡(
gc_node
 =
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
) {

1616 #ifde‡
DEBUGONLYGC


1617 
	`¥ötf
("channel gc only one,so here\n");

1619 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
 = 
gc_node
->
√xt_node
;

1621 
gc_¥e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
;

1622 
gc_¥e
->
√xt_node
 !
NULL
) {

1623 i‡(
gc_¥e
->
√xt_node
 =
gc_node
) {

1624 
gc_¥e
->
√xt_node
 = 
gc_node
->next_node;

1627 
gc_¥e
 = gc_¥e->
√xt_node
;

1632 #ifde‡
DEBUG


1633 
	`¥ötf
("ch™√»%d, dñëêgc_nodêaddªs†%d\n", 
ch™√l
, 
gc_node
);

1637 
	`‰ì
(
gc_node
);

1638 
gc_node
 = 
NULL
;

1639 
ssd
->
gc_ªque°
--;

1640  
SUCCESS
;

1641 
	}
}

1646 
Sètus
 
	$gc_f‹_ch™√l
(
ssd_öfo
 *
ssd
, 
ch™√l
) {

1647 
Êag_dúe˘_îa£
 = 1, 
Êag_gc
 = 1, 
Êag_övoke_gc
 = 1;

1648 
chù
, 
dõ
, 
∂™e
, 
Êag_¥i‹ôy
 = 0;

1649 
cuºít_°©e
 = 0, 
√xt_°©e
 = 0;

1650 
√xt_°©e_¥edi˘_time
 = 0;

1651 
gc_›î©i⁄
 *
gc_node
 = 
NULL
, *
gc_p
 = NULL;

1658 
gc_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
;

1674 i‡(
gc_node
->
¥i‹ôy
 =
GC_UNINTERRUPT
)

1676 
Êag_¥i‹ôy
 = 1;

1678 #ifde‡
DEBUG


1679 
	`¥ötf
("gc_nodêi†%x,ánd fœg_¥i‹ôy(mu° bê1Ëi†%d.gc_nodêmu°n'àbêNULL\n", *
gc_node
, 
Êag_¥i‹ôy
);

1682 i‡(
Êag_¥i‹ôy
 != 1)

1684 #ifde‡
DEBUG


1685 
	`¥ötf
("errors happend in gc1 !!!\n");

1688 
gc_node
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
;

1689 
gc_node
 !
NULL
) {

1690 
cuºít_°©e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
gc_node
->
chù
].current_state;

1691 
√xt_°©e
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
gc_node
->
chù
].next_state;

1692 
√xt_°©e_¥edi˘_time
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
chù_hód
[
gc_node
->
chù
].next_state_predict_time;

1700 
gc_node
 = gc_node->
√xt_node
;

1705 i‡(
gc_node
 =
NULL
) {

1706  
FAILURE
;

1709 
chù
 = 
gc_node
->chip;

1710 
dõ
 = 
gc_node
->die;

1711 
∂™e
 = 
gc_node
->plane;

1713 i‡(
gc_node
->
¥i‹ôy
 =
GC_UNINTERRUPT
) {

1715 #ifde‡
DEBUG


1716 
	`¥ötf
("everyÅime gc only happen here\n");

1719 
	`unöãºu±_gc
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

1721  
SUCCESS
;

1747 
Êag_övoke_gc
 = 
	`decide_gc_övoke
(
ssd
,

1748 
ch™√l
);

1750 i‡(
Êag_övoke_gc
 == 1) {

1751 
Êag_dúe˘_îa£
 = 
	`gc_dúe˘_îa£
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

1752 i‡(
Êag_dúe˘_îa£
 == -1) {

1753 
Êag_gc
 = 
	`öãºu±_gc
(
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

1754 
gc_node
);

1755 i‡(
Êag_gc
 == 1) {

1756 
	`dñëe_gc_node
(
ssd
, 
ch™√l
, 
gc_node
);

1758 } i‡(
Êag_dúe˘_îa£
 == 1) {

1759 
	`dñëe_gc_node
(
ssd
, 
ch™√l
, 
gc_node
);

1761  
SUCCESS
;

1763  
FAILURE
;

1766 
	}
}

1778 
	$gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
Êag
) {

1779 
i
;

1780 
Êag_dúe˘_îa£
 = 1, 
Êag_gc
 = 1, 
Êag_övoke_gc
 = 1;

1781 
Êag_¥i‹ôy
 = 0;

1782 
gc_›î©i⁄
 *
gc_node
 = 
NULL
, *
gc_p
 = NULL;

1784 i‡(
Êag
 == 1)

1786 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

1787 
Êag_¥i‹ôy
 = 0;

1788 
Êag_dúe˘_îa£
 = 1;

1789 
Êag_gc
 = 1;

1790 
Êag_övoke_gc
 = 1;

1791 
gc_node
 = 
NULL
;

1792 
gc_p
 = 
NULL
;

1793 i‡((
ssd
->
ch™√l_hód
[
i
].
cuºít_°©e
 =
CHANNEL_IDLE
) ||

1794 (
ssd
->
ch™√l_hód
[
i
].
√xt_°©e
 =
CHANNEL_IDLE
 &&

1795 
ssd
->
ch™√l_hód
[
i
].
√xt_°©e_¥edi˘_time
 <ssd->
cuºít_time
)) {

1796 
ch™√l
 = 
i
;

1797 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
 !
NULL
) {

1798 
	`gc_f‹_ch™√l
(
ssd
, 
ch™√l
);

1802  
SUCCESS
;

1815 i‡((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 == 1) ||

1816 ((
ssd
->
∑ømëî
->
Æloˇti⁄_scheme
 =0Ë&& (ssd->∑ømëî->
dy«mic_Æloˇti⁄
 == 1))) {

1823 
	`gc_f‹_ch™√l
(
ssd
, 
ch™√l
);

1824  
SUCCESS
;

1826 
	}
}

1833 
	$decide_gc_övoke
(
ssd_öfo
 *
ssd
, 
ch™√l
) {

1834 
sub_ªque°
 *
sub
;

1835 
loˇl
 *
loˇti⁄
;

1837 i‡((
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
 =
NULL
) &&

1838 (
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 =
NULL
))

1842 i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_w_hód
 !
NULL
) {

1844 } i‡(
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
 !
NULL
) {

1845 
sub
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
;

1846 
sub
 !
NULL
) {

1847 i‡(
sub
->
cuºít_°©e
 ==

1848 
SR_WAIT
)

1850 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, 
sub
->
µn
);

1851 i‡((
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
cuºít_°©e
 =
CHIP_IDLE
) ||

1852 ((
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e
 =
CHIP_IDLE
) &&

1853 (
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 <=

1854 
ssd
->
cuºít_time
))) {

1855 
	`‰ì
(
loˇti⁄
);

1856 
loˇti⁄
 = 
NULL
;

1859 
	`‰ì
(
loˇti⁄
);

1860 
loˇti⁄
 = 
NULL
;

1861 } i‡(
sub
->
√xt_°©e
 =
SR_R_DATA_TRANSFER
) {

1862 
loˇti⁄
 = 
	`föd_loˇti⁄
(
ssd
, 
sub
->
µn
);

1863 i‡(
ssd
->
ch™√l_hód
[
loˇti⁄
->
ch™√l
].
chù_hód
[loˇti⁄->
chù
].
√xt_°©e_¥edi˘_time
 <=

1864 
ssd
->
cuºít_time
) {

1865 
	`‰ì
(
loˇti⁄
);

1866 
loˇti⁄
 = 
NULL
;

1869 
	`‰ì
(
loˇti⁄
);

1870 
loˇti⁄
 = 
NULL
;

1872 
sub
 = sub->
√xt_node
;

1877 
	}
}

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/pagemap.h

18 #i‚de‡
PAGEMAP_H


19 
	#PAGEMAP_H
 10000

	)

21 
	~<sys/ty≥s.h
>

22 
	~"öôülize.h
"

24 
	#MAX_INT64
 0x7ffffffffffffffÊl

	)

26 
fûe_as£π
(
îr‹
, *
s
);

28 
Æloc_as£π
(*
p
, *
s
);

30 
åa˚_as£π
(
öt64_t
 
time_t
, 
devi˚
, 
l¢
, 
size
, 
›e
);

32 
loˇl
 *
föd_loˇti⁄
(
ssd_öfo
 *
ssd
, 
µn
);

35 
föd_µn
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

36 
block
, 
∑ge
);

38 
ssd_öfo
 *
¥e_¥o˚ss_∑ge
(ssd_öfÿ*
ssd
);

40 
gë_µn_f‹_¥e_¥o˚ss
(
ssd_öfo
 *
ssd
, 
l¢
);

42 
ssd_öfo
 *

43 
gë_µn
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

44 
sub_ªque°
 *
sub
);

46 
gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
Êag
);

49 
gc_dúe˘_îa£
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

51 
unöãºu±_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

53 
öãºu±_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

54 
gc_›î©i⁄
 *
gc_node
);

56 
decide_gc_övoke
(
ssd_öfo
 *
ssd
, 
ch™√l
);

58 
£t_íåy_°©e
(
ssd_öfo
 *
ssd
, 
l¢
, 
size
);

61 
gë_µn_f‹_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

63 
îa£_›î©i⁄
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

64 
block
);

66 
îa£_∂™es
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ1
, 
∂™e1
,

67 
comm™d
);

69 
move_∑ge
(
ssd_öfo
 *
ssd
, 
loˇl
 *
loˇti⁄
, *
å™s„r_size
);

71 
gc_f‹_ch™√l
(
ssd_öfo
 *
ssd
, 
ch™√l
);

73 
dñëe_gc_node
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
gc_›î©i⁄
 *
gc_node
);

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/ssd.c

18 
	~"ssd.h
"

20 
	$¥ötf_gc_node_öf‹m©i⁄
(
gc_›î©i⁄
* 
gc_node
)

25 
	}
}

30 
	$¥ötf_evîy_chù_°©ic_subªque°
(
ssd_öfo
 *
ssd
)

32 
tmp_ch™√l
,
tmp_chù
, 
i
, 
j
;

33 
ãmp_chù_ªad_queue_Àngth
[100][100];

34 
ãmp_chù_wrôe_queue_Àngth
[100][100];

35 
sub_ªque°
 *
sub_f‹_queue
 = 
NULL
;

36 
sub_ªque°
 *
sub_f‹_ªad
 = 
NULL
;

37 
sub_ªque°
 *
sub_f‹_wrôe
 = 
NULL
;

38 #ifde‡
DEBUG


42 
i
 = 0; i < 100; i++ ){

43 
j
 = 0; j < 100; j++ ){

44 
ãmp_chù_ªad_queue_Àngth
[
i
][
j
] = 0;

45 
ãmp_chù_wrôe_queue_Àngth
[
i
][
j
] = 0;

49 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++ ){

51 
sub_f‹_ªad
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

52 
sub_f‹_ªad
 !
NULL
){

53 
tmp_ch™√l
 = 
sub_f‹_ªad
->
loˇti⁄
->
ch™√l
;

54 
tmp_chù
 = 
sub_f‹_ªad
->
loˇti⁄
->
chù
;

55 
ãmp_chù_ªad_queue_Àngth
[
tmp_ch™√l
][
tmp_chù
] ++;

58 
sub_f‹_ªad
 = sub_f‹_ªad->
√xt_node
;

63 
sub_f‹_wrôe
 = 
ssd
->
ch™√l_hód
[
i
].
subs_w_hód
;

64 
sub_f‹_wrôe
 !
NULL
){

65 #ifde‡
DEBUG


70 
tmp_ch™√l
 = 
sub_f‹_wrôe
->
loˇti⁄
->
ch™√l
;

71 
tmp_chù
 = 
sub_f‹_wrôe
->
loˇti⁄
->
chù
;

72 
ãmp_chù_wrôe_queue_Àngth
[
tmp_ch™√l
][
tmp_chù
] ++;

75 
sub_f‹_wrôe
 = sub_f‹_wrôe->
√xt_node
;

80 
tmp_ch™√l
 = 
ssd
->
∑ømëî
->
ch™√l_numbî
;

81 
tmp_chù
 = 
ssd
->
∑ømëî
->
chù_num
 / ssd->∑ømëî->
ch™√l_numbî
;

83 
i
 = 0; i < 
tmp_ch™√l
; i++ ){

84 #ifde‡
DEBUG


85 
	`¥ötf
("ch™√»%d '†sub_r_èûáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_r_èû
);

86 
	`¥ötf
("ch™√»%d '†sub_r_hódáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_r_hód
);

87 
	`¥ötf
("ch™√»%d '†sub_w_hódáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_w_hód
);

88 
	`¥ötf
("ch™√»%d '†sub_w_èûáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_w_èû
);

90 
j
 = 0; j < 
tmp_chù
; j++ ){

94 
	`¥ötf
("0, %d, %d, %d\n", 
i
, 
j
, 
ãmp_chù_wrôe_queue_Àngth
[i][j]);

95 
	`¥ötf
("1, %d, %d, %d\n", 
i
, 
j
, 
ãmp_chù_ªad_queue_Àngth
[i][j]);

98 #ifde‡
DEBUGQUEUE


108 
sub_f‹_queue
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

110 
sub_f‹_queue
 !
NULL
){

111 if(
sub_f‹_queue
->
loˇti⁄
->
chù
 =
j
){

114 
sub_f‹_queue
 = sub_f‹_queue->
√xt_node
;

116 if(
sub_f‹_queue
 !
NULL
){

117 
	`¥ötf
("cﬁÀ˘i⁄2 ch™√»%d, chù %d, fú° hód sub_ªad_ªque° sèã %d\n", 
i
, 
j
, 
sub_f‹_queue
->
cuºít_°©e
);

119 
	`¥ötf
("cﬁÀ˘i⁄2 ch™√»%d, chù %d, ha†nÿsub_ªad_ªque°Çow\n", 
i
, 
j
);

123 
sub_f‹_queue
 = 
ssd
->
ch™√l_hód
[
i
].
subs_w_hód
;

125 
sub_f‹_queue
 !
NULL
){

126 if(
sub_f‹_queue
->
loˇti⁄
->
chù
 =
j
){

129 
sub_f‹_queue
 = sub_f‹_queue->
√xt_node
;

131 if(
sub_f‹_queue
 !
NULL
){

132 
	`¥ötf
("cﬁÀ˘i⁄2 ch™√»%d, chù %d, fú° hód sub_wrôe_ªque° sèã %d\n", 
i
, 
j
, 
sub_f‹_queue
->
cuºít_°©e
);

134 
	`¥ötf
("cﬁÀ˘i⁄2 ch™√»%d, chù %d, ha†nÿsub_wrôe_ªque°Çow\n", 
i
, 
j
);

139 if(
ãmp_chù_ªad_queue_Àngth
[
i
][
j
] !
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
chù_ªad_queue_Àngth
) {

140 
	`¥ötf
("lxc,readÜength is wrong here\n");

142 if(
ãmp_chù_wrôe_queue_Àngth
[
i
][
j
] !
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
chù_wrôe_queue_Àngth
) {

143 
	`¥ötf
("lxc,writeÜength is wrong here\n");

147 
	}
}

150 
	$¥ötf_evîy_chù_ªad_subªque°
(
ssd_öfo
 *
ssd
)

152 
tmp_ch™√l
,
tmp_chù
, 
i
, 
j
;

153 
ãmp_chù_ªad_queue_Àngth
[100][100];

154 
ãmp_chù_wrôe_queue_Àngth
[100][100];

155 
sub_ªque°
 *
sub_f‹_queue
 = 
NULL
;

156 
sub_ªque°
 *
sub_f‹_ªad
 = 
NULL
;

157 
sub_ªque°
 *
sub_f‹_wrôe
 = 
NULL
;

158 #ifde‡
DEBUG


162 
i
 = 0; i < 100; i++ ){

163 
j
 = 0; j < 100; j++ ){

164 
ãmp_chù_ªad_queue_Àngth
[
i
][
j
] = 0;

165 
ãmp_chù_wrôe_queue_Àngth
[
i
][
j
] = 0;

169 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++ ){

171 
sub_f‹_ªad
 = 
ssd
->
ch™√l_hód
[
i
].
subs_r_hód
;

172 
sub_f‹_ªad
 !
NULL
){

173 
tmp_ch™√l
 = 
sub_f‹_ªad
->
loˇti⁄
->
ch™√l
;

174 
tmp_chù
 = 
sub_f‹_ªad
->
loˇti⁄
->
chù
;

175 
ãmp_chù_ªad_queue_Àngth
[
tmp_ch™√l
][
tmp_chù
] ++;

178 
sub_f‹_ªad
 = sub_f‹_ªad->
√xt_node
;

183 
sub_f‹_wrôe
 = 
ssd
->
ch™√l_hód
[
i
].
subs_w_hód
;

184 
sub_f‹_wrôe
 !
NULL
){

190 
tmp_ch™√l
 = 
sub_f‹_wrôe
->
loˇti⁄
->
ch™√l
;

191 
tmp_chù
 = 
sub_f‹_wrôe
->
loˇti⁄
->
chù
;

192 
ãmp_chù_wrôe_queue_Àngth
[
tmp_ch™√l
][
tmp_chù
] ++;

195 
sub_f‹_wrôe
 = sub_f‹_wrôe->
√xt_node
;

200 
tmp_ch™√l
 = 
ssd
->
∑ømëî
->
ch™√l_numbî
;

201 
tmp_chù
 = 
ssd
->
∑ømëî
->
chù_num
 / ssd->∑ømëî->
ch™√l_numbî
;

203 
i
 = 0; i < 
tmp_ch™√l
; i++ ){

204 #ifde‡
DEBUG


205 
	`¥ötf
("ch™√»%d '†sub_r_èûáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_r_èû
);

206 
	`¥ötf
("ch™√»%d '†sub_r_hódáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_r_hód
);

207 
	`¥ötf
("ch™√»%d '†sub_w_hódáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_w_hód
);

208 
	`¥ötf
("ch™√»%d '†sub_w_èûáddªs†i†%Œd\n", 
i
, 
ssd
->
ch™√l_hód
[i].
subs_w_èû
);

210 
j
 = 0; j < 
tmp_chù
; j++ ){

212 if(
ãmp_chù_ªad_queue_Àngth
[
i
][
j
] > 0){

251 if(
ãmp_chù_ªad_queue_Àngth
[
i
][
j
] !
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
chù_ªad_queue_Àngth
) {

252 
	`¥ötf
("lxc,ªadÜígth i†wr⁄g hîe,ÇewÅem∞Àngth i†%d. wrôêö old chù i†%d \n",
ãmp_chù_ªad_queue_Àngth
[
i
][
j
], 
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
chù_ªad_queue_Àngth
);

254 if(
ãmp_chù_wrôe_queue_Àngth
[
i
][
j
] !
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
chù_wrôe_queue_Àngth
) {

257 
	`¥ötf
("lxc,wrôêÀngth i†wr⁄g hîe,ÇewÅem∞Àngth i†%d. wrôêö old chù i†%d \n",
ãmp_chù_wrôe_queue_Àngth
[
i
][
j
], 
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
chù_wrôe_queue_Àngth
);

261 
	}
}

266 
	$judgög_ªad_ö_gc_chù
(
ssd_öfo
 *
ssd
, 
ch™√l
)

267 { 
tmp_chù
;

268 
gc_›î©i⁄
 *
gc_node
;

269 
sub_ªque°
 *
sub_f‹_ªad
 = 
NULL
;

270 if(
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
 !
NULL
){

272 
tmp_chù
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
gc_comm™d
->
chù
;

273 
sub_f‹_ªad
 = 
ssd
->
ch™√l_hód
[
ch™√l
].
subs_r_hód
;

275 
sub_f‹_ªad
 !
NULL
){

276 i‡(
sub_f‹_ªad
->
loˇti⁄
->
chù
 =
tmp_chù
){

282 
sub_f‹_ªad
 = sub_f‹_ªad->
√xt_node
;

285 if(
sub_f‹_ªad
 =
NULL
){

291 
	}
}

295 
	$¥ötf_ssd_gc_node
(
ssd_öfo
 *
ssd
)

315 
	}
}

320 
	$¥ötf_ssd_ªque°_queue
(
ssd_öfo
 *
ssd
)

322 
ªque°
* 
ãmp_ªque°
;

323 
ãmp_num_ªque°
 = 
ssd
->
ªque°_queue_Àngth
;

324 if(
ãmp_num_ªque°
 == 0){

325 
	`¥ötf
("ssdÑequest_queue hasÇone\n");

327 
ãmp_ªque°
 = 
ssd
->
ªque°_queue
;

328 
	`¥ötf
("ssdÑeque°_queuê°©us:Ñeque°_Àngth i†%d,\n", 
ssd
->
ªque°_queue_Àngth
);

329 
ãmp_ªque°
 !
NULL
){

330 
	`¥ötf
("ssdÑeque°_queuê,Ü¢ : %d, sizê: %d, o≥øti⁄ :%d ***1ªad,0wrôe,com∂ëe_l¢_cou¡ :%d, di°ri_Êag :%d, begö_timê:%Œu\n",
ãmp_ªque°
->
l¢
,ãmp_ªque°->
size
,ãmp_ªque°->
›î©i⁄
,ãmp_ªque°->
com∂ëe_l¢_cou¡
,ãmp_ªque°->
di°ri_Êag
,ãmp_ªque°->
begö_time
);

331 if(
ãmp_ªque°
 =
ssd
->
ªque°_èû
){

334 
ãmp_ªque°
 =Åemp_ªque°->
√xt_node
;

339 
	}
}

343 
	$¥ötfsub_ªque°_°©us
(
ssd_öfo
 *
ssd
)

404 
	}
}

420 
	$maö
() {

421 
i
, 
j
, 
k
;

422 
ssd_öfo
 *
ssd
;

425 #ifde‡
DEBUG


426 
	`¥ötf
("enter main\n");

427 
	`¥ötf
("forÅest\n");

429 
ssd
 = (
ssd_öfo
 *Ë
	`mÆloc
((ssd_info));

430 
	`Æloc_as£π
(
ssd
, "ssd");

431 
	`mem£t
(
ssd
, 0, (
ssd_öfo
));

432 
ssd
 = 
	`öôüti⁄
(ssd);

433 #ifde‡
DEBUG


434 
	`¥ötf
("this is in main()");

435 
	`¥ötfsub_ªque°_°©us
(
ssd
);

437 
	`make_aged
(
ssd
);

438 
	`¥e_¥o˚ss_∑ge
(
ssd
);

440 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

441 
j
 = 0; j < 
ssd
->
∑ømëî
->
dõ_chù
; j++) {

442 
k
 = 0; k < 
ssd
->
∑ømëî
->
∂™e_dõ
; k++) {

443 
	`¥ötf
("%d,0,%d,%d: %5d\n", 
i
, 
j
, 
k
,

444 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[0].
dõ_hód
[
j
].
∂™e_hód
[
k
].
‰ì_∑ge
);

448 
	`Ârötf
(
ssd
->
ouçutfûe
, "\t\t\t\t\t\t\t\t\tOUTPUT\n");

449 
	`Ârötf
(
ssd
->
ouçutfûe
, "****************** TRACE INFO ******************\n");

451 
ssd
 = 
	`simuœã
(ssd);

454 
	`°©i°ic_ouçut
(
ssd
);

457 
	`¥ötf
("\n");

458 
	`¥ötf
("the simulation is completed!\n");

462 
	}
}

472 
ssd_öfo
 *
	$simuœã
(
ssd_öfo
 *
ssd
) {

473 
Êag
 = 1, 
Êag1
 = 0;

474 
ouçut_°ï
 = 0;

475 
a
 = 0, 
b
 = 0;

478 
	`¥ötf
("\n");

479 
	`¥ötf
("begin simulating.......................\n");

480 
	`¥ötf
("\n");

481 
	`¥ötf
("\n");

482 
	`¥ötf
(" ^o^ OK,Ölease waitá moment,ándÉnjoy musicánd coffee ^o^ \n");

484 
ssd
->
åa˚fûe
 = 
	`f›í
(ssd->
åa˚fûíame
, "r");

485 i‡(
ssd
->
åa˚fûe
 =
NULL
) {

486 
	`¥ötf
("theÅrace file can't open\n");

487  
NULL
;

490 
	`Ârötf
(
ssd
->
ouçutfûe
,

492 
	`fÊush
(
ssd
->
ouçutfûe
);

493 
i
 = 0;

494 
Êag
 != 100) {

498 if(
ssd
->
debug_sign
 == 1){

509 
Êag
 = 
	`gë_ªque°s
(
ssd
);

513 #ifde‡
DEBUG


514 
	`¥ötf
–"Êag i†%d\n" ,
Êag
);

517 i‡(
Êag
 == 1) {

521 i‡(
ssd
->
∑ømëî
->
døm_ˇ∑côy
 != 0) {

522 
	`buf„r_m™agemít
(
ssd
);

523 
	`di°ribuã
(
ssd
);

525 
	`no_buf„r_di°ribuã
(
ssd
);

531 
	`¥o˚ss
(
ssd
);

532 
	`åa˚_ouçut
(
ssd
);

534 i‡(
Êag
 == 0 )

535 
Êag
 = 100;

538 
	`f˛o£
(
ssd
->
åa˚fûe
);

539  
ssd
;

540 
	}
}

554 
	$gë_ªque°s
(
ssd_öfo
 *
ssd
) {

555 
buf„r
[200];

556 
l¢
 = 0;

557 
devi˚
, 
size
, 
›e
, 
œrge_l¢
, 
i
 = 0, 
j
 = 0;

558 
ªque°
 *
ªque°1
;

559 
sub_ªque°
 *
ãmp_sub
;

560 
Êag
 = 1;

561 
fûïoöt
;

562 
öt64_t
 
time_t
 = 0;

563 
öt64_t
 
√¨e°_evít_time
;

564 #ifde‡
DEBUG_CURR_TIME


565 
	`¥ötf
("DEBUG_CURR_TIME i†%Œd i¿gë_ªque° fun˘i⁄\n",
ssd
->
cuºít_time
);

569 i‡(
	`„of
(
ssd
->
åa˚fûe
)){

570 if(
ssd
->
ªque°_queue_Àngth
 > 0){

571 
	`¥ötf
("here is dealingÉnd ofÅrace\n");

572 
√¨e°_evít_time
 = 
	`föd_√¨e°_evít
(
ssd
);

574 i‡(
√¨e°_evít_time
 =
MAX_INT64
) {

577 i‡(
√¨e°_evít_time
 < 
MAX_INT64
){

579 
ssd
->
cuºít_time
 = 
√¨e°_evít_time
;

586 
fûïoöt
 = 
	`·ñl
(
ssd
->
åa˚fûe
);

587 
	`fgës
(
buf„r
, 200, 
ssd
->
åa˚fûe
);

588 
	`ssˇnf
(
buf„r
, "%Œd %d %d %d %d", &
time_t
, &
devi˚
, &
l¢
, &
size
, &
›e
);

590 i‡((
devi˚
 < 0Ë&& (
l¢
 < 0Ë&& (
size
 < 0Ë&& (
›e
 < 0)) {

594 #ifde‡
DEBUG


595 
	`¥ötf
("íã∏gë_ªque°s, ssd->mö_l¢ %d, ssd->max_l¢ %d\n",
ssd
->
mö_l¢
,ssd->
max_l¢
);

597 
	`¥ötf
–"time_à%Œd, devi˚ %d,Ü¢ %d,sizê%d ,›ê%d\n" , 
time_t
, 
devi˚
, 
l¢
, 
size
, 
›e
);

601 i‡(
l¢
 < 
ssd
->
mö_l¢
)

602 
ssd
->
mö_l¢
 = 
l¢
;

603 i‡(
l¢
 > 
ssd
->
max_l¢
)

604 
ssd
->
max_l¢
 = 
l¢
;

611 
œrge_l¢
 = (Ë((
ssd
->
∑ømëî
->
sub∑ge_∑ge
 * ssd->∑ømëî->
∑ge_block
 * ssd->∑ømëî->
block_∂™e
 *

612 
ssd
->
∑ømëî
->
∂™e_dõ
 * ssd->∑ømëî->
dõ_chù
 * ssd->∑ømëî->
chù_num
) *

613 (1 - 
ssd
->
∑ømëî
->
ovî¥ovide
));

614 
l¢
 =Ü¢ % 
œrge_l¢
;

616 
√¨e°_evít_time
 = 
	`föd_√¨e°_evít
(
ssd
);

617 #ifde‡
DEBUG


618 
	`¥ötf
("√¨e°_evít_timêi†%Œd\n",
√¨e°_evít_time
 );

621 i‡(
√¨e°_evít_time
 =
MAX_INT64
) {

624 if(
ssd
->
ªque°_queue_Àngth
 >0){

625 
	`¥ötf
("only gcÖrocessing can happen\n");

627 if(
ssd
->
ªque°_queue_Àngth
 =ssd->
∑ømëî
->
queue_Àngth
){

630 
	`f£ek
(
ssd
->
åa˚fûe
, 
fûïoöt
, 0);

631 
	`¥ötf
("dó»ö√∏subªque°, cuºít_timê%Œd\n", 
ssd
->
cuºít_time
);

665 
ssd
->
cuºít_time
 = 
time_t
;

670 
	`¥ötf
("ssdcuºít_timêÇã∏√¨e°_evít_timêi†MAX_INIT64ánd ssd->cuºít_timêi†%Œd\n", 
ssd
->
cuºít_time
 );

671 #ifde‡
DEBUG


672 
	`¥ötf
("ssdcuºít_timêÇã∏√¨e°_evít_timêi†MAX_INIT64ánd ssd->cuºít_timêi†%Œd\n", 
ssd
->
cuºít_time
 );

680 i‡(
√¨e°_evít_time
 < 
time_t
) {

689 #ifde‡
DEBUG


690 
	`¥ötf
("enterÇearest_event_time <time_t\n" );

693 
	`f£ek
(
ssd
->
åa˚fûe
, 
fûïoöt
, 0);

694 i‡(
ssd
->
cuºít_time
 <
√¨e°_evít_time
){

696 
	`¥ötf
("åa˚Üöêi†œãr, d⁄àhavêtÿadd. ssd->CURR_TIME i†%Œd,Çóª°_evít_timêi†%Œd i¿gë_ªque°†fun˘i⁄\n",
ssd
->
cuºít_time
, 
√¨e°_evít_time
);

697 
ssd
->
cuºít_time
 = 
√¨e°_evít_time
;

699 #ifde‡
DEBUG_CURR_TIME


700 
	`¥ötf
("ssdcuºíâimêDEBUG_CURR_TIME i†%Œd i¿gë_ªque°†fun˘i⁄\n",
ssd
->
cuºít_time
);

706 #ifde‡
DEBUG


707 
	`¥ötf
("enterÇearest_event_time >Åime_t\n" );

710 i‡(
ssd
->
ªque°_queue_Àngth
 >ssd->
∑ømëî
->
queue_Àngth
) {

711 
	`¥ötf
("hîêªque°Ü⁄gÉnough!!!,Üígth i†%d\n", 
ssd
->
ªque°_queue_Àngth
);

713 
	`f£ek
(
ssd
->
åa˚fûe
, 
fûïoöt
, 0);

714 
ssd
->
cuºít_time
 = 
√¨e°_evít_time
;

715 #ifde‡
DEBUG_CURR_TIME


716 
	`¥ötf
("ssdcuºíâimê DEBUG_CURR_TIME i†%Œd i¿gë_ªque°†fun˘i⁄ándÑeque°_queue>ı¨amëî queue_Àngth\n",
ssd
->
cuºít_time
);

721 
ssd
->
cuºít_time
 = 
time_t
;

722 #ifde‡
DEBUG_CURR_TIME


723 
	`¥ötf
("ssdcuºíâimê DEBUG_CURR_TIME i†%Œd i¿gë_ªque°†fun˘i⁄Ñeque°_queue<ı¨amëî queue_Àngth \n",
ssd
->
cuºít_time
);

730 i‡(
time_t
 < 0) {

731 
	`¥ötf
("error!\n");

735 i‡(
	`„of
(
ssd
->
åa˚fûe
)) {

736 
ªque°1
 = 
NULL
;

740 
ªque°1
 = (
ªque°
 *Ë
	`mÆloc
((request));

741 
	`Æloc_as£π
(
ªque°1
, "request");

742 
	`mem£t
(
ªque°1
, 0, (
ªque°
));

744 
ªque°1
->
time
 = 
time_t
;

745 
ªque°1
->
l¢
 =Üsn;

746 
ªque°1
->
size
 = size;

747 
ªque°1
->
›î©i⁄
 = 
›e
;

748 
ªque°1
->
begö_time
 = 
time_t
;

749 
ªque°1
->
ª•⁄£_time
 = 0;

750 
ªque°1
->
íîgy_c⁄sum±i⁄
 = 0;

751 
ªque°1
->
√xt_node
 = 
NULL
;

752 
ªque°1
->
di°ri_Êag
 = 0;

753 
ªque°1
->
subs
 = 
NULL
;

754 
ªque°1
->
√ed_di°r_Êag
 = 
NULL
;

755 
ªque°1
->
com∂ëe_l¢_cou¡
 = 0;

756 
fûïoöt
 = 
	`·ñl
(
ssd
->
åa˚fûe
);

757 #ifde‡
DEBUG


758 
	`¥ötf
("before insert into ssd-request queue\n");

759 
	`¥ötf_ssd_ªque°_queue
(
ssd
);

764 #ifde‡
DEBUGSUSPEND


765 
	`¥ötf
("ssdÑeque°_queuê,Ü¢ : %d, sizê: %d, o≥øti⁄ :%d ***1ªad,0wrôe,com∂ëe_l¢_cou¡ :%d, di°ri_Êag :%d, begö_timê:%Œu\n",
ªque°1
->
l¢
,ªque°1->
size
,ªque°1->
›î©i⁄
,ªque°1->
com∂ëe_l¢_cou¡
,ªque°1->
di°ri_Êag
,ªque°1->
begö_time
);

768 i‡(
ssd
->
ªque°_queue
 =
NULL
)

770 
ssd
->
ªque°_queue
 = 
ªque°1
;

771 
ssd
->
ªque°_èû
 = 
ªque°1
;

772 
ssd
->
ªque°_queue_Àngth
++;

774 (
ssd
->
ªque°_èû
)->
√xt_node
 = 
ªque°1
;

775 
ssd
->
ªque°_èû
 = 
ªque°1
;

776 
ssd
->
ªque°_queue_Àngth
++;

778 #ifde‡
DEBUG


779 
	`¥ötf
("after inserted into ssd-request queue\n");

780 
	`¥ötf_ssd_ªque°_queue
(
ssd
);

782 i‡(
ªque°1
->
›î©i⁄
 == 1)

784 
ssd
->
ave_ªad_size
 =

785 (
ssd
->
ave_ªad_size
 * ssd->
ªad_ªque°_cou¡
 + 
ªque°1
->
size
) / (ssd->read_request_count + 1);

787 
ssd
->
ave_wrôe_size
 =

788 (
ssd
->
ave_wrôe_size
 * ssd->
wrôe_ªque°_cou¡
 + 
ªque°1
->
size
) / (ssd->write_request_count + 1);

792 
fûïoöt
 = 
	`·ñl
(
ssd
->
åa˚fûe
);

793 
	`fgës
(
buf„r
, 200, 
ssd
->
åa˚fûe
);

794 
	`ssˇnf
(
buf„r
, "%Œd %d %d %d %d", &
time_t
, &
devi˚
, &
l¢
, &
size
, &
›e
);

795 
ssd
->
√xt_ªque°_time
 = 
time_t
;

796 
	`f£ek
(
ssd
->
åa˚fûe
, 
fûïoöt
, 0);

799 
	}
}

812 
ssd_öfo
 *
	$buf„r_m™agemít
(
ssd_öfo
 *
ssd
) {

813 
j
, 
l¢
, 
Õn
, 
œ°_Õn
, 
fú°_Õn
, 
ödex
, 
com∂ëe_Êag
 = 0, 
°©e
, 
fuŒ_∑ge
;

814 
Êag
 = 0, 
√ed_di°b_Êag
, 
l¢_Êag
, 
Êag1
 = 1, 
a˘ive_ªgi⁄_Êag
 = 0;

815 
ªque°
 *
√w_ªque°
;

816 
buf„r_group
 *
buf„r_node
, 
key
;

817 
mask
 = 0, 
off£t1
 = 0, 
off£t2
 = 0;

818 #ifde‡
DEBUG_CURR_TIME


819 
	`¥ötf
("DEBUG_CURR_TIME i†%Œd i¿buf„r_m™agemíàfun˘i⁄ \n",
ssd
->
cuºít_time
);

822 
ssd
->
døm
->
cuºít_time
 = ssd->current_time;

823 
fuŒ_∑ge
 = ~(0xfffffff‡<< 
ssd
->
∑ømëî
->
sub∑ge_∑ge
);

825 
√w_ªque°
 = 
ssd
->
ªque°_èû
;

826 
l¢
 = 
√w_ªque°
->lsn;

827 
Õn
 = 
√w_ªque°
->
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

828 
œ°_Õn
 = (
√w_ªque°
->
l¢
 +Çew_ªque°->
size
 - 1Ë/ 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

829 
fú°_Õn
 = 
√w_ªque°
->
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

831 
√w_ªque°
->
√ed_di°r_Êag
 = (*Ë
	`mÆloc
(

832 (Ë* ((
œ°_Õn
 - 
fú°_Õn
 + 1Ë* 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 / 32 + 1));

834 
	`Æloc_as£π
(
√w_ªque°
->
√ed_di°r_Êag
, "new_request->need_distr_flag");

835 
	`mem£t
(
√w_ªque°
->
√ed_di°r_Êag
, 0,

836 (Ë* ((
œ°_Õn
 - 
fú°_Õn
 + 1Ë* 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 / 32 + 1));

837 #ifde‡
DEBUG


838 
	`¥ötf
("yes, hîêi†thêªque°_èû f‹Çew_ªque° ,ô†l¢ i†%d, sizêi†%d, o≥øti⁄ i†%d\n",
√w_ªque°
->
l¢
,Çew_ªque°->
size
,Çew_ªque°->
›î©i⁄
);

841 i‡(
√w_ªque°
->
›î©i⁄
 =
READ
) {

842 
Õn
 <
œ°_Õn
) {

847 
√ed_di°b_Êag
 = 
fuŒ_∑ge
;

848 
key
.
group
 = 
Õn
;

849 
buf„r_node
 = (
buf„r_group
 *Ë
	`avlTªeFöd
(
ssd
->
døm
->
buf„r
,

850 (
TREE_NODE
 *Ë&
key
);

854 (
buf„r_node
 !
NULL
Ë&& (
l¢
 < (
Õn
 + 1Ë* 
ssd
->
∑ømëî
->
sub∑ge_∑ge
) &&

855 (
l¢
 <(
√w_ªque°
->l¢ +Çew_ªque°->
size
 - 1))) {

856 #ifde‡
DEBUG


857 
	`¥ötf
("buffer_node isÇotÇull, find in TreeÅhe buffer_node information is :\n");

859 
	`¥ötf
("buf„r_node. grou∞%d, st‹ed %d, dúty_˛ó¿%d, fœg %d\n", 
buf„r_node
->
group
, buf„r_node->
°‹ed
, buf„r_node->
dúty_˛ón
, buf„r_node->
Êag
);

863 
l¢_Êag
 = 
fuŒ_∑ge
;

864 
mask
 = 1 << (
l¢
 % 
ssd
->
∑ømëî
->
sub∑ge_∑ge
);

865 i‡(
mask
 > 31) {

866 
	`¥ötf
("the subpageÇumber isÜargerÅhan 32!add some cases");

867 
	`gëch¨
();

868 } i‡((
buf„r_node
->
°‹ed
 & 
mask
) == mask) {

869 
Êag
 = 1;

870 
l¢_Êag
 =Ü¢_Êag & (~
mask
);

871 #ifde‡
DEBUG


872 
	`¥ötf
("l¢_Êag i†0x%x, buf„r_node->°‹edÔºüÔºüÔºüwhîêi†hﬁêi†0x%x, mask i†0x%x\n",
l¢_Êag
, 
buf„r_node
->
°‹ed
,
mask
);

878 i‡(
Êag
 == 1) {

879 i‡(
ssd
->
døm
->
buf„r
->
buf„r_hód
 !
buf„r_node
) {

880 i‡(
ssd
->
døm
->
buf„r
->
buf„r_èû
 =
buf„r_node
) {

881 
buf„r_node
->
LRU_lök_¥e
->
LRU_lök_√xt
 = 
NULL
;

882 
ssd
->
døm
->
buf„r
->
buf„r_èû
 = 
buf„r_node
->
LRU_lök_¥e
;

884 
buf„r_node
->
LRU_lök_¥e
->
LRU_lök_√xt
 = buffer_node->LRU_link_next;

885 
buf„r_node
->
LRU_lök_√xt
->
LRU_lök_¥e
 = buffer_node->LRU_link_pre;

887 
buf„r_node
->
LRU_lök_√xt
 = 
ssd
->
døm
->
buf„r
->
buf„r_hód
;

888 
ssd
->
døm
->
buf„r
->
buf„r_hód
->
LRU_lök_¥e
 = 
buf„r_node
;

889 
buf„r_node
->
LRU_lök_¥e
 = 
NULL
;

890 
ssd
->
døm
->
buf„r
->
buf„r_hód
 = 
buf„r_node
;

892 
ssd
->
døm
->
buf„r
->
ªad_hô
++;

893 
√w_ªque°
->
com∂ëe_l¢_cou¡
++;

894 } i‡(
Êag
 == 0) {

895 
ssd
->
døm
->
buf„r
->
ªad_miss_hô
++;

896 #ifde‡
DEBUG


898 
	`¥ötf
("buf„r->ªad_miss_hô++ i†%d\n",
ssd
->
døm
->
buf„r
->
ªad_miss_hô
);

902 
√ed_di°b_Êag
 =Çìd_di°b_Êag & 
l¢_Êag
;

904 
Êag
 = 0;

905 
l¢
++;

908 
ödex
 = (
Õn
 - 
fú°_Õn
Ë/ (32 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
);

909 
√w_ªque°
->
√ed_di°r_Êag
[
ödex
] =Çew_ªque°->√ed_di°r_Êag[ödex] | (
√ed_di°b_Êag


910 << (((
Õn
 - 
fú°_Õn
Ë% (32 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
)) * ssd->parameter->subpage_page));

911 
Õn
++;

914 } i‡(
√w_ªque°
->
›î©i⁄
 =
WRITE
) {

915 
Õn
 <
œ°_Õn
) {

916 
√ed_di°b_Êag
 = 
fuŒ_∑ge
;

917 
mask
 = ~(0xfffffff‡<< (
ssd
->
∑ømëî
->
sub∑ge_∑ge
));

918 
°©e
 = 
mask
;

920 i‡(
Õn
 =
fú°_Õn
) {

921 
off£t1
 = 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 - ((
Õn
 + 1Ë* ssd->∑ømëî->sub∑ge_∑gê- 
√w_ªque°
->
l¢
);

922 
°©e
 = sèã & (0xfffffff‡<< 
off£t1
);

924 i‡(
Õn
 =
œ°_Õn
) {

925 
off£t2
 = 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 -

926 ((
Õn
 + 1Ë* 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 - (
√w_ªque°
->
l¢
 +Çew_ªque°->
size
));

927 
°©e
 = sèã & (~(0xfffffff‡<< 
off£t2
));

929 #ifde‡ 
DEBUG


930 
	`¥ötf
("wrôêÕ¿°©êi†0x%x, off£t1 i†0x%x, off£t2 i†0x%x\n",
°©e
,
off£t1
, 
off£t2
 );

932 
ssd
 = 
	`ö£π2buf„r
(ssd, 
Õn
, 
°©e
, 
NULL
, 
√w_ªque°
);

933 
Õn
++;

936 
com∂ëe_Êag
 = 1;

937 
j
 = 0; j <(
œ°_Õn
 - 
fú°_Õn
 + 1Ë* 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 / 32; j++) {

938 i‡(
√w_ªque°
->
√ed_di°r_Êag
[
j
] != 0) {

939 
com∂ëe_Êag
 = 0;

942 #ifde‡
DEBUG


943 
	`¥ötf
("com∂ëe_Êag i†%d, (0 indiˇã†th©ÇŸ bêtŸÆly sevi˚d by buf„∏dúe˘ñy)\n", 
com∂ëe_Êag
);

949 i‡((
com∂ëe_Êag
 =1Ë&& (
√w_ªque°
->
subs
 =
NULL
)) {

950 
√w_ªque°
->
begö_time
 = 
ssd
->
cuºít_time
;

951 
√w_ªque°
->
ª•⁄£_time
 = 
ssd
->
cuºít_time
 + 1000;

954  
ssd
;

955 
	}
}

960 
	$Õn2µn
(
ssd_öfo
 *
ssd
, 
l¢
) {

961 
Õn
, 
µn
;

962 
íåy
 *
p_m≠
 = 
ssd
->
døm
->
m≠
->
m≠_íåy
;

963 #ifde‡
DEBUG_CURR_TIME


964 
	`¥ötf
("íã∏Õn2µn, cuºíàtime:%Œd\n",
ssd
->
cuºít_time
);

967 
Õn
 = 
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

968 
µn
 = (
p_m≠
[
Õn
]).
≤
;

969  
µn
;

970 
	}
}

978 
ssd_öfo
 *
	$di°ribuã
(
ssd_öfo
 *
ssd
) {

979 
°¨t
, 
íd
, 
fú°_l¢
, 
œ°_l¢
, 
Õn
, 
Êag
 = 0, 
Êag_©èched
 = 0, 
fuŒ_∑ge
;

980 
j
, 
k
, 
sub_size
;

981 
i
 = 0;

982 
ªque°
 *
ªq
;

983 
sub_ªque°
 *
sub
;

984 *
com∂t
;

986 #ifde‡
DEBUG_CURR_TIME


987 
	`¥ötf
("íã∏di°ribuã, cuºíàtime:%Œd\n",
ssd
->
cuºít_time
);

988 
	`¥ötf_ssd_ªque°_queue
(
ssd
);

990 
fuŒ_∑ge
 = ~(0xfffffff‡<< 
ssd
->
∑ømëî
->
sub∑ge_∑ge
);

992 
ªq
 = 
ssd
->
ªque°_èû
;

993 i‡(
ªq
->
ª•⁄£_time
 != 0) {

994 #ifde‡
DEBUG


995 
	`¥ötf
("req->response_time !=0\n");

997  
ssd
;

999 i‡(
ªq
->
›î©i⁄
 =
WRITE
) {

1000 #ifde‡
DEBUG


1001 
	`¥ötf
("ssd->req_tail's operation is write\n");

1003  
ssd
;

1006 i‡(
ªq
 !
NULL
) {

1007 i‡(
ªq
->
di°ri_Êag
 == 0) {

1009 i‡(
ªq
->
com∂ëe_l¢_cou¡
 !
ssd
->
ªque°_èû
->
size
) {

1010 
fú°_l¢
 = 
ªq
->
l¢
;

1011 
œ°_l¢
 = 
fú°_l¢
 + 
ªq
->
size
;

1012 
com∂t
 = 
ªq
->
√ed_di°r_Êag
;

1013 
°¨t
 = 
fú°_l¢
 - fú°_l¢ % 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

1014 
íd
 = (
œ°_l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 + 1) * ssd->parameter->subpage_page;

1015 
i
 = (
íd
 - 
°¨t
) / 32;

1017 
i
 >= 0) {

1024 
j
 = 0; j < 32 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
; j++) {

1025 
k
 = (
com∂t
[((
íd
 - 
°¨t
Ë/ 32 - 
i
)] >> (
ssd
->
∑ømëî
->
sub∑ge_∑ge
 * 
j
)Ë& 
fuŒ_∑ge
;

1026 i‡(
k
 != 0) {

1027 
Õn
 = 
°¨t
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 +

1028 ((
íd
 - 
°¨t
Ë/ 32 - 
i
Ë* 32 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 + 
j
;

1029 
sub_size
 = 
	`å™s„r_size
(
ssd
, 
k
, 
Õn
, 
ªq
);

1030 i‡(
sub_size
 == 0) {

1033 
sub
 = 
	`¸ót_sub_ªque°
(
ssd
, 
Õn
, 
sub_size
, 0, 
ªq
,Ñeq->
›î©i⁄
);

1039 
i
 = i - 1;

1049 
ªq
->
begö_time
 = 
ssd
->
cuºít_time
;

1050 
ªq
->
ª•⁄£_time
 = 
ssd
->
cuºít_time
 + 1000;

1055  
ssd
;

1056 
	}
}

1060 
	$ˇlc_ªq_¶ack_time
(
ªque°
 * 
ªq
)

1062 
ch™√l_max
, 
chù_max
;

1063 
sub_ªque°
 *
sub
;

1064 
sub_ªque°
 *
ãmp_sub
;

1065 
öt64_t
 
ãmp_time
;

1066 
sub
 = 
ªq
->
subs
;

1067 
ãmp_time
 = 0;

1069 
sub
 !
NULL
){

1070 if(
ãmp_time
 < 
sub
->
£rvi˚d_time
){

1072 
ãmp_time
 = 
sub
->
£rvi˚d_time
;

1073 
ch™√l_max
 = 
sub
->
loˇti⁄
->
ch™√l
;

1074 
chù_max
 = 
sub
->
loˇti⁄
->
chù
 ;

1075 
ãmp_sub
 = 
sub
;

1077 
sub
 = sub->
√xt_subs
;

1082 
ãmp_sub
->
œ°_sign
 = 1;

1084 
sub
 = 
ªq
->
subs
;

1085 
sub
 !
NULL
){

1087 
sub
->
¶ack_time
 = 
ãmp_time
 - sub->
£rvi˚d_time
;

1088 #ifde‡
DEBUG


1089 
	`¥ötf
("ªq %u, sub sœck_timêi†%d\n", 
ªq
, 
sub
->
¶ack_time
);

1092 
sub
 = sub->
√xt_subs
;

1093 #ifde‡
DEBUG


1094 if(
sub
->
¶ack_time
 == 0) {

1096 
	`¥ötf
("ch™√l_max %d, chù_max %d, sub->loˇti⁄->ch™√»%d, sub->loˇti⁄->chù %d,Åheyáª should bêthêßme\n", 
ch™√l_max
, 
chù_max
, 
sub
->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
);

1102 
	}
}

1107 
	$ª‹dîög_ªq
(
ªque°
 * 
ªq
 )

1141 
	}
}

1159 
	$åa˚_ouçut
(
ssd_öfo
 *
ssd
) {

1160 
Êag
 = 1;

1161 
öt64_t
 
°¨t_time
, 
íd_time
;

1162 
ªque°
 *
ªq
, *
¥e_node
;

1163 
sub_ªque°
 *
sub
, *
tmp
;

1165 #ifde‡
DEBUG_CURR_TIME


1166 
	`¥ötf
("íã∏åa˚_ouçut, cuºíàtime:%Œd\n",
ssd
->
cuºít_time
);

1169 
ªq
 = 
ssd
->
ªque°_queue
;

1170 
¥e_node
 = 
ªq
;

1171 
°¨t_time
 = 0;

1172 
íd_time
 = 0;

1174 i‡(
ªq
 =
NULL
){

1175 #ifde‡
DEBUG


1176 
	`¥ötf
("ssd->request_queue is NULL\n");

1180 
ªq
 !
NULL
) {

1181 #ifde‡
DEBUGTRACE_OUT


1182 
	`¥ötf
("⁄êítúêªque° begö judgög whëhî föishmíàhîê,ªqáddªs†i†%Œd\n",
ªq
);

1188 
Êag
 = 1;

1189 
°¨t_time
 = 0;

1190 
íd_time
 = 0;

1193 i‡(
ªq
->
ª•⁄£_time
 != 0) {

1196 #ifde‡
DEBUGTRACE_OUT


1197 
	`¥ötf
("only hasÉntireÑeq->response_time oneÅime,dont careÑeq's subrequest. \n");

1202 #ifde‡
DEBUGSUSPEND


1203 
	`¥ötf
("%16Œd %10d %6d %2d %16Œd %16Œd %10Œd\n", 
ªq
->
time
,Ñeq->
l¢
,Ñeq->
size
,

1204 
ªq
->
›î©i⁄
,Ñeq->
begö_time
,Ñeq->
ª•⁄£_time
,Ñeq->ª•⁄£_timê-Ñeq->
time
);

1207 
	`Ârötf
(
ssd
->
ouçutfûe
, "%16Œd %10d %6d %2d %16Œd %16Œd %10Œd\n", 
ªq
->
time
,Ñeq->
l¢
,Ñeq->
size
,

1208 
ªq
->
›î©i⁄
,Ñeq->
begö_time
,Ñeq->
ª•⁄£_time
,Ñeq->ª•⁄£_timê-Ñeq->
time
);

1209 
	`fÊush
(
ssd
->
ouçutfûe
);

1211 i‡(
ªq
->
ª•⁄£_time
 -Ñeq->
begö_time
 == 0) {

1212 
	`¥ötf
("theÑesponseÅime is 0?? \n");

1213 
	`gëch¨
();

1216 i‡(
ªq
->
›î©i⁄
 =
READ
) {

1217 
ssd
->
ªad_ªque°_cou¡
++;

1218 
ssd
->
ªad_avg
 = ssd->ªad_avg + (
ªq
->
ª•⁄£_time
 -Ñeq->
time
);

1220 
ssd
->
wrôe_ªque°_cou¡
++;

1221 
ssd
->
wrôe_avg
 = ssd->wrôe_avg + (
ªq
->
ª•⁄£_time
 -Ñeq->
time
);

1224 if(
ªq
 =
ssd
->
ªque°_queue
){

1227 
	`‰ì
(
ªq
->
√ed_di°r_Êag
);

1228 
ªq
->
√ed_di°r_Êag
 = 
NULL
;

1229 
	`‰ì
(
ªq
);

1230 
ssd
->
ªque°_queue_Àngth
--;

1232 
ssd
->
ªque°_queue
 = 
¥e_node
->
√xt_node
;

1233 
¥e_node
 =¥e_node->
√xt_node
;

1235 
ªq
 = 
¥e_node
;

1243 i‡(
ªq
 =
ssd
->
ªque°_èû
){

1245 
¥e_node
->
√xt_node
 = 
ªq
->next_node;

1246 
ssd
->
ªque°_èû
 = 
¥e_node
;

1248 
	`‰ì
(
ªq
->
√ed_di°r_Êag
);

1249 
ªq
->
√ed_di°r_Êag
 = 
NULL
;

1250 
	`‰ì
(
ªq
);

1251 
ªq
 = 
NULL
;

1252 
ssd
->
ªque°_queue_Àngth
--;

1258 
¥e_node
->
√xt_node
 = 
ªq
->next_node;

1259 
	`‰ì
(
ªq
->
√ed_di°r_Êag
);

1260 
ªq
->
√ed_di°r_Êag
 = 
NULL
;

1261 
	`‰ì
(
ªq
);

1262 
ªq
 = 
¥e_node
->
√xt_node
;

1263 
ssd
->
ªque°_queue_Àngth
--;

1277 
Êag
 = 1;

1278 
sub
 = 
ªq
->
subs
;

1281 #ifde‡
DEBUGSUSPEND


1282 
	`¥ötf
("respondingÅime hasÇo valueÉnterÉlse,haveÅo considerÅhe subÑequest here.\n");

1283 
	`¥ötf
("sub begö_timêi†%Œd, com∂ëe_timêi†%Œd,sub->√xà°©ê%d, sub_√xt_timê%Œd,Åhi†ªque°'†sub, o∆yÜôéê⁄êsub, o≥øti⁄[%d] 0 i†wrôe,Õ¿[%d],ch™√l[%d], chù[%d], dõ[%d], block[%d],Öage[%d]\n", 
sub
->
begö_time
, sub->
com∂ëe_time
, sub->
√xt_°©e
, sub->
√xt_°©e_¥edi˘_time
, sub->
›î©i⁄
, sub->
Õn
, sub->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1287 
sub
 !
NULL
) {

1288 i‡(
°¨t_time
 == 0)

1289 
°¨t_time
 = 
sub
->
begö_time
;

1290 i‡(
°¨t_time
 > 
sub
->
begö_time
)

1291 
°¨t_time
 = 
sub
->
begö_time
;

1292 i‡(
íd_time
 < 
sub
->
com∂ëe_time
)

1293 
íd_time
 = 
sub
->
com∂ëe_time
;

1294 i‡((
sub
->
cuºít_°©e
 =
SR_COMPLETE
Ë|| ((sub->
√xt_°©e
 == SR_COMPLETE) &&

1295 (
sub
->
√xt_°©e_¥edi˘_time
 <=

1296 
ssd
->
cuºít_time
)))

1298 #ifde‡
DEBUGSUSPEND


1299 
	`¥ötf
("sub begö_timêi†%Œd, com∂ëe_timêi†%Œd,sub->√xà°©ê%d, sub_√xt_timê%Œd,Åhi†ªque°'†sub, o∆yÜôéê⁄êsub, o≥øti⁄[%d] 0 i†wrôe,Õ¿[%d],ch™√l[%d], chù[%d], dõ[%d], block[%d],Öage[%d],hîêha†bì¿föished\n",
sub
->
begö_time
, sub->
com∂ëe_time
, sub->
√xt_°©e
, sub->
√xt_°©e_¥edi˘_time
, sub->
›î©i⁄
, sub->
Õn
, sub->
loˇti⁄
->
ch™√l
, sub->loˇti⁄->
chù
, sub->loˇti⁄->
dõ
, sub->loˇti⁄->
block
, sub->loˇti⁄->
∑ge
);

1302 
sub
 = sub->
√xt_subs
;

1304 
Êag
 = 0;

1309 #ifde‡
DEBUGSUSPEND


1310 
	`¥ötf
("Êag hîêi†%d, *** 1 món†föished.0Ço\n",
Êag
);

1312 i‡(
Êag
 == 1) {

1315 #ifde‡
DEBUGSUSPEND


1316 
	`¥ötf
("now begöÅÿ˛ó∏thêssd->ªq. %16Œd %10d %6d %2d %16Œd %16Œd %10Œd\n", 
ªq
->
time
,Ñeq->
l¢
,Ñeq->
size
,

1317 
ªq
->
›î©i⁄
, 
°¨t_time
, 
íd_time
,Énd_timê-Ñeq->
time
);

1320 
	`Ârötf
(
ssd
->
ouçutfûe
, "%16Œd %10d %6d %2d %16Œd %16Œd %10Œd\n", 
ªq
->
time
,Ñeq->
l¢
,Ñeq->
size
,

1321 
ªq
->
›î©i⁄
, 
°¨t_time
, 
íd_time
,Énd_timê-Ñeq->
time
);

1322 
	`fÊush
(
ssd
->
ouçutfûe
);

1324 i‡(
íd_time
 - 
°¨t_time
 == 0) {

1325 
	`¥ötf
("theÑesponseÅime is 0?? \n");

1326 
	`gëch¨
();

1329 i‡(
ªq
->
›î©i⁄
 =
READ
) {

1330 
ssd
->
ªad_ªque°_cou¡
++;

1331 
ssd
->
ªad_avg
 = ssd->ªad_avg + (
íd_time
 - 
ªq
->
time
);

1333 
ssd
->
wrôe_ªque°_cou¡
++;

1334 
ssd
->
wrôe_avg
 = ssd->wrôe_avg + (
íd_time
 - 
ªq
->
time
);

1338 if(
ªq
 =
ssd
->
ªque°_queue
){

1340 
	`‰ì
(
ªq
->
√ed_di°r_Êag
);

1341 
ªq
->
√ed_di°r_Êag
 = 
NULL
;

1342 
	`‰ì
(
ªq
);

1343 
ssd
->
ªque°_queue_Àngth
--;

1345 
ssd
->
ªque°_queue
 = 
¥e_node
->
√xt_node
;

1346 
¥e_node
 =¥e_node->
√xt_node
;

1348 
ªq
 = 
¥e_node
;

1356 i‡(
ªq
 =
ssd
->
ªque°_èû
){

1358 
¥e_node
->
√xt_node
 = 
ªq
->next_node;

1359 
ssd
->
ªque°_èû
 = 
¥e_node
;

1361 
	`‰ì
(
ªq
->
√ed_di°r_Êag
);

1362 
ªq
->
√ed_di°r_Êag
 = 
NULL
;

1363 
	`‰ì
(
ªq
);

1364 
ªq
 = 
NULL
;

1365 
ssd
->
ªque°_queue_Àngth
--;

1371 
¥e_node
->
√xt_node
 = 
ªq
->next_node;

1372 
	`‰ì
(
ªq
->
√ed_di°r_Êag
);

1373 
ªq
->
√ed_di°r_Êag
 = 
NULL
;

1374 
	`‰ì
(
ªq
);

1375 
ªq
 = 
¥e_node
->
√xt_node
;

1376 
ssd
->
ªque°_queue_Àngth
--;

1387 
¥e_node
 = 
ªq
;

1388 
ªq
 =Ñeq->
√xt_node
;

1395 
	}
}

1404 
	$°©i°ic_ouçut
(
ssd_öfo
 *
ssd
) {

1405 
Õn_cou¡
 = 0, 
i
, 
j
, 
k
, 
l
, 
m
, 
îa£
 = 0, 
∂™e_îa£
 = 0, 
ãmp_chù_ch™√l
 = 0;

1406 
gc_íîgy
 = 0.0;

1407 #ifde‡
DEBUG_CURR_TIME


1408 
	`¥ötf
("íã∏°©i°ic_ouçut, cuºíàtime:%Œd\n",
ssd
->
cuºít_time
);

1410 
ãmp_chù_ch™√l
 = 
ssd
->
∑ømëî
->
chù_num
 / ssd->∑ømëî->
ch™√l_numbî
;

1412 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

1413 
l
 = 0;Ü < 
ãmp_chù_ch™√l
;Ü++) {

1414 
j
 = 0; j < 
ssd
->
∑ømëî
->
dõ_chù
; j++) {

1415 
k
 = 0; k < 
ssd
->
∑ømëî
->
∂™e_dõ
; k++) {

1416 
∂™e_îa£
 = 0;

1417 
m
 = 0; m < 
ssd
->
∑ømëî
->
block_∂™e
; m++) {

1418 i‡(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
l
].
dõ_hód
[
j
].
∂™e_hód
[
k
].
blk_hód
[
m
].
îa£_cou¡
 > 0) {

1419 
îa£
 =Érase +

1420 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
l
].
dõ_hód
[
j
].
∂™e_hód
[
k
].
blk_hód
[
m
].
îa£_cou¡
;

1421 
∂™e_îa£
 +
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
l
].
dõ_hód
[
j
].
∂™e_hód
[
k
].
blk_hód
[
m
].
îa£_cou¡
;

1424 
	`Ârötf
(
ssd
->
ouçutfûe
, "thê%d ch™√l, %d chù, %d dõ, %dÖœ√ ha†: %13dÉø£ o≥øti⁄s\n", 
i
, 
l
, 
j
, 
k
, 
∂™e_îa£
);

1425 
	`Ârötf
(
ssd
->
°©i°icfûe
, "the %d channel, %d chip, %d die, %dÖlane has : %13dÉrase operations\n",

1426 
i
, 
l
, 
j
, 
k
, 
∂™e_îa£
);

1431 
	`Ârötf
(
ssd
->
ouçutfûe
, "\n");

1432 
	`Ârötf
(
ssd
->
ouçutfûe
, "\n");

1433 
	`Ârötf
(
ssd
->
ouçutfûe
, "---------------------------statistic data---------------------------\n");

1434 
	`Ârötf
(
ssd
->
ouçutfûe
, "g¯su•ídÅimes: %13d\n", ssd->
gc_su•íd_times
);

1435 
	`Ârötf
(
ssd
->
ouçutfûe
, "wrôêsu•ídÅimes: %13d\n", ssd->
wrôe_su•íd_times
);

1438 
	`Ârötf
(
ssd
->
ouçutfûe
, "möÜ¢: %13d\n", ssd->
mö_l¢
);

1439 
	`Ârötf
(
ssd
->
ouçutfûe
, "maxÜ¢: %13d\n", ssd->
max_l¢
);

1440 
	`Ârötf
(
ssd
->
ouçutfûe
, "ªad cou¡: %13d\n", ssd->
ªad_cou¡
);

1441 
	`Ârötf
(
ssd
->
ouçutfûe
, "¥ogøm cou¡: %13d", ssd->
¥ogøm_cou¡
);

1442 
	`Ârötf
(
ssd
->
ouçutfûe
, " includeÅhe flash write countÜeaded byÑeadÑequests\n");

1443 
	`Ârötf
(
ssd
->
ouçutfûe
, "thêªad o≥øti⁄Üóded by un-covîed upd©êcou¡: %13d\n", ssd->
upd©e_ªad_cou¡
);

1444 
	`Ârötf
(
ssd
->
ouçutfûe
, "îa£ cou¡: %13d\n", ssd->
îa£_cou¡
);

1445 
	`Ârötf
(
ssd
->
ouçutfûe
, "dúe˘Éø£ cou¡: %13d\n", ssd->
dúe˘_îa£_cou¡
);

1446 
	`Ârötf
(
ssd
->
ouçutfûe
, "c›y back cou¡: %13d\n", ssd->
c›y_back_cou¡
);

1447 
	`Ârötf
(
ssd
->
ouçutfûe
, "mu…i-∂™ê¥ogøm cou¡: %13d\n", ssd->
m_∂™e_¥og_cou¡
);

1448 
	`Ârötf
(
ssd
->
ouçutfûe
, "mu…i-∂™êªad cou¡: %13d\n", ssd->
m_∂™e_ªad_cou¡
);

1449 
	`Ârötf
(
ssd
->
ouçutfûe
, "öãæóvêwrôêcou¡: %13d\n", ssd->
öãæóve_cou¡
);

1450 
	`Ârötf
(
ssd
->
ouçutfûe
, "öãæóvêªad cou¡: %13d\n", ssd->
öãæóve_ªad_cou¡
);

1451 
	`Ârötf
(
ssd
->
ouçutfûe
, "öãæóvêtwÿ∂™ê™d o√Örogøm cou¡: %13d\n", ssd->
öãr_m∂™e_¥og_cou¡
);

1452 
	`Ârötf
(
ssd
->
ouçutfûe
, "öãæóvêtwÿ∂™êcou¡: %13d\n", ssd->
öãr_m∂™e_cou¡
);

1453 
	`Ârötf
(
ssd
->
ouçutfûe
, "g¯c›y back cou¡: %13d\n", ssd->
gc_c›y_back
);

1454 
	`Ârötf
(
ssd
->
ouçutfûe
, "wrôêÊash cou¡: %13d\n", ssd->
wrôe_Êash_cou¡
);

1455 
	`Ârötf
(
ssd
->
ouçutfûe
, "öãæóvêîa£ cou¡: %13d\n", ssd->
öãæóve_îa£_cou¡
);

1456 
	`Ârötf
(
ssd
->
ouçutfûe
, "mu…ùÀÖœ√Éø£ cou¡: %13d\n", ssd->
m∂™e_îa£_c⁄ut
);

1457 
	`Ârötf
(
ssd
->
ouçutfûe
, "öãæóvêmu…ùÀÖœ√Éø£ cou¡: %13d\n", ssd->
öãæóve_m∂™e_îa£_cou¡
);

1458 
	`Ârötf
(
ssd
->
ouçutfûe
, "ªadÑeque° cou¡: %13d\n", ssd->
ªad_ªque°_cou¡
);

1459 
	`Ârötf
(
ssd
->
ouçutfûe
, "wrôêªque° cou¡: %13d\n", ssd->
wrôe_ªque°_cou¡
);

1460 
	`Ârötf
(
ssd
->
ouçutfûe
, "ªadÑeque°ávîagêsize: %13f\n", ssd->
ave_ªad_size
);

1461 
	`Ârötf
(
ssd
->
ouçutfûe
, "wrôêªque°ávîagêsize: %13f\n", ssd->
ave_wrôe_size
);

1462 
	`Ârötf
(
ssd
->
ouçutfûe
, "ªadÑeque°ávîagêª•⁄£Åime: %Œd\n", ssd->
ªad_avg
 / ssd->
ªad_ªque°_cou¡
);

1463 
	`Ârötf
(
ssd
->
ouçutfûe
, "wrôêªque°ávîagêª•⁄£Åime: %Œd\n", ssd->
wrôe_avg
 / ssd->
wrôe_ªque°_cou¡
);

1464 
	`Ârötf
(
ssd
->
ouçutfûe
, "buf„∏ªad hôs: %13d\n", ssd->
døm
->
buf„r
->
ªad_hô
);

1465 
	`Ârötf
(
ssd
->
ouçutfûe
, "buf„∏ªad miss: %13d\n", ssd->
døm
->
buf„r
->
ªad_miss_hô
);

1466 
	`Ârötf
(
ssd
->
ouçutfûe
, "buf„∏wrôêhôs: %13d\n", ssd->
døm
->
buf„r
->
wrôe_hô
);

1467 
	`Ârötf
(
ssd
->
ouçutfûe
, "buf„∏wrôêmiss: %13d\n", ssd->
døm
->
buf„r
->
wrôe_miss_hô
);

1468 
	`Ârötf
(
ssd
->
ouçutfûe
, "îa£: %13d\n", 
îa£
);

1470 
	`Ârötf
(
ssd
->
ouçutfûe
, "‹igöÆÅŸÆÖage†i†%13d\n", ssd->
‹igöÆ_tŸÆ_∑ges_numbî
);

1471 
	`Ârötf
(
ssd
->
ouçutfûe
, "⁄lyÖª_¥o˚s£dÖage†numbî i†%13d\n", ssd->
a·î_¥e_¥o˚ss_∑ges_numbî
);

1472 
	`Ârötf
(
ssd
->
ouçutfûe
, "a·îÖª∞ro˚s£dÑódÖ¨à™dágedÖage†,ÅhíÜe·ÅhêavaûabÀÇumbî i†%13d\n", ssd->
a·î_¥e_¥o˚s£_™d_aged_∑ges_numbî
);

1474 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++){

1475 
l
 = 0;Ü < 
ãmp_chù_ch™√l
;Ü++) {

1476 
j
 = 0; j < 
ssd
->
∑ømëî
->
dõ_chù
; j++){

1477 
k
 = 0; k < 
ssd
->
∑ømëî
->
∂™e_dõ
; k++) {

1478 
	`Ârötf
(
ssd
->
ouçutfûe
, "ch™√»%d, chù:%d, dõ:%d,Öœ√:%d havê‰ìÖage: %d\n", 
i
, 
l
, 
j
, 
k
,

1479 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
l
].
dõ_hód
[
j
].
∂™e_hód
[
k
].
‰ì_∑ge
);

1480 
ssd
->
œ°_tŸÆ_avaûabÀ_∑ges_numbî
 +ssd->
ch™√l_hód
[
i
].
chù_hód
[
l
].
dõ_hód
[
j
].
∂™e_hód
[
k
].
‰ì_∑ge
;

1487 
	`Ârötf
(
ssd
->
ouçutfûe
, "œ°_tŸÆ_avaûabÀ_∑ge†numbî i†%13d\n", ssd->
œ°_tŸÆ_avaûabÀ_∑ges_numbî
);

1494 
	`fÊush
(
ssd
->
ouçutfûe
);

1496 
	`f˛o£
(
ssd
->
ouçutfûe
);

1499 
	`Ârötf
(
ssd
->
°©i°icfûe
, "\n");

1500 
	`Ârötf
(
ssd
->
°©i°icfûe
, "\n");

1501 
	`Ârötf
(
ssd
->
°©i°icfûe
, "---------------------------statistic data---------------------------\n");

1502 
	`Ârötf
(
ssd
->
°©i°icfûe
, "möÜ¢: %13d\n", ssd->
mö_l¢
);

1503 
	`Ârötf
(
ssd
->
°©i°icfûe
, "maxÜ¢: %13d\n", ssd->
max_l¢
);

1504 
	`Ârötf
(
ssd
->
°©i°icfûe
, "ªad cou¡: %13d\n", ssd->
ªad_cou¡
);

1505 
	`Ârötf
(
ssd
->
°©i°icfûe
, "¥ogøm cou¡: %13d", ssd->
¥ogøm_cou¡
);

1506 
	`Ârötf
(
ssd
->
°©i°icfûe
, " includeÅhe flash write countÜeaded byÑeadÑequests\n");

1507 
	`Ârötf
(
ssd
->
°©i°icfûe
, "thêªad o≥øti⁄Üóded by un-covîed upd©êcou¡: %13d\n", ssd->
upd©e_ªad_cou¡
);

1508 
	`Ârötf
(
ssd
->
°©i°icfûe
, "îa£ cou¡: %13d\n", ssd->
îa£_cou¡
);

1509 
	`Ârötf
(
ssd
->
°©i°icfûe
, "dúe˘Éø£ cou¡: %13d\n", ssd->
dúe˘_îa£_cou¡
);

1510 
	`Ârötf
(
ssd
->
°©i°icfûe
, "c›y back cou¡: %13d\n", ssd->
c›y_back_cou¡
);

1511 
	`Ârötf
(
ssd
->
°©i°icfûe
, "mu…i-∂™ê¥ogøm cou¡: %13d\n", ssd->
m_∂™e_¥og_cou¡
);

1512 
	`Ârötf
(
ssd
->
°©i°icfûe
, "mu…i-∂™êªad cou¡: %13d\n", ssd->
m_∂™e_ªad_cou¡
);

1513 
	`Ârötf
(
ssd
->
°©i°icfûe
, "öãæóvêcou¡: %13d\n", ssd->
öãæóve_cou¡
);

1514 
	`Ârötf
(
ssd
->
°©i°icfûe
, "öãæóvêªad cou¡: %13d\n", ssd->
öãæóve_ªad_cou¡
);

1515 
	`Ârötf
(
ssd
->
°©i°icfûe
, "öãæóvêtwÿ∂™ê™d o√Örogøm cou¡: %13d\n", ssd->
öãr_m∂™e_¥og_cou¡
);

1516 
	`Ârötf
(
ssd
->
°©i°icfûe
, "öãæóvêtwÿ∂™êcou¡: %13d\n", ssd->
öãr_m∂™e_cou¡
);

1517 
	`Ârötf
(
ssd
->
°©i°icfûe
, "g¯c›y back cou¡: %13d\n", ssd->
gc_c›y_back
);

1518 
	`Ârötf
(
ssd
->
°©i°icfûe
, "wrôêÊash cou¡: %13d\n", ssd->
wrôe_Êash_cou¡
);

1519 
	`Ârötf
(
ssd
->
°©i°icfûe
, "wa°ê∑gêcou¡: %13d\n", ssd->
wa°e_∑ge_cou¡
);

1520 
	`Ârötf
(
ssd
->
°©i°icfûe
, "öãæóvêîa£ cou¡: %13d\n", ssd->
öãæóve_îa£_cou¡
);

1521 
	`Ârötf
(
ssd
->
°©i°icfûe
, "mu…ùÀÖœ√Éø£ cou¡: %13d\n", ssd->
m∂™e_îa£_c⁄ut
);

1522 
	`Ârötf
(
ssd
->
°©i°icfûe
, "öãæóvêmu…ùÀÖœ√Éø£ cou¡: %13d\n", ssd->
öãæóve_m∂™e_îa£_cou¡
);

1523 
	`Ârötf
(
ssd
->
°©i°icfûe
, "ªadÑeque° cou¡: %13d\n", ssd->
ªad_ªque°_cou¡
);

1524 
	`Ârötf
(
ssd
->
°©i°icfûe
, "wrôêªque° cou¡: %13d\n", ssd->
wrôe_ªque°_cou¡
);

1525 
	`Ârötf
(
ssd
->
°©i°icfûe
, "ªadÑeque°ávîagêsize: %13f\n", ssd->
ave_ªad_size
);

1526 
	`Ârötf
(
ssd
->
°©i°icfûe
, "wrôêªque°ávîagêsize: %13f\n", ssd->
ave_wrôe_size
);

1527 
	`Ârötf
(
ssd
->
°©i°icfûe
, "ªadÑeque°ávîagêª•⁄£Åime: %Œd\n", ssd->
ªad_avg
 / ssd->
ªad_ªque°_cou¡
);

1528 
	`Ârötf
(
ssd
->
°©i°icfûe
, "writeÑequestáverageÑesponseÅime: %lld\n",

1529 
ssd
->
wrôe_avg
 / ssd->
wrôe_ªque°_cou¡
);

1530 
	`Ârötf
(
ssd
->
°©i°icfûe
, "buf„∏ªad hôs: %13d\n", ssd->
døm
->
buf„r
->
ªad_hô
);

1531 
	`Ârötf
(
ssd
->
°©i°icfûe
, "buf„∏ªad miss: %13d\n", ssd->
døm
->
buf„r
->
ªad_miss_hô
);

1532 
	`Ârötf
(
ssd
->
°©i°icfûe
, "buf„∏wrôêhôs: %13d\n", ssd->
døm
->
buf„r
->
wrôe_hô
);

1533 
	`Ârötf
(
ssd
->
°©i°icfûe
, "buf„∏wrôêmiss: %13d\n", ssd->
døm
->
buf„r
->
wrôe_miss_hô
);

1534 
	`Ârötf
(
ssd
->
°©i°icfûe
, "îa£: %13d\n", 
îa£
);

1537 
	`fÊush
(
ssd
->
°©i°icfûe
);

1539 
	`f˛o£
(
ssd
->
°©i°icfûe
);

1540 
	}
}

1546 
	$size
(
°‹ed
) {

1547 
i
, 
tŸÆ
 = 0, 
mask
 = 0x80000000;

1549 #ifde‡
DEBUG


1550 
	`¥ötf
("enter size\n");

1552 
i
 = 1; i <= 32; i++) {

1553 i‡(
°‹ed
 & 
mask
Ë
tŸÆ
++;

1554 
°‹ed
 <<= 1;

1556 #ifde‡
DEBUG


1557 
	`¥ötf
("ÀavêsizêtŸÆÜ¢Çumbî i¿ªque° : %d\n",
tŸÆ
);

1559  
tŸÆ
;

1560 
	}
}

1569 
	$å™s„r_size
(
ssd_öfo
 *
ssd
, 
√ed_di°ribuã
, 
Õn
, 
ªque°
 *
ªq
) {

1570 
fú°_Õn
, 
œ°_Õn
, 
°©e
, 
å™s_size
;

1571 
mask
 = 0, 
off£t1
 = 0, 
off£t2
 = 0;

1573 
fú°_Õn
 = 
ªq
->
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

1574 
œ°_Õn
 = (
ªq
->
l¢
 +Ñeq->
size
 - 1Ë/ 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

1576 
mask
 = ~(0xfffffff‡<< (
ssd
->
∑ømëî
->
sub∑ge_∑ge
));

1577 
°©e
 = 
mask
;

1578 i‡(
Õn
 =
fú°_Õn
) {

1579 
off£t1
 = 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 - ((
Õn
 + 1Ë* ssd->∑ømëî->sub∑ge_∑gê- 
ªq
->
l¢
);

1580 
°©e
 = sèã & (0xfffffff‡<< 
off£t1
);

1582 i‡(
Õn
 =
œ°_Õn
) {

1583 
off£t2
 = 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 - ((
Õn
 + 1Ë* ssd->∑ømëî->sub∑ge_∑gê- (
ªq
->
l¢
 +Ñeq->
size
));

1584 
°©e
 = sèã & (~(0xfffffff‡<< 
off£t2
));

1587 
å™s_size
 = 
	`size
(
°©e
 & 
√ed_di°ribuã
);

1589  
å™s_size
;

1590 
	}
}

1601 
öt64_t
 
	$föd_√¨e°_evít
(
ssd_öfo
 *
ssd
) {

1602 
i
, 
j
;

1603 
öt64_t
 
time
 = 
MAX_INT64
;

1604 
öt64_t
 
time1
 = 
MAX_INT64
;

1605 
öt64_t
 
time2
 = 
MAX_INT64
;

1606 #ifde‡
DEBUG_CURR_TIME


1607 
	`¥ötf
("íã∏föd_√¨e°_evít, ssd->cuºít_timêi†%Œd\n",
ssd
->
cuºít_time
);

1609 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

1611 
	`¥ötf
("ch™√l[%d].√xt_°©êi†0x%x,ssd->ch™√l_hód[%d].√xt_°©e_¥edi˘_timêi†%Œd, ch™√l[%d].cuºít_°©êi†0x%x,ssd->ch™√l_hód[%d].cuºít_timêi†%Œd\n",
i
,
ssd
->
ch™√l_hód
[i].
√xt_°©e
,i,ssd->ch™√l_hód[i].
√xt_°©e_¥edi˘_time
 ,i,ssd->ch™√l_hód[i].
cuºít_°©e
,i,ssd->ch™√l_hód[i].
cuºít_time
 );

1613 
j
 = 0; j < 
ssd
->
∑ømëî
->
chù_ch™√l
[
i
]; j++) {

1615 
	`¥ötf
("ssd->ch™√l_hód[%d].chù_hód[%d].√xt_°©e_¥edi˘_timêi†%Œd, ssd->ch™√l_hód[%d].chù_hód[%d].√xt_°©êi†0x%x ssd->ch™√l_hód[%d].chù_hód[%d].cuºít_timêi†%Œd, ssd->ch™√l_hód[%d].chù_hód[%d].cuºít_°©êi†0x%x \n", 
i
,
j
,
ssd
->
ch™√l_hód
[i].
chù_hód
[j].
√xt_°©e_¥edi˘_time
 ,i,j,ssd->ch™√l_hód[i].chù_hód[j].
√xt_°©e
 , i,j,ssd->ch™√l_hód[i].chù_hód[j].
cuºít_time
 ,i,j,ssd->ch™√l_hód[i].chù_hód[j].
cuºít_°©e
 );

1624 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

1625 i‡(
ssd
->
ch™√l_hód
[
i
].
√xt_°©e
 =
CHANNEL_IDLE
)

1626 i‡(
time1
 > 
ssd
->
ch™√l_hód
[
i
].
√xt_°©e_¥edi˘_time
)

1627 i‡(
ssd
->
ch™√l_hód
[
i
].
√xt_°©e_¥edi˘_time
 > ssd->
cuºít_time
)

1628 
time1
 = 
ssd
->
ch™√l_hód
[
i
].
√xt_°©e_¥edi˘_time
;

1629 
j
 = 0; j < 
ssd
->
∑ømëî
->
chù_ch™√l
[
i
]; j++) {

1634 i‡(
time2
 > 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
√xt_°©e_¥edi˘_time
)

1635 i‡(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
√xt_°©e_¥edi˘_time
 > ssd->
cuºít_time
)

1636 
time2
 = 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
√xt_°©e_¥edi˘_time
;

1647 #ifde‡
DEBUG


1648 
	`¥ötf
("ªsu…Åime1 i†%Œd,Åime2 i†%Œd\n", 
time1
, 
time2
);

1652 
time
 = (
time1
 > 
time2
) ?Åime2 :Åime1;

1653  
time
;

1654 
	}
}

1659 
	$‰ì_Æl_node
(
ssd_öfo
 *
ssd
) {

1660 
i
, 
j
, 
k
, 
l
, 
n
;

1661 
buf„r_group
 *
±
 = 
NULL
;

1662 
dúe˘_îa£
 *
îa£_node
 = 
NULL
;

1663 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++) {

1664 
j
 = 0; j < 
ssd
->
∑ømëî
->
chù_ch™√l
[0]; j++) {

1665 
k
 = 0; k < 
ssd
->
∑ømëî
->
dõ_chù
; k++) {

1666 
l
 = 0;Ü < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ü++) {

1667 
n
 = 0;Ç < 
ssd
->
∑ømëî
->
block_∂™e
;Ç++) {

1668 
	`‰ì
(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
n
].
∑ge_hód
);

1669 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
n
].
∑ge_hód
 = 
NULL
;

1671 
	`‰ì
(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
);

1672 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
 = 
NULL
;

1673 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
îa£_node
 !
NULL
) {

1674 
îa£_node
 = 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].erase_node;

1675 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
îa£_node
 =Éø£_node->
√xt_node
;

1676 
	`‰ì
(
îa£_node
);

1677 
îa£_node
 = 
NULL
;

1681 
	`‰ì
(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
);

1682 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
 = 
NULL
;

1684 
	`‰ì
(
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
);

1685 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
 = 
NULL
;

1687 
	`‰ì
(
ssd
->
ch™√l_hód
[
i
].
chù_hód
);

1688 
ssd
->
ch™√l_hód
[
i
].
chù_hód
 = 
NULL
;

1690 
	`‰ì
(
ssd
->
ch™√l_hód
);

1691 
ssd
->
ch™√l_hód
 = 
NULL
;

1693 
	`avlTªeDe°roy
(
ssd
->
døm
->
buf„r
);

1694 
ssd
->
døm
->
buf„r
 = 
NULL
;

1696 
	`‰ì
(
ssd
->
døm
->
m≠
->
m≠_íåy
);

1697 
ssd
->
døm
->
m≠
->
m≠_íåy
 = 
NULL
;

1698 
	`‰ì
(
ssd
->
døm
->
m≠
);

1699 
ssd
->
døm
->
m≠
 = 
NULL
;

1700 
	`‰ì
(
ssd
->
døm
);

1701 
ssd
->
døm
 = 
NULL
;

1702 
	`‰ì
(
ssd
->
∑ømëî
);

1703 
ssd
->
∑ømëî
 = 
NULL
;

1705 
	`‰ì
(
ssd
);

1706 
ssd
 = 
NULL
;

1707 
	}
}

1714 
ssd_öfo
 *
	$make_aged
(
ssd_öfo
 *
ssd
) {

1715 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
µn
;

1716 
thªshould
, 
Êag
 = 0;

1718 i‡(
ssd
->
∑ømëî
->
aged
 == 1) {

1720 
thªshould
 = (Ë(
ssd
->
∑ømëî
->
block_∂™e
 * ssd->∑ømëî->
∑ge_block
 * ssd->∑ømëî->
aged_øtio
);

1721 
i
 = 0; i < 
ssd
->
∑ømëî
->
ch™√l_numbî
; i++)

1722 
j
 = 0; j < 
ssd
->
∑ømëî
->
chù_ch™√l
[
i
]; j++)

1723 
k
 = 0; k < 
ssd
->
∑ømëî
->
dõ_chù
; k++)

1724 
l
 = 0;Ü < 
ssd
->
∑ømëî
->
∂™e_dõ
;Ü++) {

1725 
Êag
 = 0;

1726 
m
 = 0; m < 
ssd
->
∑ømëî
->
block_∂™e
; m++) {

1727 i‡(
Êag
 >
thªshould
) {

1730 
n
 = 0;Ç < (
ssd
->
∑ømëî
->
∑ge_block
 * ssd->∑ømëî->
aged_øtio
 + 1);Ç++) {

1731 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
m
].
∑ge_hód
[
n
].
vÆid_°©e
 = 0;

1732 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
m
].
∑ge_hód
[
n
].
‰ì_°©e
 = 0;

1733 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
m
].
∑ge_hód
[
n
].
Õn
 = 0;

1734 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
m
].
‰ì_∑ge_num
--;

1735 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
m
].
övÆid_∑ge_num
++;

1736 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
blk_hód
[
m
].
œ°_wrôe_∑ge
++;

1737 
ssd
->
ch™√l_hód
[
i
].
chù_hód
[
j
].
dõ_hód
[
k
].
∂™e_hód
[
l
].
‰ì_∑ge
--;

1738 
Êag
++;

1740 
µn
 = 
	`föd_µn
(
ssd
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
);

1741 #ifde‡
DEBUGONLYGC


1749  
ssd
;

1752  
ssd
;

1753 
	}
}

1760 
ssd_öfo
 *
	$no_buf„r_di°ribuã
(
ssd_öfo
 *
ssd
) {

1761 
l¢
, 
Õn
, 
œ°_Õn
, 
fú°_Õn
, 
com∂ëe_Êag
 = 0, 
°©e
;

1762 
Êag
 = 0, 
Êag1
 = 1, 
a˘ive_ªgi⁄_Êag
 = 0;

1763 
ªque°
 *
ªq
 = 
NULL
;

1764 
sub_ªque°
 *
sub
 = 
NULL
, *
sub_r
 = NULL, *
upd©e
 = NULL;

1765 
loˇl
 *
loc
 = 
NULL
;

1766 
ch™√l_öfo
 *
p_ch
 = 
NULL
;

1767 
mask
 = 0;

1768 
off£t1
 = 0, 
off£t2
 = 0;

1769 
sub_size
 = 0;

1770 
sub_°©e
 = 0;

1771 
ssd
->
døm
->
cuºít_time
 = ssd->current_time;

1773 #ifde‡
DEBUG_CURR_TIME


1774 
	`¥ötf
("cuºít_timêi†%Œd i¿no_buf„r_di°ribuã fun˘i⁄\n", 
ssd
->
cuºít_time
);

1776 
ªq
 = 
ssd
->
ªque°_èû
;

1777 
l¢
 = 
ªq
->lsn;

1778 
Õn
 = 
ªq
->
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

1779 
œ°_Õn
 = (
ªq
->
l¢
 +Ñeq->
size
 - 1Ë/ 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

1780 
fú°_Õn
 = 
ªq
->
l¢
 / 
ssd
->
∑ømëî
->
sub∑ge_∑ge
;

1782 i‡(
ªq
->
›î©i⁄
 =
READ
) {

1783 
Õn
 <
œ°_Õn
) {

1784 
sub_°©e
 = (
ssd
->
døm
->
m≠
->
m≠_íåy
[
Õn
].
°©e
 & 0x7fffffff);

1785 
sub_size
 = 
	`size
(
sub_°©e
);

1786 
sub
 = 
	`¸ót_sub_ªque°
(
ssd
, 
Õn
, 
sub_size
, 
sub_°©e
, 
ªq
,Ñeq->
›î©i⁄
);

1787 
Õn
++;

1789 } i‡(
ªq
->
›î©i⁄
 =
WRITE
) {

1790 
Õn
 <
œ°_Õn
) {

1791 
mask
 = ~(0xfffffff‡<< (
ssd
->
∑ømëî
->
sub∑ge_∑ge
));

1792 
°©e
 = 
mask
;

1793 i‡(
Õn
 =
fú°_Õn
) {

1794 
off£t1
 = 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 - ((
Õn
 + 1Ë* ssd->∑ømëî->sub∑ge_∑gê- 
ªq
->
l¢
);

1795 
°©e
 = sèã & (0xfffffff‡<< 
off£t1
);

1797 i‡(
Õn
 =
œ°_Õn
) {

1798 
off£t2
 = 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 -

1799 ((
Õn
 + 1Ë* 
ssd
->
∑ømëî
->
sub∑ge_∑ge
 - (
ªq
->
l¢
 +Ñeq->
size
));

1800 
°©e
 = sèã & (~(0xfffffff‡<< 
off£t2
));

1802 
sub_size
 = 
	`size
(
°©e
);

1804 
sub
 = 
	`¸ót_sub_ªque°
(
ssd
, 
Õn
, 
sub_size
, 
°©e
, 
ªq
,Ñeq->
›î©i⁄
);

1805 
Õn
++;

1809  
ssd
;

1810 
	}
}

	@/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/ssd.h

18 
	~<°dlib.h
>

19 
	~<°dio.h
>

20 
	~<time.h
>

21 
	~<°rög.h
>

22 
	~<sys/ty≥s.h
>

23 
	~"öôülize.h
"

24 
	~"Êash.h
"

25 
	~"∑gem≠.h
"

27 
	#MAX_INT64
 0x7ffffffffffffffÊl

	)

36 
¥ötfsub_ªque°_°©us
(
ssd_öfo
 *
ssd
);

37 
¥ötf_ssd_ªque°_queue
(
ssd_öfo
 *
ssd
);

39 
¥ötf_ssd_gc_node
(
ssd_öfo
 *
ssd
);

41 
judgög_ªad_ö_gc_chù
(
ssd_öfo
 *
ssd
, 
ch™√l
);

42 
¥ötf_evîy_chù_ªad_subªque°
(
ssd_öfo
 *
ssd
);

43 
¥ötf_evîy_chù_°©ic_subªque°
(
ssd_öfo
 *
ssd
);

45 
ˇlc_ªq_¶ack_time
(
ªque°
 * 
ªq
);

47 
¥ötf_gc_node_öf‹m©i⁄
(
gc_›î©i⁄
* 
gc_node
);

49 
ssd_öfo
 *
simuœã
(ssd_info *);

51 
gë_ªque°s
(
ssd_öfo
 *);

53 
ssd_öfo
 *
buf„r_m™agemít
(ssd_info *);

55 
Õn2µn
(
ssd_öfo
 *, 
l¢
);

57 
ssd_öfo
 *
di°ribuã
(ssd_info *);

59 
åa˚_ouçut
(
ssd_öfo
 *);

61 
°©i°ic_ouçut
(
ssd_öfo
 *);

63 
size
();

65 
å™s„r_size
(
ssd_öfo
 *, , , 
ªque°
 *);

67 
öt64_t
 
föd_√¨e°_evít
(
ssd_öfo
 *);

69 
‰ì_Æl_node
(
ssd_öfo
 *);

71 
ssd_öfo
 *
make_aged
(ssd_info *);

73 
ssd_öfo
 *
no_buf„r_di°ribuã
(ssd_info *);

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@avlTree.h

1 #i‚de‡
AVLTREE_H


2 
	#AVLTREE_H
 10000

	)

4 
	~<°rög.h
>

5 
	~<mÆloc.h
>

6 
	~<°dlib.h
>

8 
	#AVL_NULL
 (
TREE_NODE
 *)0

	)

10 
	#EH_FACTOR
 0

	)

11 
	#LH_FACTOR
 1

	)

12 
	#RH_FACTOR
 -1

	)

13 
	#LEFT_MINUS
 0

	)

14 
	#RIGHT_MINUS
 1

	)

17 
	#ORDER_LIST_WANTED


	)

19 
	#INSERT_PREV
 0

	)

20 
	#INSERT_NEXT
 1

	)

22 
	s_AVL_TREE_NODE
 {

23 #ifde‡
ORDER_LIST_WANTED


24 
_AVL_TREE_NODE
 *
	m¥ev
;

25 
_AVL_TREE_NODE
 *
	m√xt
;

27 
_AVL_TREE_NODE
 *
	måì_roŸ
;

28 
_AVL_TREE_NODE
 *
	mÀ·_chûd
;

29 
_AVL_TREE_NODE
 *
	mright_chûd
;

30 
	mbf
;

31 } 
	tTREE_NODE
;

33 
	sbuf„r_öfo
 {

34 
	mªad_hô
;

35 
	mªad_miss_hô
;

36 
	mwrôe_hô
;

37 
	mwrôe_miss_hô
;

39 
buf„r_group
 *
	mbuf„r_hód
;

40 
buf„r_group
 *
	mbuf„r_èû
;

41 
TREE_NODE
 *
	mpTªeHódî
;

43 
	mmax_buf„r_£˘‹
;

44 
	mbuf„r_£˘‹_cou¡
;

46 #ifde‡
ORDER_LIST_WANTED


47 
TREE_NODE
 *
	mpLi°Hódî
;

48 
TREE_NODE
 *
	mpLi°Taû
;

50 
	mcou¡
;

51 (*
	mkeyCom∑ª
)(
	mTREE_NODE
 *, TREE_NODE *);

53 (*
	m‰ì
)(
	mTREE_NODE
 *);

54 } 
	ttAVLTªe
;

57 
avlTªeHigh
(
TREE_NODE
 *);

59 
avlTªeCheck
(
tAVLTªe
 *, 
TREE_NODE
 *);

61 
R_RŸ©e
(
TREE_NODE
 **);

63 
L_RŸ©e
(
TREE_NODE
 **);

65 
Le·BÆ™˚
(
TREE_NODE
 **);

67 
RightBÆ™˚
(
TREE_NODE
 **);

69 
avlDñBÆ™˚
(
tAVLTªe
 *, 
TREE_NODE
 *, );

71 
AVL_TREE_LOCK
(
tAVLTªe
 *, );

73 
AVL_TREE_UNLOCK
(
tAVLTªe
 *);

75 
AVL_TREENODE_FREE
(
tAVLTªe
 *, 
TREE_NODE
 *);

77 #ifde‡
ORDER_LIST_WANTED


79 
‹dîLi°In£π
(
tAVLTªe
 *, 
TREE_NODE
 *, TREE_NODE *, );

81 
‹dîLi°Remove
(
tAVLTªe
 *, 
TREE_NODE
 *);

83 
TREE_NODE
 *
avlTªeFú°
(
tAVLTªe
 *);

85 
TREE_NODE
 *
avlTªeLa°
(
tAVLTªe
 *);

87 
TREE_NODE
 *
avlTªeNext
(TREE_NODE *
pNode
);

89 
TREE_NODE
 *
avlTªePªv
(TREE_NODE *
pNode
);

93 
avlTªeIn£π
(
tAVLTªe
 *, 
TREE_NODE
 **, TREE_NODE *, *);

95 
avlTªeRemove
(
tAVLTªe
 *, 
TREE_NODE
 *);

97 
TREE_NODE
 *
avlTªeLookup
(
tAVLTªe
 *, TREE_NODE *, TREE_NODE *);

99 
tAVLTªe
 *
avlTªeCª©e
(*, *);

101 
avlTªeDe°roy
(
tAVLTªe
 *);

103 
avlTªeFlush
(
tAVLTªe
 *);

105 
avlTªeAdd
(
tAVLTªe
 *, 
TREE_NODE
 *);

107 
avlTªeDñ
(
tAVLTªe
 *, 
TREE_NODE
 *);

109 
TREE_NODE
 *
avlTªeFöd
(
tAVLTªe
 *, TREE_NODE *);

111 
avlTªeCou¡
(
tAVLTªe
 *);

	@flash.h

19 #i‚de‡
FLASH_H


20 
	#FLASH_H
 100000

	)

22 
	~<°dlib.h
>

23 
	~"∑gem≠.h
"

25 
ssd_öfo
 *
¥o˚ss
(ssd_info *);

27 
ssd_öfo
 *
ö£π2buf„r
(ssd_öfÿ*, , , 
sub_ªque°
 *, 
ªque°
 *);

29 
ssd_öfo
 *

30 
Êash_∑ge_°©e_modify
(
ssd_öfo
 *, 
sub_ªque°
 *, , , , ,

33 
ssd_öfo
 *

34 
make_ßme_Àvñ
(
ssd_öfo
 *, , , , , , );

36 
föd_Àvñ_∑ge
(
ssd_öfo
 *, , , , 
sub_ªque°
 *,

37 
sub_ªque°
 *);

39 
make_Àvñ_∑ge
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub0
, sub_ªque° *
sub1
);

40 
ssd_öfo
 *
compuã_£rve_time
(ssd_öfÿ*
ssd
, 
ch™√l
, 
chù
, 
dõ
,

41 
sub_ªque°
 **
subs
, 
subs_cou¡
, 
comm™d
);

44 
gë_µn_f‹_adv™˚d_comm™ds
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
sub_ªque°
 **
subs
,

45 
subs_cou¡
, 
comm™d
);

47 
gë_µn_f‹_n‹mÆ_comm™d
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
sub_ªque°
 *
sub
);

49 
ssd_öfo
 *
dy«mic_adv™˚d_¥o˚ss
(ssd_öfÿ*
ssd
, 
ch™√l
, 
chù
);

51 
sub_ªque°
 *
föd_two_∂™e_∑ge
(
ssd_öfo
 *, sub_request *);

53 
sub_ªque°
 *
föd_öãæóve_ªad_∑ge
(
ssd_öfo
 *, sub_request *);

55 
föd_tw›œ√_wrôe_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_tw›œ√_⁄e
,

56 
sub_ªque°
 *
sub_tw›œ√_two
);

58 
föd_öãæóve_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_öãæóve_⁄e
,

59 
sub_ªque°
 *
sub_öãæóve_two
);

61 
sub_ªque°
 *

62 
föd_ªad_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
);

64 
sub_ªque°
 *
föd_wrôe_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
);

66 
sub_ªque°
 *

67 
¸ót_sub_ªque°
(
ssd_öfo
 *
ssd
, 
Õn
, 
size
, 
°©e
, 
ªque°
 *
ªq
,

68 
›î©i⁄
);

70 
sub_ªque°
 *

71 
föd_öãæóve_tw›œ√_∑ge
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
⁄ïage
, 
comm™d
);

74 
föd_öãæóve_tw›œ√_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_ªque°_⁄e
,

75 
sub_ªque°
 *
sub_ªque°_two
, 
comm™d
);

77 
ssd_öfo
 *
dñëe_‰om_ch™√l
(ssd_öfÿ*
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub_ªq
);

79 
ssd_öfo
 *

80 
un_gªed_öãæóve_c›yback
(
ssd_öfo
 *, , , , 
sub_ªque°
 *,

81 
sub_ªque°
 *);

83 
ssd_öfo
 *
un_gªed_c›yback
(ssd_öfÿ*, , , , 
sub_ªque°
 *);

86 
föd_a˘ive_block
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

88 
wrôe_∑ge
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

89 
a˘ive_block
, *
µn
);

91 
Æloˇã_loˇti⁄
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub_ªq
);

94 
go_⁄e_°ï
(
ssd_öfo
 *
ssd
, 
sub_ªque°
 *
sub1
, sub_ªque° *
sub2
, 
aim_°©e
,

95 
comm™d
);

97 
£rvi˚s_2_r_cmd_å™s_™d_com∂ëe
(
ssd_öfo
 *
ssd
);

99 
£rvi˚s_2_r_waô
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

100 *
ch™ge_cuºít_time_Êag
);

102 
£rvi˚s_2_r_d©a_å™s
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

103 *
ch™ge_cuºít_time_Êag
);

105 
£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,

106 *
ch™ge_cuºít_time_Êag
);

109 
£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
, *
ch™ge_cuºít_time_Êag
);

110 
£rvi˚s_2_wrôe_busy_ö_chù
(
ssd_öfo
 *
ssd
);

111 
£rvi˚s_2_gc_busy_ö_chù
(
ssd_öfo
 *
ssd
);

112 
gc_åy_to_su•íd_fun˘i⁄
(
ssd_öfo
 *
ssd
, 
gc_›î©i⁄
 *
gc_node
, 
ch™√l
, 
chù
, 
cuºít_°©e
, 
√xt_°©e
, 
time
);

113 
åy_to_ª°‹e_gc_fun˘i⁄
(
ssd_öfo
 *
ssd
, 
gc_›î©i⁄
 *
gc_node
, 
ch™√l
, 
chù
);

115 
åy_to_ª°‹e_wrôe_fun˘i⁄
(
ssd_öfo
 *
ssd
);

117 
√w_£rvi˚s_2_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, *
ch™√l_busy_Êag
,*
ch™ge_cuºít_time_Êag
);

121 
dñëe_w_sub_ªque°
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
sub_ªque°
 *
sub
);

123 
c›y_back
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub_ªque°
 *
sub
);

126 
°©ic_wrôe
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
sub_ªque°
 *
sub
);

	@initialize.h

18 #i‚de‡
INITIALIZE_H


19 
	#INITIALIZE_H
 10000

	)

21 
	~<°dio.h
>

22 
	~<°rög.h
>

23 
	~<°dlib.h
>

24 
	~<time.h
>

25 
	~<˘y≥.h
>

26 
	~<sys/ty≥s.h
>

27 
	~"avlTªe.h
"

29 
	#SECTOR
 512

	)

30 
	#BUFSIZE
 200

	)

32 
	#DYNAMIC_ALLOCATION
 0

	)

33 
	#STATIC_ALLOCATION
 1

	)

35 
	#INTERLEAVE
 0

	)

36 
	#TWO_PLANE
 1

	)

38 
	#NORMAL
 2

	)

39 
	#INTERLEAVE_TWO_PLANE
 3

	)

40 
	#COPY_BACK
 4

	)

42 
	#AD_RANDOM
 1

	)

43 
	#AD_COPYBACK
 2

	)

44 
	#AD_TWOPLANE
 4

	)

45 
	#AD_INTERLEAVE
 8

	)

46 
	#AD_TWOPLANE_READ
 16

	)

48 
	#READ
 1

	)

49 
	#WRITE
 0

	)

57 
	#CHANNEL_IDLE
 000

	)

58 
	#CHANNEL_C_A_TRANSFER
 3

	)

59 
	#CHANNEL_GC
 4

	)

61 
	#CHANNEL_GC_ERASE
 5

	)

64 
	#CHANNEL_DATA_TRANSFER
 7

	)

65 
	#CHANNEL_TRANSFER
 8

	)

66 
	#CHANNEL_UNKNOWN
 9

	)

68 
	#CHIP_IDLE
 100

	)

69 
	#CHIP_WRITE_BUSY
 101

	)

70 
	#CHIP_READ_BUSY
 102

	)

71 
	#CHIP_C_A_TRANSFER
 103

	)

73 
	#CHIP_WRITE_DATA_CMD_BUSY
 104

	)

74 
	#CHIP_GC_RW_BUSY
 105

	)

76 
	#CHIP_DATA_TRANSFER
 107

	)

77 
	#CHIP_WAIT
 108

	)

78 
	#CHIP_ERASE_BUSY
 109

79 
	#CHIP_COPYBACK_BUSY
 110

	)

80 
	#UNKNOWN
 111

	)

82 
	#SR_WAIT
 200

	)

83 
	#SR_R_C_A_TRANSFER
 201

	)

84 
	#SR_R_READ
 202

	)

85 
	#SR_R_DATA_TRANSFER
 203

	)

86 
	#SR_W_C_A_DATA_TRANSFER
 204

	)

87 
	#SR_W_DATA_TRANSFER_ONE_PROG_OF_ITERATIONS
 205

	)

88 
	#SR_W_DATA_TRANSFER_ONE_VERIFY_OF_ITERATIONS
 207

	)

89 
	#SR_W_TRANSFER
 206

	)

92 
	#SR_W_DATA_TRANSFER
 208

93 

	)

94 
	#SR_COMPLETE
 299

	)

96 
	#REQUEST_IN
 300

97 
	#OUTPUT
 301

98 

	)

99 
	#GC_WAIT
 400

	)

100 
	#GC_ERASE_C_A
 401

	)

101 
	#GC_COPY_BACK
 402

	)

102 
	#GC_COMPLETE
 403

	)

103 
	#GC_INTERRUPT
 0

	)

104 
	#GC_UNINTERRUPT
 1

	)

106 
	#CHANNEL
(
l¢
Ë÷¢&0x0000)>>16

	)

107 
	#chù
(
l¢
Ë÷¢&0x0000)>>16

	)

108 
	#dõ
(
l¢
Ë÷¢&0x0000)>>16

	)

109 
	#PLANE
(
l¢
Ë÷¢&0x0000)>>16

	)

110 
	#BLOKC
(
l¢
Ë÷¢&0x0000)>>16

	)

111 
	#PAGE
(
l¢
Ë÷¢&0x0000)>>16

	)

112 
	#SUBPAGE
(
l¢
Ë÷¢&0x0000)>>16

	)

114 
	#PG_SUB
 0xffffffff

	)

120 
	#TRUE
 1

	)

121 
	#FALSE
 0

	)

122 
	#SUCCESS
 1

	)

123 
	#FAILURE
 0

	)

124 
	#ERROR
 -1

	)

125 
	#INFEASIBLE
 -2

	)

126 
	#OVERFLOW
 -3

	)

127 
	tSètus
;

129 
	sac_time_ch¨a˘îi°ics
 {

130 
	mtPROG
;

132 
	mtPROG_r_phy
;

134 
	mtPROG_w_tŸÆ
;

135 
	mtPROG_Nw_cy˛e
;

136 
	mtPROG_Tw_cy˛e
;

137 
	mtPROG_w_¥ogam
;

138 
	mtPROG_w_vîify
;

139 
	mtPROG_buf„r
;

143 
	mtDBSY
;

144 
	mtBERS
;

145 
	mtCLS
;

146 
	mtCLH
;

147 
	mtCS
;

148 
	mtCH
;

149 
	mtWP
;

150 
	mtALS
;

151 
	mtALH
;

152 
	mtDS
;

153 
	mtDH
;

154 
	mtWC
;

155 
	mtWH
;

156 
	mtADL
;

157 
	mtR
;

158 
	mtAR
;

159 
	mtCLR
;

160 
	mtRR
;

161 
	mtRP
;

162 
	mtWB
;

163 
	mtRC
;

164 
	mtREA
;

165 
	mtCEA
;

166 
	mtRHZ
;

167 
	mtCHZ
;

168 
	mtRHOH
;

169 
	mtRLOH
;

170 
	mtCOH
;

171 
	mtREH
;

172 
	mtIR
;

173 
	mtRHW
;

174 
	mtWHR
;

175 
	mtRST
;

176 } 
	gac_timög
;

179 
	sssd_öfo
 {

181 
	mdebug_sign
;

182 
	mgc_su•íd_times
;

183 
	mwrôe_su•íd_times
;

184 
	mgc_su•íd_doög
;

185 
	mwrôe_su•íd_doög
;

186 
	m‹igöÆ_tŸÆ_∑ges_numbî
;

187 
	ma·î_¥e_¥o˚ss_∑ges_numbî
;

188 
	ma·î_¥e_¥o˚s£_™d_aged_∑ges_numbî
;

189 
	mœ°_tŸÆ_avaûabÀ_∑ges_numbî
;

196 
	mssd_íîgy
;

197 
öt64_t
 
	mcuºít_time
;

198 
öt64_t
 
	m√xt_ªque°_time
;

199 
	mªÆ_time_subªq
;

200 
	mÊag
;

201 
	ma˘ive_Êag
;

202 
	m∑ge
;

204 
	mtokí
;

205 
	mgc_ªque°
;

207 
	mwrôe_ªque°_cou¡
;

208 
	mªad_ªque°_cou¡
;

209 
öt64_t
 
	mwrôe_avg
;

210 
öt64_t
 
	mªad_avg
;

212 
	mmö_l¢
;

213 
	mmax_l¢
;

214 
	mªad_cou¡
;

215 
	m¥ogøm_cou¡
;

216 
	mîa£_cou¡
;

217 
	mdúe˘_îa£_cou¡
;

218 
	mc›y_back_cou¡
;

219 
	mm_∂™e_ªad_cou¡
;

220 
	mm_∂™e_¥og_cou¡
;

221 
	möãæóve_cou¡
;

222 
	möãæóve_ªad_cou¡
;

223 
	möãr_m∂™e_cou¡
;

224 
	möãr_m∂™e_¥og_cou¡
;

225 
	möãæóve_îa£_cou¡
;

226 
	mm∂™e_îa£_c⁄ut
;

227 
	möãæóve_m∂™e_îa£_cou¡
;

228 
	mgc_c›y_back
;

229 
	mwrôe_Êash_cou¡
;

230 
	mwa°e_∑ge_cou¡
;

231 
	mave_ªad_size
;

232 
	mave_wrôe_size
;

233 
	mªque°_queue_Àngth
;

234 
	mupd©e_ªad_cou¡
;

236 
	m∑ømëîfûíame
[30];

237 
	måa˚fûíame
[30];

238 
	mouçutfûíame
[30];

239 
	m°©i°icfûíame
[30];

240 
	m°©i°icfûíame2
[30];

242 
FILE
 *
	mouçutfûe
;

243 
FILE
 *
	måa˚fûe
;

244 
FILE
 *
	m°©i°icfûe
;

245 
FILE
 *
	m°©i°icfûe2
;

247 
∑ømëî_vÆue
 *
	m∑ømëî
;

248 
døm_öfo
 *
	mdøm
;

249 
ªque°
 *
	mªque°_queue
;

250 
ªque°
 *
	mªque°_èû
;

251 
sub_ªque°
 *
	msubs_w_hód
;

252 
sub_ªque°
 *
	msubs_w_èû
;

253 
evít_node
 *
	mevít
;

254 
ch™√l_öfo
 *
	mch™√l_hód
;

258 
	sch™√l_öfo
 {

259 
	mchù
;

260 
	mªad_cou¡
;

261 
	m¥ogøm_cou¡
;

262 
	mîa£_cou¡
;

263 
	mtokí
;

265 
	mcuºít_°©e
;

266 
	m√xt_°©e
;

267 
öt64_t
 
	mcuºít_time
;

268 
öt64_t
 
	m√xt_°©e_¥edi˘_time
;

270 
evít_node
 *
	mevít
;

271 
sub_ªque°
 *
	msubs_r_hód
;

272 
sub_ªque°
 *
	msubs_r_èû
;

273 
sub_ªque°
 *
	msubs_w_hód
;

274 
sub_ªque°
 *
	msubs_w_èû
;

275 
gc_›î©i⁄
 *
	mgc_comm™d
;

276 
chù_öfo
 *
	mchù_hód
;

284 
	schù_öfo
 {

285 
	mdõ_num
;

286 
	m∂™e_num_dõ
;

287 
	mblock_num_∂™e
;

288 
	m∑ge_num_block
;

289 
	msub∑ge_num_∑ge
;

290 
	mîs_limô
;

291 
	mtokí
;

293 
	mcuºít_°©e
;

294 
	m√xt_°©e
;

295 
öt64_t
 
	mcuºít_time
;

296 
öt64_t
 
	m√xt_°©e_¥edi˘_time
;

298 
	mªad_cou¡
;

299 
	m¥ogøm_cou¡
;

300 
	mîa£_cou¡
;

302 
ac_time_ch¨a˘îi°ics
 
	mac_timög
;

303 
dõ_öfo
 *
	mdõ_hód
;

305 
	mwrôe_¥ìm±ive_sign
;

306 
	mnum_w_cy˛e
;

310 
	mchù_°©us
;

311 
	mchù_°©us_time
;

312 
	mchù_ªad_queue_Àngth
;

313 
	mchù_wrôe_queue_Àngth
;

315 
sub_ªque°
 *
	m°‹edsub
;

319 
	sdõ_öfo
 {

321 
	mtokí
;

322 
∂™e_öfo
 *
	m∂™e_hód
;

327 
	s∂™e_öfo
 {

328 
	madd_ªg_µn
;

335 
	m‰ì_∑ge
;

336 
	mîs_övÆid
;

337 
	ma˘ive_block
;

338 
	mˇn_îa£_block
;

339 
dúe˘_îa£
 *
	mîa£_node
;

340 
blk_öfo
 *
	mblk_hód
;

344 
	sblk_öfo
 {

345 
	mîa£_cou¡
;

346 
	m‰ì_∑ge_num
;

347 
	mövÆid_∑ge_num
;

348 
	mœ°_wrôe_∑ge
;

349 
∑ge_öfo
 *
	m∑ge_hód
;

353 
	s∑ge_öfo
 {

354 
	mvÆid_°©e
;

355 
	m‰ì_°©e
;

356 
	mÕn
;

357 
	mwrôãn_cou¡
;

361 
	sdøm_öfo
 {

362 
	mdøm_ˇ∑côy
;

363 
öt64_t
 
	mcuºít_time
;

365 
døm_∑ømëî
 *
	mdøm_∑ømãrs
;

366 
m≠_öfo
 *
	mm≠
;

367 
buf„r_öfo
 *
	mbuf„r
;

381 
	sbuf„r_group
 {

382 
TREE_NODE
 
	mnode
;

383 
buf„r_group
 *
	mLRU_lök_√xt
;

384 
buf„r_group
 *
	mLRU_lök_¥e
;

386 
	mgroup
;

387 
	m°‹ed
;

388 
	mdúty_˛ón
;

389 
	mÊag
;

390 } 
	tbuf_node
;

393 
	sdøm_∑ømëî
 {

394 
	ma˘ive_cuºít
;

395 
	m¶ìp_cuºít
;

396 
	mvﬁège
;

397 
	m˛ock_time
;

401 
	sm≠_öfo
 {

402 
íåy
 *
	mm≠_íåy
;

403 
buf„r_öfo
 *
	m©èch_öfo
;

407 
	sc⁄åﬁÀr_öfo
 {

408 
	m‰equícy
;

409 
öt64_t
 
	m˛ock_time
;

410 
	mpowî
;

414 
	sªque°
 {

415 
öt64_t
 
	mtime
;

416 
	ml¢
;

417 
	msize
;

418 
	m›î©i⁄
;

420 *
	m√ed_di°r_Êag
;

421 
	mcom∂ëe_l¢_cou¡
;

423 
	mdi°ri_Êag
;

425 
öt64_t
 
	mbegö_time
;

426 
öt64_t
 
	mª•⁄£_time
;

427 
	míîgy_c⁄sum±i⁄
;

429 
sub_ªque°
 *
	msubs
;

430 
ªque°
 *
	m√xt_node
;

434 
	ssub_ªque°
 {

435 
	mÕn
;

436 
	mµn
;

437 
	m›î©i⁄
;

438 
	msize
;

441 
	mcuºít_°©e
;

442 
öt64_t
 
	mcuºít_time
;

443 
	m√xt_°©e
;

444 
öt64_t
 
	m√xt_°©e_¥edi˘_time
;

445 
	m°©e
;

448 
öt64_t
 
	mbegö_time
;

449 
öt64_t
 
	mcom∂ëe_time
;

451 
loˇl
 *
	mloˇti⁄
;

452 
sub_ªque°
 *
	m√xt_subs
;

453 
sub_ªque°
 *
	m√xt_node
;

454 
sub_ªque°
 *
	mupd©e
;

458 
öt64_t
 
	m£rvi˚d_time
;

459 
öt64_t
 
	m¶ack_time
;

460 
	mœ°_sign
;

468 
	sevít_node
 {

469 
	mty≥
;

470 
öt64_t
 
	m¥edi˘_time
;

471 
evít_node
 *
	m√xt_node
;

472 
evít_node
 *
	m¥e_node
;

475 
	s∑ømëî_vÆue
 {

476 
	mchù_num
;

477 
	mdøm_ˇ∑côy
;

478 
	m˝u_sdøm
;

480 
	mch™√l_numbî
;

481 
	mchù_ch™√l
[100];

483 
	mdõ_chù
;

484 
	m∂™e_dõ
;

485 
	mblock_∂™e
;

486 
	m∑ge_block
;

487 
	msub∑ge_∑ge
;

489 
	m∑ge_ˇ∑côy
;

490 
	msub∑ge_ˇ∑côy
;

493 
	mîs_limô
;

494 
	maddªss_m≠pög
;

495 
	mwór_Àvñög
;

496 
	mgc
;

497 
	m˛ón_ö_background
;

498 
	mÆloc_poﬁ
;

499 
	movî¥ovide
;

500 
	mgc_thªshﬁd
;

502 
	m›î©ög_cuºít
;

503 
	msuµly_vﬁège
;

504 
	mdøm_a˘ive_cuºít
;

505 
	mdøm_°™dby_cuºít
;

506 
	mdøm_ª‰esh_cuºít
;

507 
	mdøm_vﬁège
;

509 
	mbuf„r_m™agemít
;

510 
	mschedulög_Æg‹ôhm
;

511 
	mquick_ødio
;

512 
	mªœãd_m≠pög
;

514 
	mtime_°ï
;

515 
	msmÆl_œrge_wrôe
;

517 
	m°rùög
;

518 
	möãæóvög
;

519 
	mpùñöög
;

520 
	mthªshﬁd_fixed_adju°
;

521 
	mthªshﬁd_vÆue
;

522 
	ma˘ive_wrôe
;

523 
	mgc_h¨d_thªshﬁd
;

524 
	mÆloˇti⁄_scheme
;

525 
	m°©ic_Æloˇti⁄
;

526 
	mdy«mic_Æloˇti⁄
;

527 
	madv™˚d_comm™ds
;

528 
	mad_¥i‹ôy
;

529 
	mad_¥i‹ôy2
;

530 
	mgªed_CB_ad
;

531 
	mgªed_MPW_ad
;

532 
	maged
;

533 
	maged_øtio
;

534 
	mqueue_Àngth
;

536 
ac_time_ch¨a˘îi°ics
 
	mtime_ch¨a˘îi°ics
;

542 
	síåy
 {

543 
	m≤
;

544 
	m°©e
;

548 
	sloˇl
 {

549 
	mch™√l
;

550 
	mchù
;

551 
	mdõ
;

552 
	m∂™e
;

553 
	mblock
;

554 
	m∑ge
;

555 
	msub_∑ge
;

559 
	sgc_öfo
 {

560 
öt64_t
 
	mbegö_time
;

561 
	mc›y_back_cou¡
;

562 
	mîa£_cou¡
;

563 
öt64_t
 
	m¥o˚ss_time
;

564 
	míîgy_c⁄sum±i⁄
;

568 
	sdúe˘_îa£
 {

569 
	mblock
;

570 
dúe˘_îa£
 *
	m√xt_node
;

577 
	sgc_›î©i⁄
 {

578 
	mchù
;

579 
	mdõ
;

580 
	m∂™e
;

581 
	mblock
;

582 
	m∑ge
;

583 
	m°©e
;

584 
	m¥i‹ôy
;

585 
gc_›î©i⁄
 *
	m√xt_node
;

587 
	mc›y_∑ge_numbî
;

588 
	mc›y_vÆid_numbî
;

589 
	mpos_ö_c›y
;

590 
	mªad
;

591 
	mwrôe
;

592 
	mîa£
;

593 
	mvi˘im_block_numbî
;

595 
	mgc_ªad_ö√r
;

596 
	mgc_wrôe_ö√r
;

597 
	mªad_wrôe_íd
;

598 
	mœ°_∑ge_ö_vi˘im_dól
;

600 
	mvi˘im_block_‰ì∑ge_°©i°ic
;

601 
	mchù_°©us
;

602 
	mchù_√xt_°©us
;

603 
	msign_f‹_¥ìm±ive
;

604 
	mchù_√xt_¥edi˘_time_diff
;

611 
	sDøm_wrôe_m≠
 {

612 
	m°©e
;

613 } 
	tDøm_wrôe_m≠
;

616 
ssd_öfo
 *
öôüti⁄
(ssd_info *);

618 
∑ømëî_vÆue
 *
lﬂd_∑ømëîs
(
∑ømëî_fûe
[30]);

620 
∑ge_öfo
 *
öôülize_∑ge
(∑ge_öfÿ*
p_∑ge
);

622 
blk_öfo
 *
öôülize_block
(blk_öfÿ*
p_block
, 
∑ømëî_vÆue
 *
∑ømëî
);

624 
∂™e_öfo
 *
öôülize_∂™e
(∂™e_öfÿ*
p_∂™e
, 
∑ømëî_vÆue
 *
∑ømëî
);

626 
dõ_öfo
 *
öôülize_dõ
(dõ_öfÿ*
p_dõ
, 
∑ømëî_vÆue
 *
∑ømëî
, 
cuºít_time
);

628 
chù_öfo
 *
öôülize_chù
(chù_öfÿ*
p_chù
, 
∑ømëî_vÆue
 *
∑ømëî
, 
cuºít_time
);

630 
ssd_öfo
 *
öôülize_ch™√ls
(ssd_öfÿ*
ssd
);

632 
døm_öfo
 *
öôülize_døm
(
ssd_öfo
 *
ssd
);

	@pagemap.h

18 #i‚de‡
PAGEMAP_H


19 
	#PAGEMAP_H
 10000

	)

21 
	~<sys/ty≥s.h
>

22 
	~"öôülize.h
"

24 
	#MAX_INT64
 0x7ffffffffffffffÊl

	)

26 
fûe_as£π
(
îr‹
, *
s
);

28 
Æloc_as£π
(*
p
, *
s
);

30 
åa˚_as£π
(
öt64_t
 
time_t
, 
devi˚
, 
l¢
, 
size
, 
›e
);

32 
loˇl
 *
föd_loˇti⁄
(
ssd_öfo
 *
ssd
, 
µn
);

35 
föd_µn
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

36 
block
, 
∑ge
);

38 
ssd_öfo
 *
¥e_¥o˚ss_∑ge
(ssd_öfÿ*
ssd
);

40 
gë_µn_f‹_¥e_¥o˚ss
(
ssd_öfo
 *
ssd
, 
l¢
);

42 
ssd_öfo
 *

43 
gë_µn
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

44 
sub_ªque°
 *
sub
);

46 
gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
Êag
);

49 
gc_dúe˘_îa£
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

51 
unöãºu±_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

53 
öãºu±_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

54 
gc_›î©i⁄
 *
gc_node
);

56 
decide_gc_övoke
(
ssd_öfo
 *
ssd
, 
ch™√l
);

58 
£t_íåy_°©e
(
ssd_öfo
 *
ssd
, 
l¢
, 
size
);

61 
gë_µn_f‹_gc
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
);

63 
îa£_›î©i⁄
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ
, 
∂™e
,

64 
block
);

66 
îa£_∂™es
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
chù
, 
dõ1
, 
∂™e1
,

67 
comm™d
);

69 
move_∑ge
(
ssd_öfo
 *
ssd
, 
loˇl
 *
loˇti⁄
, *
å™s„r_size
);

71 
gc_f‹_ch™√l
(
ssd_öfo
 *
ssd
, 
ch™√l
);

73 
dñëe_gc_node
(
ssd_öfo
 *
ssd
, 
ch™√l
, 
gc_›î©i⁄
 *
gc_node
);

	@ssd.h

18 
	~<°dlib.h
>

19 
	~<°dio.h
>

20 
	~<time.h
>

21 
	~<°rög.h
>

22 
	~<sys/ty≥s.h
>

23 
	~"öôülize.h
"

24 
	~"Êash.h
"

25 
	~"∑gem≠.h
"

27 
	#MAX_INT64
 0x7ffffffffffffffÊl

	)

36 
¥ötfsub_ªque°_°©us
(
ssd_öfo
 *
ssd
);

37 
¥ötf_ssd_ªque°_queue
(
ssd_öfo
 *
ssd
);

39 
¥ötf_ssd_gc_node
(
ssd_öfo
 *
ssd
);

41 
judgög_ªad_ö_gc_chù
(
ssd_öfo
 *
ssd
, 
ch™√l
);

42 
¥ötf_evîy_chù_ªad_subªque°
(
ssd_öfo
 *
ssd
);

43 
¥ötf_evîy_chù_°©ic_subªque°
(
ssd_öfo
 *
ssd
);

45 
ˇlc_ªq_¶ack_time
(
ªque°
 * 
ªq
);

47 
¥ötf_gc_node_öf‹m©i⁄
(
gc_›î©i⁄
* 
gc_node
);

49 
ssd_öfo
 *
simuœã
(ssd_info *);

51 
gë_ªque°s
(
ssd_öfo
 *);

53 
ssd_öfo
 *
buf„r_m™agemít
(ssd_info *);

55 
Õn2µn
(
ssd_öfo
 *, 
l¢
);

57 
ssd_öfo
 *
di°ribuã
(ssd_info *);

59 
åa˚_ouçut
(
ssd_öfo
 *);

61 
°©i°ic_ouçut
(
ssd_öfo
 *);

63 
size
();

65 
å™s„r_size
(
ssd_öfo
 *, , , 
ªque°
 *);

67 
öt64_t
 
föd_√¨e°_evít
(
ssd_öfo
 *);

69 
‰ì_Æl_node
(
ssd_öfo
 *);

71 
ssd_öfo
 *
make_aged
(ssd_info *);

73 
ssd_öfo
 *
no_buf„r_di°ribuã
(ssd_info *);

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
32
1289
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/avlTree.c
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/avlTree.h
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/flash.c
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/flash.h
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/initialize.c
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/initialize.h
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/pagemap.c
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/pagemap.h
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/ssd.c
/home/lxc/ssdsimnew/new_for_picture_codes/has_all_suspend_backup_new_changed/ssd.h
/usr/include/ctype.h
/usr/include/malloc.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
avlTree.h
flash.h
initialize.h
pagemap.h
ssd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
